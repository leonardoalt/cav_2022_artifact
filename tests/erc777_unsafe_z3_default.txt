### Running with solver z3
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'7737'[39m,
      formattedMessage: [32m'Warning: Inline assembly may cause SMTChecker to produce spurious warnings (false positives).\n'[39m +
        [32m'  --> contracts/utils/Address.sol:32:9:\n'[39m +
        [32m'   |\n'[39m +
        [32m'32 |         assembly {\n'[39m +
        [32m'   |         ^ (Relevant source part starts here and spans across multiple lines).\n'[39m +
        [32m'\n'[39m,
      message: [32m'Inline assembly may cause SMTChecker to produce spurious warnings (false positives).'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'4588'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet implement this type of function call.\n'[39m +
        [32m'   --> contracts/utils/Address.sol:185:51:\n'[39m +
        [32m'    |\n'[39m +
        [32m'185 |         (bool success, bytes memory returndata) = target.delegatecall(data);\n'[39m +
        [32m'    |                                                   ^^^^^^^^^^^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet implement this type of function call.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'7737'[39m,
      formattedMessage: [32m'Warning: Inline assembly may cause SMTChecker to produce spurious warnings (false positives).\n'[39m +
        [32m'   --> contracts/utils/Address.sol:207:17:\n'[39m +
        [32m'    |\n'[39m +
        [32m'207 |                 assembly {\n'[39m +
        [32m'    |                 ^ (Relevant source part starts here and spans across multiple lines).\n'[39m +
        [32m'\n'[39m,
      message: [32m'Inline assembly may cause SMTChecker to produce spurious warnings (false positives).'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation might happen here.\n'[39m +
        [32m'  --> fileName:16:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'16 | \t\tassert(prevSupply == postSupply);\n'[39m +
        [32m'   | \t\t^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation might happen here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: {
    [32m'contracts/token/ERC20/IERC20.sol'[39m: { id: [33m0[39m },
    [32m'contracts/token/ERC777/ERC777.sol'[39m: { id: [33m1[39m },
    [32m'contracts/token/ERC777/IERC777.sol'[39m: { id: [33m2[39m },
    [32m'contracts/token/ERC777/IERC777Recipient.sol'[39m: { id: [33m3[39m },
    [32m'contracts/token/ERC777/IERC777Sender.sol'[39m: { id: [33m4[39m },
    [32m'contracts/utils/Address.sol'[39m: { id: [33m5[39m },
    [32m'contracts/utils/Context.sol'[39m: { id: [33m6[39m },
    [32m'contracts/utils/introspection/IERC1820Registry.sol'[39m: { id: [33m7[39m },
    fileName: { id: [33m8[39m }
  }
}
### End output


####### Final solving and time report:
Solver z3 did not solve in 6522.4696300029755ms
