[ [32m'/home/solc-js'[39m, [32m'file_level'[39m, [32m'10'[39m ]
/home/solc-js/regression/file_level
### Running /home/solc-js/regression/file_level/constant_easy.sol ...
### ... with solver Eldarica Vanilla
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m' --> test:6:3:\n'[39m +
        [32m'  |\n'[39m +
        [32m'6 | \t\tassert(z == 41);\n'[39m +
        [32m'  | \t\t^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### ... with solver Spacer Quant
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m' --> test:6:3:\n'[39m +
        [32m'  |\n'[39m +
        [32m'6 | \t\tassert(z == 41);\n'[39m +
        [32m'  | \t\t^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### Running /home/solc-js/regression/file_level/constant_string_at_file_level.sol ...
### ... with solver Eldarica Vanilla
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m'  --> test:35:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'35 | \t\tassert(w == 59); // should fail\n'[39m +
        [32m'   | \t\t^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### ... with solver Spacer Quant
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m'  --> test:35:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'35 | \t\tassert(w == 59); // should fail\n'[39m +
        [32m'   | \t\t^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### Running /home/solc-js/regression/file_level/easy.sol ...
### ... with solver Eldarica Vanilla
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m'  --> test:11:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'11 | \t\tassert(f(8) == 9); // should fail\n'[39m +
        [32m'   | \t\t^^^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### ... with solver Spacer Quant
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m'  --> test:11:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'11 | \t\tassert(f(8) == 9); // should fail\n'[39m +
        [32m'   | \t\t^^^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### Running /home/solc-js/regression/file_level/enum.sol ...
### ... with solver Eldarica Vanilla
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m'  --> test:16:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'16 | \t\tassert(e2 == E.READ); // should fail\n'[39m +
        [32m'   | \t\t^^^^^^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### ... with solver Spacer Quant
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m'  --> test:16:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'16 | \t\tassert(e2 == E.READ); // should fail\n'[39m +
        [32m'   | \t\t^^^^^^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### Running /home/solc-js/regression/file_level/free_constant_1.sol ...
### ... with solver Eldarica Vanilla
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### ... with solver Spacer Quant
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### Running /home/solc-js/regression/file_level/free_constant_2.sol ...
### ... with solver Eldarica Vanilla
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'2018'[39m,
      formattedMessage: [32m'Warning: Function state mutability can be restricted to pure\n'[39m +
        [32m' --> test:6:2:\n'[39m +
        [32m'  |\n'[39m +
        [32m'6 | \tfunction i() public returns (uint, ActionChoices, bytes32) {\n'[39m +
        [32m'  | \t^ (Relevant source part starts here and spans across multiple lines).\n'[39m +
        [32m'\n'[39m,
      message: [32m'Function state mutability can be restricted to pure'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### ... with solver Spacer Quant
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'2018'[39m,
      formattedMessage: [32m'Warning: Function state mutability can be restricted to pure\n'[39m +
        [32m' --> test:6:2:\n'[39m +
        [32m'  |\n'[39m +
        [32m'6 | \tfunction i() public returns (uint, ActionChoices, bytes32) {\n'[39m +
        [32m'  | \t^ (Relevant source part starts here and spans across multiple lines).\n'[39m +
        [32m'\n'[39m,
      message: [32m'Function state mutability can be restricted to pure'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### Running /home/solc-js/regression/file_level/free_function_1.sol ...
### ... with solver Eldarica Vanilla
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### ... with solver Spacer Quant
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### Running /home/solc-js/regression/file_level/free_function_2.sol ...
### ... with solver Eldarica Vanilla
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### ... with solver Spacer Quant
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### Running /home/solc-js/regression/file_level/free_function_3.sol ...
### ... with solver Eldarica Vanilla
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### ... with solver Spacer Quant
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### Running /home/solc-js/regression/file_level/free_function_4.sol ...
### ... with solver Eldarica Vanilla
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'2072'[39m,
      formattedMessage: [32m'Warning: Unused local variable.\n'[39m +
        [32m' --> test:2:2:\n'[39m +
        [32m'  |\n'[39m +
        [32m'2 | \tufixed a = uint64(1) + ufixed(2);\n'[39m +
        [32m'  | \t^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Unused local variable.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### ... with solver Spacer Quant
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'2072'[39m,
      formattedMessage: [32m'Warning: Unused local variable.\n'[39m +
        [32m' --> test:2:2:\n'[39m +
        [32m'  |\n'[39m +
        [32m'2 | \tufixed a = uint64(1) + ufixed(2);\n'[39m +
        [32m'  | \t^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Unused local variable.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### Running /home/solc-js/regression/file_level/free_function_5.sol ...
### ... with solver Eldarica Vanilla
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6133'[39m,
      formattedMessage: [32m'Warning: Statement has no effect.\n'[39m +
        [32m' --> test:3:2:\n'[39m +
        [32m'  |\n'[39m +
        [32m'3 | \t(abi.encode, "");\n'[39m +
        [32m'  | \t^^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Statement has no effect.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### ... with solver Spacer Quant
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6133'[39m,
      formattedMessage: [32m'Warning: Statement has no effect.\n'[39m +
        [32m' --> test:3:2:\n'[39m +
        [32m'  |\n'[39m +
        [32m'3 | \t(abi.encode, "");\n'[39m +
        [32m'  | \t^^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Statement has no effect.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### Running /home/solc-js/regression/file_level/free_function_and_constant_1.sol ...
### ... with solver Eldarica Vanilla
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### ... with solver Spacer Quant
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### Running /home/solc-js/regression/file_level/free_namesake_contract_function.sol ...
### ... with solver Eldarica Vanilla
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'2519'[39m,
      formattedMessage: [32m'Warning: This declaration shadows an existing declaration.\n'[39m +
        [32m' --> test:8:2:\n'[39m +
        [32m'  |\n'[39m +
        [32m'8 | \tfunction f() internal pure returns (uint) { return 42; }\n'[39m +
        [32m'  | \t^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n'[39m +
        [32m'Note: The shadowed declaration is here:\n'[39m +
        [32m' --> test:1:1:\n'[39m +
        [32m'  |\n'[39m +
        [32m'1 | function f() pure returns (uint) { return 1337; }\n'[39m +
        [32m'  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'This declaration shadows an existing declaration.'[39m,
      secondarySourceLocations: [36m[Array][39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m' --> test:6:3:\n'[39m +
        [32m'  |\n'[39m +
        [32m'6 | \t\tassert(f() == 1337); // should fail\n'[39m +
        [32m'  | \t\t^^^^^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### ... with solver Spacer Quant
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'2519'[39m,
      formattedMessage: [32m'Warning: This declaration shadows an existing declaration.\n'[39m +
        [32m' --> test:8:2:\n'[39m +
        [32m'  |\n'[39m +
        [32m'8 | \tfunction f() internal pure returns (uint) { return 42; }\n'[39m +
        [32m'  | \t^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n'[39m +
        [32m'Note: The shadowed declaration is here:\n'[39m +
        [32m' --> test:1:1:\n'[39m +
        [32m'  |\n'[39m +
        [32m'1 | function f() pure returns (uint) { return 1337; }\n'[39m +
        [32m'  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'This declaration shadows an existing declaration.'[39m,
      secondarySourceLocations: [36m[Array][39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m' --> test:6:3:\n'[39m +
        [32m'  |\n'[39m +
        [32m'6 | \t\tassert(f() == 1337); // should fail\n'[39m +
        [32m'  | \t\t^^^^^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### Running /home/solc-js/regression/file_level/free_runtimecode.sol ...
### ... with solver Eldarica Vanilla
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'7507'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet support this expression.\n'[39m +
        [32m' --> test:6:9:\n'[39m +
        [32m'  |\n'[39m +
        [32m'6 | \treturn type(C).runtimeCode.length > 20;\n'[39m +
        [32m'  | \t       ^^^^^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet support this expression.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m'  --> test:11:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m"11 | \t\tassert(test()); // should hold but SMTChecker doesn't know that\n"[39m +
        [32m'   | \t\t^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### ... with solver Spacer Quant
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'7507'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet support this expression.\n'[39m +
        [32m' --> test:6:9:\n'[39m +
        [32m'  |\n'[39m +
        [32m'6 | \treturn type(C).runtimeCode.length > 20;\n'[39m +
        [32m'  | \t       ^^^^^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet support this expression.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m'  --> test:11:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m"11 | \t\tassert(test()); // should hold but SMTChecker doesn't know that\n"[39m +
        [32m'   | \t\t^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### Running /home/solc-js/regression/file_level/libraries_from_free.sol ...
### ... with solver Eldarica Vanilla
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'4588'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet implement this type of function call.\n'[39m +
        [32m'  --> test:11:10:\n'[39m +
        [32m'   |\n'[39m +
        [32m'11 | \treturn (L.pub(), L.inter());\n'[39m +
        [32m'   | \t        ^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet implement this type of function call.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m'  --> test:17:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m"17 | \t\tassert(x == 7); // should hold but SMTChecker doesn't implement delegatecall\n"[39m +
        [32m'   | \t\t^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m'  --> test:18:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'18 | \t\tassert(y == 9); // should fail\n'[39m +
        [32m'   | \t\t^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### ... with solver Spacer Quant
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'4588'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet implement this type of function call.\n'[39m +
        [32m'  --> test:11:10:\n'[39m +
        [32m'   |\n'[39m +
        [32m'11 | \treturn (L.pub(), L.inter());\n'[39m +
        [32m'   | \t        ^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet implement this type of function call.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m'  --> test:17:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m"17 | \t\tassert(x == 7); // should hold but SMTChecker doesn't implement delegatecall\n"[39m +
        [32m'   | \t\t^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m'  --> test:18:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'18 | \t\tassert(y == 9); // should fail\n'[39m +
        [32m'   | \t\t^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### Running /home/solc-js/regression/file_level/new_operator.sol ...
### ... with solver Eldarica Vanilla
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'4588'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet implement this type of function call.\n'[39m +
        [32m' --> test:6:10:\n'[39m +
        [32m'  |\n'[39m +
        [32m'6 | \treturn (new C()).x();\n'[39m +
        [32m'  | \t        ^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet implement this type of function call.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m'  --> test:11:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m"11 | \t\tassert(test() == 2); // should hold but the SMTChecker doesn't support `new`\n"[39m +
        [32m'   | \t\t^^^^^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### ... with solver Spacer Quant
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'4588'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet implement this type of function call.\n'[39m +
        [32m' --> test:6:10:\n'[39m +
        [32m'  |\n'[39m +
        [32m'6 | \treturn (new C()).x();\n'[39m +
        [32m'  | \t        ^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet implement this type of function call.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m'  --> test:11:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m"11 | \t\tassert(test() == 2); // should hold but the SMTChecker doesn't support `new`\n"[39m +
        [32m'   | \t\t^^^^^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### Running /home/solc-js/regression/file_level/overloads.sol ...
### ... with solver Eldarica Vanilla
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m'  --> test:12:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'12 | \t\tassert(y == 4); // should fail\n'[39m +
        [32m'   | \t\t^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### ... with solver Spacer Quant
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m'  --> test:12:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'12 | \t\tassert(y == 4); // should fail\n'[39m +
        [32m'   | \t\t^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### Running /home/solc-js/regression/file_level/recursion.sol ...
### ... with solver Eldarica Vanilla
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m'  --> test:17:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'17 | \t\tassert(g(0, 1) == 0);\n'[39m +
        [32m'   | \t\t^^^^^^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m'  --> test:19:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'19 | \t\tassert(g(2, 3) == 8);\n'[39m +
        [32m'   | \t\t^^^^^^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m'  --> test:20:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'20 | \t\tassert(g(3, 10) == 59049);\n'[39m +
        [32m'   | \t\t^^^^^^^^^^^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### ... with solver Spacer Quant
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m'  --> test:17:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'17 | \t\tassert(g(0, 1) == 0);\n'[39m +
        [32m'   | \t\t^^^^^^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'5840'[39m,
      formattedMessage: [32m'Warning: CHC: 2 verification condition(s) could not be proved. Enable the model checker option "show unproved" to see all of them. Consider choosing a specific contract to be verified in order to reduce the solving problems. Consider increasing the timeout per query.\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: 2 verification condition(s) could not be proved. Enable the model checker option "show unproved" to see all of them. Consider choosing a specific contract to be verified in order to reduce the solving problems. Consider increasing the timeout per query.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### Running /home/solc-js/regression/file_level/struct.sol ...
### ... with solver Eldarica Vanilla
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m'  --> test:19:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'19 | \t\tassert(s.x == 3); // should fail\n'[39m +
        [32m'   | \t\t^^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m'  --> test:20:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'20 | \t\tassert(s.a[0] == 4); // should fail\n'[39m +
        [32m'   | \t\t^^^^^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### ... with solver Spacer Quant
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m'  --> test:19:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'19 | \t\tassert(s.x == 3); // should fail\n'[39m +
        [32m'   | \t\t^^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m'  --> test:20:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'20 | \t\tassert(s.a[0] == 4); // should fail\n'[39m +
        [32m'   | \t\t^^^^^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
{"/home/solc-js/regression/file_level/constant_easy.sol":[{"notProved":0,"unsafe":1,"safe":0,"winner":true},{"notProved":0,"unsafe":1,"safe":0,"winner":true}],"/home/solc-js/regression/file_level/constant_string_at_file_level.sol":[{"notProved":0,"unsafe":1,"safe":0,"winner":true},{"notProved":0,"unsafe":1,"safe":0,"winner":true}],"/home/solc-js/regression/file_level/easy.sol":[{"notProved":0,"unsafe":1,"safe":0,"winner":true},{"notProved":0,"unsafe":1,"safe":0,"winner":true}],"/home/solc-js/regression/file_level/enum.sol":[{"notProved":0,"unsafe":1,"safe":0,"winner":true},{"notProved":0,"unsafe":1,"safe":0,"winner":true}],"/home/solc-js/regression/file_level/free_constant_1.sol":[{"notProved":0,"unsafe":0,"safe":0,"winner":true},{"notProved":0,"unsafe":0,"safe":0,"winner":true}],"/home/solc-js/regression/file_level/free_constant_2.sol":[{"notProved":0,"unsafe":0,"safe":0,"winner":true},{"notProved":0,"unsafe":0,"safe":0,"winner":true}],"/home/solc-js/regression/file_level/free_function_1.sol":[{"notProved":0,"unsafe":0,"safe":0,"winner":true},{"notProved":0,"unsafe":0,"safe":0,"winner":true}],"/home/solc-js/regression/file_level/free_function_2.sol":[{"notProved":0,"unsafe":0,"safe":0,"winner":true},{"notProved":0,"unsafe":0,"safe":0,"winner":true}],"/home/solc-js/regression/file_level/free_function_3.sol":[{"notProved":0,"unsafe":0,"safe":0,"winner":true},{"notProved":0,"unsafe":0,"safe":0,"winner":true}],"/home/solc-js/regression/file_level/free_function_4.sol":[{"notProved":0,"unsafe":0,"safe":0,"winner":true},{"notProved":0,"unsafe":0,"safe":0,"winner":true}],"/home/solc-js/regression/file_level/free_function_5.sol":[{"notProved":0,"unsafe":0,"safe":0,"winner":true},{"notProved":0,"unsafe":0,"safe":0,"winner":true}],"/home/solc-js/regression/file_level/free_function_and_constant_1.sol":[{"notProved":0,"unsafe":0,"safe":0,"winner":true},{"notProved":0,"unsafe":0,"safe":0,"winner":true}],"/home/solc-js/regression/file_level/free_namesake_contract_function.sol":[{"notProved":0,"unsafe":1,"safe":0,"winner":true},{"notProved":0,"unsafe":1,"safe":0,"winner":true}],"/home/solc-js/regression/file_level/free_runtimecode.sol":[{"notProved":0,"unsafe":1,"safe":0,"winner":true},{"notProved":0,"unsafe":1,"safe":0,"winner":true}],"/home/solc-js/regression/file_level/libraries_from_free.sol":[{"notProved":0,"unsafe":2,"safe":0,"winner":true},{"notProved":0,"unsafe":2,"safe":0,"winner":true}],"/home/solc-js/regression/file_level/new_operator.sol":[{"notProved":0,"unsafe":1,"safe":0,"winner":true},{"notProved":0,"unsafe":1,"safe":0,"winner":true}],"/home/solc-js/regression/file_level/overloads.sol":[{"notProved":0,"unsafe":1,"safe":0,"winner":true},{"notProved":0,"unsafe":1,"safe":0,"winner":true}],"/home/solc-js/regression/file_level/recursion.sol":[{"notProved":0,"unsafe":3,"safe":0,"winner":true},{"notProved":2,"unsafe":1,"safe":0,"winner":false}],"/home/solc-js/regression/file_level/struct.sol":[{"notProved":0,"unsafe":2,"safe":0,"winner":true},{"notProved":0,"unsafe":2,"safe":0,"winner":true}]}
Category		Total		Eldarica		Spacer Quant
file_level		19		19		18
