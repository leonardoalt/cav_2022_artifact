[ [32m'/home/solc-js'[39m, [32m'types'[39m, [32m'10'[39m ]
/home/solc-js/regression/types
### Running /home/solc-js/regression/types/abi_type_type_1.sol ...
### ... with solver Eldarica Vanilla
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m' --> test:4:3:\n'[39m +
        [32m'  |\n'[39m +
        [32m'4 | \t\tassert(a == (x == 2)); // should fail\n'[39m +
        [32m'  | \t\t^^^^^^^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### ... with solver Spacer Quant
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m' --> test:4:3:\n'[39m +
        [32m'  |\n'[39m +
        [32m'4 | \t\tassert(a == (x == 2)); // should fail\n'[39m +
        [32m'  | \t\t^^^^^^^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### Running /home/solc-js/regression/types/abi_type_type_2.sol ...
### ... with solver Eldarica Vanilla
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m' --> test:3:3:\n'[39m +
        [32m'  |\n'[39m +
        [32m'3 | \t\tassert(abi.decode(d, (bool))); // should fail\n'[39m +
        [32m'  | \t\t^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### ... with solver Spacer Quant
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m' --> test:3:3:\n'[39m +
        [32m'  |\n'[39m +
        [32m'3 | \t\tassert(abi.decode(d, (bool))); // should fail\n'[39m +
        [32m'  | \t\t^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### Running /home/solc-js/regression/types/address_balance.sol ...
### ... with solver Eldarica Vanilla
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'2072'[39m,
      formattedMessage: [32m'Warning: Unused local variable.\n'[39m +
        [32m' --> test:4:3:\n'[39m +
        [32m'  |\n'[39m +
        [32m'4 | \t\tuint x = b.balance + 1000 ether;\n'[39m +
        [32m'  | \t\t^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Unused local variable.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m' --> test:5:3:\n'[39m +
        [32m'  |\n'[39m +
        [32m'5 | \t\tassert(a.balance > b.balance);\n'[39m +
        [32m'  | \t\t^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### ... with solver Spacer Quant
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'2072'[39m,
      formattedMessage: [32m'Warning: Unused local variable.\n'[39m +
        [32m' --> test:4:3:\n'[39m +
        [32m'  |\n'[39m +
        [32m'4 | \t\tuint x = b.balance + 1000 ether;\n'[39m +
        [32m'  | \t\t^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Unused local variable.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m' --> test:5:3:\n'[39m +
        [32m'  |\n'[39m +
        [32m'5 | \t\tassert(a.balance > b.balance);\n'[39m +
        [32m'  | \t\t^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### Running /home/solc-js/regression/types/address_call.sol ...
### ... with solver Eldarica Vanilla
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'2072'[39m,
      formattedMessage: [32m'Warning: Unused local variable.\n'[39m +
        [32m' --> test:9:18:\n'[39m +
        [32m'  |\n'[39m +
        [32m'9 | \t\t(bool success, bytes memory ret) = a.call(data);\n'[39m +
        [32m'  | \t\t               ^^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Unused local variable.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m'  --> test:10:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'10 | \t\tassert(success);\n'[39m +
        [32m'   | \t\t^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### ... with solver Spacer Quant
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'2072'[39m,
      formattedMessage: [32m'Warning: Unused local variable.\n'[39m +
        [32m' --> test:9:18:\n'[39m +
        [32m'  |\n'[39m +
        [32m'9 | \t\t(bool success, bytes memory ret) = a.call(data);\n'[39m +
        [32m'  | \t\t               ^^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Unused local variable.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m'  --> test:10:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'10 | \t\tassert(success);\n'[39m +
        [32m'   | \t\t^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### Running /home/solc-js/regression/types/address_delegatecall.sol ...
### ... with solver Eldarica Vanilla
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'2072'[39m,
      formattedMessage: [32m'Warning: Unused local variable.\n'[39m +
        [32m' --> test:9:18:\n'[39m +
        [32m'  |\n'[39m +
        [32m'9 | \t\t(bool success, bytes memory ret) = a.delegatecall(data);\n'[39m +
        [32m'  | \t\t               ^^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Unused local variable.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'4588'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet implement this type of function call.\n'[39m +
        [32m' --> test:9:38:\n'[39m +
        [32m'  |\n'[39m +
        [32m'9 | \t\t(bool success, bytes memory ret) = a.delegatecall(data);\n'[39m +
        [32m'  | \t\t                                   ^^^^^^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet implement this type of function call.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m'  --> test:10:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'10 | \t\tassert(success);\n'[39m +
        [32m'   | \t\t^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m'  --> test:11:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'11 | \t\tassert(x == 0);\n'[39m +
        [32m'   | \t\t^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m'  --> test:12:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'12 | \t\tassert(map[0] == 0);\n'[39m +
        [32m'   | \t\t^^^^^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m'  --> test:13:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'13 | \t\tassert(localMap[0] == 0);\n'[39m +
        [32m'   | \t\t^^^^^^^^^^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### ... with solver Spacer Quant
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'2072'[39m,
      formattedMessage: [32m'Warning: Unused local variable.\n'[39m +
        [32m' --> test:9:18:\n'[39m +
        [32m'  |\n'[39m +
        [32m'9 | \t\t(bool success, bytes memory ret) = a.delegatecall(data);\n'[39m +
        [32m'  | \t\t               ^^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Unused local variable.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'4588'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet implement this type of function call.\n'[39m +
        [32m' --> test:9:38:\n'[39m +
        [32m'  |\n'[39m +
        [32m'9 | \t\t(bool success, bytes memory ret) = a.delegatecall(data);\n'[39m +
        [32m'  | \t\t                                   ^^^^^^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet implement this type of function call.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m'  --> test:10:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'10 | \t\tassert(success);\n'[39m +
        [32m'   | \t\t^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m'  --> test:11:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'11 | \t\tassert(x == 0);\n'[39m +
        [32m'   | \t\t^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m'  --> test:12:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'12 | \t\tassert(map[0] == 0);\n'[39m +
        [32m'   | \t\t^^^^^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m'  --> test:13:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'13 | \t\tassert(localMap[0] == 0);\n'[39m +
        [32m'   | \t\t^^^^^^^^^^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### Running /home/solc-js/regression/types/address_staticcall.sol ...
### ... with solver Eldarica Vanilla
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'2072'[39m,
      formattedMessage: [32m'Warning: Unused local variable.\n'[39m +
        [32m' --> test:9:18:\n'[39m +
        [32m'  |\n'[39m +
        [32m'9 | \t\t(bool success, bytes memory ret) = a.staticcall(data);\n'[39m +
        [32m'  | \t\t               ^^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Unused local variable.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m'  --> test:10:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'10 | \t\tassert(success);\n'[39m +
        [32m'   | \t\t^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### ... with solver Spacer Quant
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'2072'[39m,
      formattedMessage: [32m'Warning: Unused local variable.\n'[39m +
        [32m' --> test:9:18:\n'[39m +
        [32m'  |\n'[39m +
        [32m'9 | \t\t(bool success, bytes memory ret) = a.staticcall(data);\n'[39m +
        [32m'  | \t\t               ^^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Unused local variable.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m'  --> test:10:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'10 | \t\tassert(success);\n'[39m +
        [32m'   | \t\t^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### Running /home/solc-js/regression/types/address_transfer.sol ...
### ... with solver Eldarica Vanilla
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m' --> test:8:3:\n'[39m +
        [32m'  |\n'[39m +
        [32m'8 | \t\tassert(a.balance == 700);\n'[39m +
        [32m'  | \t\t^^^^^^^^^^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### ... with solver Spacer Quant
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m' --> test:8:3:\n'[39m +
        [32m'  |\n'[39m +
        [32m'8 | \t\tassert(a.balance == 700);\n'[39m +
        [32m'  | \t\t^^^^^^^^^^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### Running /home/solc-js/regression/types/address_transfer_2.sol ...
### ... with solver Eldarica Vanilla
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m'  --> test:11:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'11 | \t\tassert(a.balance > b.balance);\n'[39m +
        [32m'   | \t\t^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### ... with solver Spacer Quant
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m'  --> test:11:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'11 | \t\tassert(a.balance > b.balance);\n'[39m +
        [32m'   | \t\t^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### Running /home/solc-js/regression/types/address_transfer_3.sol ...
### ... with solver Eldarica Vanilla
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### ... with solver Spacer Quant
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### Running /home/solc-js/regression/types/address_transfer_insufficient.sol ...
### ... with solver Eldarica Vanilla
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m' --> test:8:3:\n'[39m +
        [32m'  |\n'[39m +
        [32m'8 | \t\tassert(a.balance == 600);\n'[39m +
        [32m'  | \t\t^^^^^^^^^^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### ... with solver Spacer Quant
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m' --> test:8:3:\n'[39m +
        [32m'  |\n'[39m +
        [32m'8 | \t\tassert(a.balance == 600);\n'[39m +
        [32m'  | \t\t^^^^^^^^^^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### Running /home/solc-js/regression/types/array_aliasing_memory_1.sol ...
### ... with solver Eldarica Vanilla
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m'  --> test:31:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'31 | \t\tassert(a[0] == 2 || cc[0][0] == 50 || eee[0][0][0] == 50);\n'[39m +
        [32m'   | \t\t^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### ... with solver Spacer Quant
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m'  --> test:31:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'31 | \t\tassert(a[0] == 2 || cc[0][0] == 50 || eee[0][0][0] == 50);\n'[39m +
        [32m'   | \t\t^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### Running /home/solc-js/regression/types/array_aliasing_memory_2.sol ...
### ... with solver Eldarica Vanilla
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m'  --> test:22:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'22 | \t\tassert(a[0] == 2);\n'[39m +
        [32m'   | \t\t^^^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### ... with solver Spacer Quant
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m'  --> test:22:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'22 | \t\tassert(a[0] == 2);\n'[39m +
        [32m'   | \t\t^^^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### Running /home/solc-js/regression/types/array_aliasing_memory_3.sol ...
### ... with solver Eldarica Vanilla
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m'  --> test:23:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'23 | \t\tassert(a[0] == 2);\n'[39m +
        [32m'   | \t\t^^^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### ... with solver Spacer Quant
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m'  --> test:23:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'23 | \t\tassert(a[0] == 2);\n'[39m +
        [32m'   | \t\t^^^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### Running /home/solc-js/regression/types/array_aliasing_storage_1.sol ...
### ... with solver Eldarica Vanilla
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'2018'[39m,
      formattedMessage: [32m'Warning: Function state mutability can be restricted to view\n'[39m +
        [32m'  --> test:40:2:\n'[39m +
        [32m'   |\n'[39m +
        [32m'40 | \tfunction g(uint a, uint b, uint c, uint d, uint e) public {\n'[39m +
        [32m'   | \t^ (Relevant source part starts here and spans across multiple lines).\n'[39m +
        [32m'\n'[39m,
      message: [32m'Function state mutability can be restricted to view'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### ... with solver Spacer Quant
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'2018'[39m,
      formattedMessage: [32m'Warning: Function state mutability can be restricted to view\n'[39m +
        [32m'  --> test:40:2:\n'[39m +
        [32m'   |\n'[39m +
        [32m'40 | \tfunction g(uint a, uint b, uint c, uint d, uint e) public {\n'[39m +
        [32m'   | \t^ (Relevant source part starts here and spans across multiple lines).\n'[39m +
        [32m'\n'[39m,
      message: [32m'Function state mutability can be restricted to view'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### Running /home/solc-js/regression/types/array_aliasing_storage_2.sol ...
### ... with solver Eldarica Vanilla
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m'  --> test:25:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'25 | \t\tassert(a[0] == 2);\n'[39m +
        [32m'   | \t\t^^^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### ... with solver Spacer Quant
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m'  --> test:25:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'25 | \t\tassert(a[0] == 2);\n'[39m +
        [32m'   | \t\t^^^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### Running /home/solc-js/regression/types/array_aliasing_storage_3.sol ...
### ... with solver Eldarica Vanilla
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m'  --> test:26:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'26 | \t\tassert(d[0] == 42);\n'[39m +
        [32m'   | \t\t^^^^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m'  --> test:29:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'29 | \t\tassert(a[0] == 2);\n'[39m +
        [32m'   | \t\t^^^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### ... with solver Spacer Quant
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m'  --> test:26:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'26 | \t\tassert(d[0] == 42);\n'[39m +
        [32m'   | \t\t^^^^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m'  --> test:29:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'29 | \t\tassert(a[0] == 2);\n'[39m +
        [32m'   | \t\t^^^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### Running /home/solc-js/regression/types/array_aliasing_storage_4.sol ...
### ... with solver Eldarica Vanilla
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'2018'[39m,
      formattedMessage: [32m'Warning: Function state mutability can be restricted to view\n'[39m +
        [32m'  --> test:22:2:\n'[39m +
        [32m'   |\n'[39m +
        [32m'22 | \tfunction g(uint x, uint y) public {\n'[39m +
        [32m'   | \t^ (Relevant source part starts here and spans across multiple lines).\n'[39m +
        [32m'\n'[39m,
      message: [32m'Function state mutability can be restricted to view'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### ... with solver Spacer Quant
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'2018'[39m,
      formattedMessage: [32m'Warning: Function state mutability can be restricted to view\n'[39m +
        [32m'  --> test:22:2:\n'[39m +
        [32m'   |\n'[39m +
        [32m'22 | \tfunction g(uint x, uint y) public {\n'[39m +
        [32m'   | \t^ (Relevant source part starts here and spans across multiple lines).\n'[39m +
        [32m'\n'[39m,
      message: [32m'Function state mutability can be restricted to view'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### Running /home/solc-js/regression/types/array_aliasing_storage_5.sol ...
### ... with solver Eldarica Vanilla
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'5667'[39m,
      formattedMessage: [32m'Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n'[39m +
        [32m' --> test:9:21:\n'[39m +
        [32m'  |\n'[39m +
        [32m'9 | \tfunction g(uint x, uint[] memory c) public {\n'[39m +
        [32m'  | \t                   ^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Unused function parameter. Remove or comment out the variable name to silence this warning.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'2018'[39m,
      formattedMessage: [32m'Warning: Function state mutability can be restricted to view\n'[39m +
        [32m' --> test:9:2:\n'[39m +
        [32m'  |\n'[39m +
        [32m'9 | \tfunction g(uint x, uint[] memory c) public {\n'[39m +
        [32m'  | \t^ (Relevant source part starts here and spans across multiple lines).\n'[39m +
        [32m'\n'[39m,
      message: [32m'Function state mutability can be restricted to view'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### ... with solver Spacer Quant
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'5667'[39m,
      formattedMessage: [32m'Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n'[39m +
        [32m' --> test:9:21:\n'[39m +
        [32m'  |\n'[39m +
        [32m'9 | \tfunction g(uint x, uint[] memory c) public {\n'[39m +
        [32m'  | \t                   ^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Unused function parameter. Remove or comment out the variable name to silence this warning.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'2018'[39m,
      formattedMessage: [32m'Warning: Function state mutability can be restricted to view\n'[39m +
        [32m' --> test:9:2:\n'[39m +
        [32m'  |\n'[39m +
        [32m'9 | \tfunction g(uint x, uint[] memory c) public {\n'[39m +
        [32m'  | \t^ (Relevant source part starts here and spans across multiple lines).\n'[39m +
        [32m'\n'[39m,
      message: [32m'Function state mutability can be restricted to view'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### Running /home/solc-js/regression/types/array_branch_1d.sol ...
### ... with solver Eldarica Vanilla
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m' --> test:8:3:\n'[39m +
        [32m'  |\n'[39m +
        [32m'8 | \t\tassert(c[0] > 0);\n'[39m +
        [32m'  | \t\t^^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### ... with solver Spacer Quant
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m' --> test:8:3:\n'[39m +
        [32m'  |\n'[39m +
        [32m'8 | \t\tassert(c[0] > 0);\n'[39m +
        [32m'  | \t\t^^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### Running /home/solc-js/regression/types/array_branch_2d.sol ...
### ... with solver Eldarica Vanilla
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m'  --> test:11:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'11 | \t\tassert(c[0][0] > 0);\n'[39m +
        [32m'   | \t\t^^^^^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### ... with solver Spacer Quant
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m'  --> test:11:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'11 | \t\tassert(c[0][0] > 0);\n'[39m +
        [32m'   | \t\t^^^^^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### Running /home/solc-js/regression/types/array_branch_3d.sol ...
### ... with solver Eldarica Vanilla
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m'  --> test:13:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'13 | \t\tassert(c[0][0][0] > 0);\n'[39m +
        [32m'   | \t\t^^^^^^^^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### ... with solver Spacer Quant
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m'  --> test:13:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'13 | \t\tassert(c[0][0][0] > 0);\n'[39m +
        [32m'   | \t\t^^^^^^^^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### Running /home/solc-js/regression/types/array_branches_1d.sol ...
### ... with solver Eldarica Vanilla
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### ... with solver Spacer Quant
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### Running /home/solc-js/regression/types/array_branches_2d.sol ...
### ... with solver Eldarica Vanilla
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### ... with solver Spacer Quant
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### Running /home/solc-js/regression/types/array_branches_3d.sol ...
### ... with solver Eldarica Vanilla
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### ... with solver Spacer Quant
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### Running /home/solc-js/regression/types/array_branches_3d_show_unproved.sol ...
### ... with solver Eldarica Vanilla
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### ... with solver Spacer Quant
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### Running /home/solc-js/regression/types/array_dynamic_1.sol ...
### ... with solver Eldarica Vanilla
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### ... with solver Spacer Quant
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### Running /home/solc-js/regression/types/array_dynamic_1_fail.sol ...
### ... with solver Eldarica Vanilla
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m' --> test:9:3:\n'[39m +
        [32m'  |\n'[39m +
        [32m'9 | \t\tassert(array[y] > 300);\n'[39m +
        [32m'  | \t\t^^^^^^^^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### ... with solver Spacer Quant
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m' --> test:9:3:\n'[39m +
        [32m'  |\n'[39m +
        [32m'9 | \t\tassert(array[y] > 300);\n'[39m +
        [32m'  | \t\t^^^^^^^^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### Running /home/solc-js/regression/types/array_dynamic_2.sol ...
### ... with solver Eldarica Vanilla
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### ... with solver Spacer Quant
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### Running /home/solc-js/regression/types/array_dynamic_2_fail.sol ...
### ... with solver Eldarica Vanilla
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m'  --> test:12:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'12 | \t\tassert(array[z][t] > 300);\n'[39m +
        [32m'   | \t\t^^^^^^^^^^^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### ... with solver Spacer Quant
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m'  --> test:12:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'12 | \t\tassert(array[z][t] > 300);\n'[39m +
        [32m'   | \t\t^^^^^^^^^^^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### Running /home/solc-js/regression/types/array_dynamic_3.sol ...
### ... with solver Eldarica Vanilla
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### ... with solver Spacer Quant
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### Running /home/solc-js/regression/types/array_dynamic_3_fail.sol ...
### ... with solver Eldarica Vanilla
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m'  --> test:13:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'13 | \t\tassert(array[t][w][v] > 300);\n'[39m +
        [32m'   | \t\t^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### ... with solver Spacer Quant
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m'  --> test:13:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'13 | \t\tassert(array[t][w][v] > 300);\n'[39m +
        [32m'   | \t\t^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### Running /home/solc-js/regression/types/array_dynamic_parameter_1.sol ...
### ... with solver Eldarica Vanilla
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### ... with solver Spacer Quant
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### Running /home/solc-js/regression/types/array_dynamic_parameter_1_fail.sol ...
### ... with solver Eldarica Vanilla
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m' --> test:7:3:\n'[39m +
        [32m'  |\n'[39m +
        [32m'7 | \t\tassert(array[y] > 300);\n'[39m +
        [32m'  | \t\t^^^^^^^^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### ... with solver Spacer Quant
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m' --> test:7:3:\n'[39m +
        [32m'  |\n'[39m +
        [32m'7 | \t\tassert(array[y] > 300);\n'[39m +
        [32m'  | \t\t^^^^^^^^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### Running /home/solc-js/regression/types/array_literal_1.sol ...
### ... with solver Eldarica Vanilla
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### ... with solver Spacer Quant
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### Running /home/solc-js/regression/types/array_literal_2.sol ...
### ... with solver Eldarica Vanilla
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m' --> test:8:3:\n'[39m +
        [32m'  |\n'[39m +
        [32m'8 | \t\tassert(a[2] == b[2]); // fails\n'[39m +
        [32m'  | \t\t^^^^^^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### ... with solver Spacer Quant
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m' --> test:8:3:\n'[39m +
        [32m'  |\n'[39m +
        [32m'8 | \t\tassert(a[2] == b[2]); // fails\n'[39m +
        [32m'  | \t\t^^^^^^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### Running /home/solc-js/regression/types/array_literal_3.sol ...
### ... with solver Eldarica Vanilla
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m' --> test:7:3:\n'[39m +
        [32m'  |\n'[39m +
        [32m'7 | \t\tassert(a[2] == b[2]); // fails\n'[39m +
        [32m'  | \t\t^^^^^^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### ... with solver Spacer Quant
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m' --> test:7:3:\n'[39m +
        [32m'  |\n'[39m +
        [32m'7 | \t\tassert(a[2] == b[2]); // fails\n'[39m +
        [32m'  | \t\t^^^^^^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### Running /home/solc-js/regression/types/array_literal_4.sol ...
### ... with solver Eldarica Vanilla
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### ... with solver Spacer Quant
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### Running /home/solc-js/regression/types/array_literal_5.sol ...
### ... with solver Eldarica Vanilla
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m'  --> test:10:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'10 | \t\tassert(s[2] != a[2]); // fails\n'[39m +
        [32m'   | \t\t^^^^^^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### ... with solver Spacer Quant
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m'  --> test:10:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'10 | \t\tassert(s[2] != a[2]); // fails\n'[39m +
        [32m'   | \t\t^^^^^^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### Running /home/solc-js/regression/types/array_literal_6.sol ...
### ... with solver Eldarica Vanilla
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m' --> test:7:3:\n'[39m +
        [32m'  |\n'[39m +
        [32m'7 | \t\tassert(a.length == c.length); // fails\n'[39m +
        [32m'  | \t\t^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m'  --> test:10:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'10 | \t\tassert(a[2] == c[2]); // fails\n'[39m +
        [32m'   | \t\t^^^^^^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### ... with solver Spacer Quant
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m' --> test:7:3:\n'[39m +
        [32m'  |\n'[39m +
        [32m'7 | \t\tassert(a.length == c.length); // fails\n'[39m +
        [32m'  | \t\t^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m'  --> test:10:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'10 | \t\tassert(a[2] == c[2]); // fails\n'[39m +
        [32m'   | \t\t^^^^^^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### Running /home/solc-js/regression/types/array_literal_7.sol ...
### ... with solver Eldarica Vanilla
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m'  --> test:12:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'12 | \t\tassert(s.length == c.length); // fails\n'[39m +
        [32m'   | \t\t^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m'  --> test:15:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'15 | \t\tassert(s[2] == c[2]); // fails\n'[39m +
        [32m'   | \t\t^^^^^^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### ... with solver Spacer Quant
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m'  --> test:12:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'12 | \t\tassert(s.length == c.length); // fails\n'[39m +
        [32m'   | \t\t^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m'  --> test:15:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'15 | \t\tassert(s[2] == c[2]); // fails\n'[39m +
        [32m'   | \t\t^^^^^^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### Running /home/solc-js/regression/types/array_mapping_aliasing_1.sol ...
### ... with solver Eldarica Vanilla
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m'  --> test:23:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'23 | \t\tassert(severalMaps[0][0] == 42);\n'[39m +
        [32m'   | \t\t^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m'  --> test:28:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'28 | \t\tassert(severalMaps3d[0][0][0] == 42);\n'[39m +
        [32m'   | \t\t^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### ... with solver Spacer Quant
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m'  --> test:23:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'23 | \t\tassert(severalMaps[0][0] == 42);\n'[39m +
        [32m'   | \t\t^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m'  --> test:28:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'28 | \t\tassert(severalMaps3d[0][0][0] == 42);\n'[39m +
        [32m'   | \t\t^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### Running /home/solc-js/regression/types/array_mapping_aliasing_2.sol ...
### ... with solver Eldarica Vanilla
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m'  --> test:27:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'27 | \t\tassert(map[0] == 42);\n'[39m +
        [32m'   | \t\t^^^^^^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### ... with solver Spacer Quant
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m'  --> test:27:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'27 | \t\tassert(map[0] == 42);\n'[39m +
        [32m'   | \t\t^^^^^^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### Running /home/solc-js/regression/types/array_static_1.sol ...
### ... with solver Eldarica Vanilla
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### ... with solver Spacer Quant
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### Running /home/solc-js/regression/types/array_static_1_fail.sol ...
### ... with solver Eldarica Vanilla
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m' --> test:8:3:\n'[39m +
        [32m'  |\n'[39m +
        [32m'8 | \t\tassert(array[y] > 300);\n'[39m +
        [32m'  | \t\t^^^^^^^^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### ... with solver Spacer Quant
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m' --> test:8:3:\n'[39m +
        [32m'  |\n'[39m +
        [32m'8 | \t\tassert(array[y] > 300);\n'[39m +
        [32m'  | \t\t^^^^^^^^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### Running /home/solc-js/regression/types/array_static_2.sol ...
### ... with solver Eldarica Vanilla
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### ... with solver Spacer Quant
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### Running /home/solc-js/regression/types/array_static_2_fail.sol ...
### ... with solver Eldarica Vanilla
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m' --> test:9:3:\n'[39m +
        [32m'  |\n'[39m +
        [32m'9 | \t\tassert(array[z][t] > 300);\n'[39m +
        [32m'  | \t\t^^^^^^^^^^^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### ... with solver Spacer Quant
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m' --> test:9:3:\n'[39m +
        [32m'  |\n'[39m +
        [32m'9 | \t\tassert(array[z][t] > 300);\n'[39m +
        [32m'  | \t\t^^^^^^^^^^^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### Running /home/solc-js/regression/types/array_static_3.sol ...
### ... with solver Eldarica Vanilla
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### ... with solver Spacer Quant
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### Running /home/solc-js/regression/types/array_static_3_fail.sol ...
### ... with solver Eldarica Vanilla
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m'  --> test:10:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'10 | \t\tassert(array[t][w][v] > 300);\n'[39m +
        [32m'   | \t\t^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### ... with solver Spacer Quant
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m'  --> test:10:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'10 | \t\tassert(array[t][w][v] > 300);\n'[39m +
        [32m'   | \t\t^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### Running /home/solc-js/regression/types/array_static_aliasing_memory_5.sol ...
### ... with solver Eldarica Vanilla
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m' --> test:9:3:\n'[39m +
        [32m'  |\n'[39m +
        [32m'9 | \t\tassert(c[0] == 42);\n'[39m +
        [32m'  | \t\t^^^^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m'  --> test:12:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'12 | \t\tassert(a[0] == 2);\n'[39m +
        [32m'   | \t\t^^^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### ... with solver Spacer Quant
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m' --> test:9:3:\n'[39m +
        [32m'  |\n'[39m +
        [32m'9 | \t\tassert(c[0] == 42);\n'[39m +
        [32m'  | \t\t^^^^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m'  --> test:12:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'12 | \t\tassert(a[0] == 2);\n'[39m +
        [32m'   | \t\t^^^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### Running /home/solc-js/regression/types/array_static_aliasing_storage_5.sol ...
### ... with solver Eldarica Vanilla
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m'  --> test:15:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'15 | \t\tassert(a[0] == 2);\n'[39m +
        [32m'   | \t\t^^^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### ... with solver Spacer Quant
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m'  --> test:15:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'15 | \t\tassert(a[0] == 2);\n'[39m +
        [32m'   | \t\t^^^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### Running /home/solc-js/regression/types/array_static_mapping_aliasing_1.sol ...
### ... with solver Eldarica Vanilla
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m'  --> test:14:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'14 | \t\tassert(severalMaps[0][0] == 42);\n'[39m +
        [32m'   | \t\t^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m'  --> test:19:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'19 | \t\tassert(severalMaps3d[0][0][0] == 42);\n'[39m +
        [32m'   | \t\t^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### ... with solver Spacer Quant
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m'  --> test:14:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'14 | \t\tassert(severalMaps[0][0] == 42);\n'[39m +
        [32m'   | \t\t^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m'  --> test:19:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'19 | \t\tassert(severalMaps3d[0][0][0] == 42);\n'[39m +
        [32m'   | \t\t^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### Running /home/solc-js/regression/types/array_static_mapping_aliasing_2.sol ...
### ... with solver Eldarica Vanilla
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m'  --> test:22:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'22 | \t\tassert(map[0] == 42);\n'[39m +
        [32m'   | \t\t^^^^^^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### ... with solver Spacer Quant
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m'  --> test:22:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'22 | \t\tassert(map[0] == 42);\n'[39m +
        [32m'   | \t\t^^^^^^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### Running /home/solc-js/regression/types/array_struct_array_branches_2d.sol ...
### ... with solver Eldarica Vanilla
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### ... with solver Spacer Quant
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'5840'[39m,
      formattedMessage: [32m'Warning: CHC: 1 verification condition(s) could not be proved. Enable the model checker option "show unproved" to see all of them. Consider choosing a specific contract to be verified in order to reduce the solving problems. Consider increasing the timeout per query.\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: 1 verification condition(s) could not be proved. Enable the model checker option "show unproved" to see all of them. Consider choosing a specific contract to be verified in order to reduce the solving problems. Consider increasing the timeout per query.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### Running /home/solc-js/regression/types/bool_int_mixed_1.sol ...
### ... with solver Eldarica Vanilla
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### ... with solver Spacer Quant
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### Running /home/solc-js/regression/types/bool_int_mixed_2.sol ...
### ... with solver Eldarica Vanilla
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### ... with solver Spacer Quant
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### Running /home/solc-js/regression/types/bool_int_mixed_3.sol ...
### ... with solver Eldarica Vanilla
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### ... with solver Spacer Quant
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### Running /home/solc-js/regression/types/bool_simple_1.sol ...
### ... with solver Eldarica Vanilla
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m' --> test:3:9:\n'[39m +
        [32m'  |\n'[39m +
        [32m'3 |         assert(x);\n'[39m +
        [32m'  |         ^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### ... with solver Spacer Quant
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m' --> test:3:9:\n'[39m +
        [32m'  |\n'[39m +
        [32m'3 |         assert(x);\n'[39m +
        [32m'  |         ^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### Running /home/solc-js/regression/types/bool_simple_2.sol ...
### ... with solver Eldarica Vanilla
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m' --> test:3:9:\n'[39m +
        [32m'  |\n'[39m +
        [32m'3 |         assert(x == y);\n'[39m +
        [32m'  |         ^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### ... with solver Spacer Quant
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m' --> test:3:9:\n'[39m +
        [32m'  |\n'[39m +
        [32m'3 |         assert(x == y);\n'[39m +
        [32m'  |         ^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### Running /home/solc-js/regression/types/bool_simple_3.sol ...
### ... with solver Eldarica Vanilla
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### ... with solver Spacer Quant
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### Running /home/solc-js/regression/types/bool_simple_4.sol ...
### ... with solver Eldarica Vanilla
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### ... with solver Spacer Quant
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### Running /home/solc-js/regression/types/bool_simple_5.sol ...
### ... with solver Eldarica Vanilla
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### ... with solver Spacer Quant
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### Running /home/solc-js/regression/types/bool_simple_6.sol ...
### ... with solver Eldarica Vanilla
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### ... with solver Spacer Quant
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### Running /home/solc-js/regression/types/bytes_1.sol ...
### ... with solver Eldarica Vanilla
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'2072'[39m,
      formattedMessage: [32m'Warning: Unused local variable.\n'[39m +
        [32m' --> test:4:3:\n'[39m +
        [32m'  |\n'[39m +
        [32m'4 | \t\tbytes memory c = b;\n'[39m +
        [32m'  | \t\t^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Unused local variable.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### ... with solver Spacer Quant
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'2072'[39m,
      formattedMessage: [32m'Warning: Unused local variable.\n'[39m +
        [32m' --> test:4:3:\n'[39m +
        [32m'  |\n'[39m +
        [32m'4 | \t\tbytes memory c = b;\n'[39m +
        [32m'  | \t\t^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Unused local variable.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### Running /home/solc-js/regression/types/bytes_2.sol ...
### ... with solver Eldarica Vanilla
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m' --> test:8:3:\n'[39m +
        [32m'  |\n'[39m +
        [32m'8 | \t\tassert(b1[1] == b2[1]);\n'[39m +
        [32m'  | \t\t^^^^^^^^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### ... with solver Spacer Quant
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m' --> test:8:3:\n'[39m +
        [32m'  |\n'[39m +
        [32m'8 | \t\tassert(b1[1] == b2[1]);\n'[39m +
        [32m'  | \t\t^^^^^^^^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### Running /home/solc-js/regression/types/bytes_2_fail.sol ...
### ... with solver Eldarica Vanilla
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m' --> test:6:3:\n'[39m +
        [32m'  |\n'[39m +
        [32m'6 | \t\tassert(b1[1] == b2[2]);\n'[39m +
        [32m'  | \t\t^^^^^^^^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### ... with solver Spacer Quant
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m' --> test:6:3:\n'[39m +
        [32m'  |\n'[39m +
        [32m'6 | \t\tassert(b1[1] == b2[2]);\n'[39m +
        [32m'  | \t\t^^^^^^^^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### Running /home/solc-js/regression/types/bytes_length.sol ...
### ... with solver Eldarica Vanilla
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### ... with solver Spacer Quant
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### Running /home/solc-js/regression/types/contract.sol ...
### ... with solver Eldarica Vanilla
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m' --> test:4:3:\n'[39m +
        [32m'  |\n'[39m +
        [32m'4 | \t\tassert(c == d);\n'[39m +
        [32m'  | \t\t^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### ... with solver Spacer Quant
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m' --> test:4:3:\n'[39m +
        [32m'  |\n'[39m +
        [32m'4 | \t\tassert(c == d);\n'[39m +
        [32m'  | \t\t^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### Running /home/solc-js/regression/types/contract_2.sol ...
### ... with solver Eldarica Vanilla
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m' --> test:9:3:\n'[39m +
        [32m'  |\n'[39m +
        [32m'9 | \t\tassert(c == d);\n'[39m +
        [32m'  | \t\t^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### ... with solver Spacer Quant
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m' --> test:9:3:\n'[39m +
        [32m'  |\n'[39m +
        [32m'9 | \t\tassert(c == d);\n'[39m +
        [32m'  | \t\t^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### Running /home/solc-js/regression/types/contract_3.sol ...
### ... with solver Eldarica Vanilla
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### ... with solver Spacer Quant
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### Running /home/solc-js/regression/types/contract_address_conversion.sol ...
### ... with solver Eldarica Vanilla
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m' --> test:4:3:\n'[39m +
        [32m'  |\n'[39m +
        [32m'4 | \t\tassert(address(c) == a);\n'[39m +
        [32m'  | \t\t^^^^^^^^^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### ... with solver Spacer Quant
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m' --> test:4:3:\n'[39m +
        [32m'  |\n'[39m +
        [32m'4 | \t\tassert(address(c) == a);\n'[39m +
        [32m'  | \t\t^^^^^^^^^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### Running /home/solc-js/regression/types/contract_address_conversion_2.sol ...
### ... with solver Eldarica Vanilla
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### ... with solver Spacer Quant
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### Running /home/solc-js/regression/types/data_location_in_function_type.sol ...
### ... with solver Eldarica Vanilla
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### ... with solver Spacer Quant
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### Running /home/solc-js/regression/types/enum_explicit_values.sol ...
### ... with solver Eldarica Vanilla
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### ... with solver Spacer Quant
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### Running /home/solc-js/regression/types/enum_explicit_values_2.sol ...
### ... with solver Eldarica Vanilla
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m' --> test:8:3:\n'[39m +
        [32m'  |\n'[39m +
        [32m'8 | \t\tassert(d != _a);\n'[39m +
        [32m'  | \t\t^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### ... with solver Spacer Quant
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m' --> test:8:3:\n'[39m +
        [32m'  |\n'[39m +
        [32m'8 | \t\tassert(d != _a);\n'[39m +
        [32m'  | \t\t^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### Running /home/solc-js/regression/types/enum_in_library.sol ...
### ... with solver Eldarica Vanilla
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### ... with solver Spacer Quant
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### Running /home/solc-js/regression/types/enum_in_library_2.sol ...
### ... with solver Eldarica Vanilla
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m'  --> test:11:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'11 | \t\tassert(_d == E.Left);\n'[39m +
        [32m'   | \t\t^^^^^^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### ... with solver Spacer Quant
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m'  --> test:11:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'11 | \t\tassert(_d == E.Left);\n'[39m +
        [32m'   | \t\t^^^^^^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### Running /home/solc-js/regression/types/enum_in_struct.sol ...
### ... with solver Eldarica Vanilla
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### ... with solver Spacer Quant
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### Running /home/solc-js/regression/types/enum_range.sol ...
### ... with solver Eldarica Vanilla
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### ... with solver Spacer Quant
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### Running /home/solc-js/regression/types/enum_storage_eq.sol ...
### ... with solver Eldarica Vanilla
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m' --> test:7:3:\n'[39m +
        [32m'  |\n'[39m +
        [32m'7 | \t\tassert(d != _d);\n'[39m +
        [32m'  | \t\t^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### ... with solver Spacer Quant
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m' --> test:7:3:\n'[39m +
        [32m'  |\n'[39m +
        [32m'7 | \t\tassert(d != _d);\n'[39m +
        [32m'  | \t\t^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### Running /home/solc-js/regression/types/enum_transitivity.sol ...
### ... with solver Eldarica Vanilla
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### ... with solver Spacer Quant
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### Running /home/solc-js/regression/types/event_with_rational_size_array.sol ...
### ... with solver Eldarica Vanilla
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### ... with solver Spacer Quant
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### Running /home/solc-js/regression/types/fixed_bytes_1.sol ...
### ... with solver Eldarica Vanilla
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m' --> test:5:3:\n'[39m +
        [32m'  |\n'[39m +
        [32m'5 | \t\tassert(x != y);\n'[39m +
        [32m'  | \t\t^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m' --> test:6:3:\n'[39m +
        [32m'  |\n'[39m +
        [32m'6 | \t\tassert(x != g());\n'[39m +
        [32m'  | \t\t^^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### ... with solver Spacer Quant
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m' --> test:5:3:\n'[39m +
        [32m'  |\n'[39m +
        [32m'5 | \t\tassert(x != y);\n'[39m +
        [32m'  | \t\t^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m' --> test:6:3:\n'[39m +
        [32m'  |\n'[39m +
        [32m'6 | \t\tassert(x != g());\n'[39m +
        [32m'  | \t\t^^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### Running /home/solc-js/regression/types/fixed_bytes_2.sol ...
### ... with solver Eldarica Vanilla
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m' --> test:6:3:\n'[39m +
        [32m'  |\n'[39m +
        [32m'6 | \t\tassert(x != y);\n'[39m +
        [32m'  | \t\t^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### ... with solver Spacer Quant
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m' --> test:6:3:\n'[39m +
        [32m'  |\n'[39m +
        [32m'6 | \t\tassert(x != y);\n'[39m +
        [32m'  | \t\t^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### Running /home/solc-js/regression/types/fixed_bytes_access_1.sol ...
### ... with solver Eldarica Vanilla
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### ... with solver Spacer Quant
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### Running /home/solc-js/regression/types/fixed_bytes_access_2.sol ...
### ... with solver Eldarica Vanilla
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'5667'[39m,
      formattedMessage: [32m'Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n'[39m +
        [32m' --> test:2:31:\n'[39m +
        [32m'  |\n'[39m +
        [32m'2 | \tfunction f(bytes calldata x, uint y) external pure {\n'[39m +
        [32m'  | \t                             ^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Unused function parameter. Remove or comment out the variable name to silence this warning.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### ... with solver Spacer Quant
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'5667'[39m,
      formattedMessage: [32m'Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n'[39m +
        [32m' --> test:2:31:\n'[39m +
        [32m'  |\n'[39m +
        [32m'2 | \tfunction f(bytes calldata x, uint y) external pure {\n'[39m +
        [32m'  | \t                             ^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Unused function parameter. Remove or comment out the variable name to silence this warning.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### Running /home/solc-js/regression/types/fixed_bytes_access_3.sol ...
### ... with solver Eldarica Vanilla
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### ... with solver Spacer Quant
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### Running /home/solc-js/regression/types/fixed_bytes_access_4.sol ...
### ... with solver Eldarica Vanilla
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m' --> test:9:3:\n'[39m +
        [32m'  |\n'[39m +
        [32m'9 | \t\tassert(x[0] == x[23]);\n'[39m +
        [32m'  | \t\t^^^^^^^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### ... with solver Spacer Quant
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m' --> test:9:3:\n'[39m +
        [32m'  |\n'[39m +
        [32m'9 | \t\tassert(x[0] == x[23]);\n'[39m +
        [32m'  | \t\t^^^^^^^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### Running /home/solc-js/regression/types/fixed_bytes_access_5.sol ...
### ... with solver Eldarica Vanilla
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m' --> test:5:3:\n'[39m +
        [32m'  |\n'[39m +
        [32m'5 | \t\tassert(x[0] == b); // fails\n'[39m +
        [32m'  | \t\t^^^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m' --> test:7:3:\n'[39m +
        [32m'  |\n'[39m +
        [32m'7 | \t\tassert(x[2] == b); // fails\n'[39m +
        [32m'  | \t\t^^^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m' --> test:8:3:\n'[39m +
        [32m'  |\n'[39m +
        [32m'8 | \t\tassert(x[3] == b); // fails\n'[39m +
        [32m'  | \t\t^^^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### ... with solver Spacer Quant
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m' --> test:5:3:\n'[39m +
        [32m'  |\n'[39m +
        [32m'5 | \t\tassert(x[0] == b); // fails\n'[39m +
        [32m'  | \t\t^^^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m' --> test:7:3:\n'[39m +
        [32m'  |\n'[39m +
        [32m'7 | \t\tassert(x[2] == b); // fails\n'[39m +
        [32m'  | \t\t^^^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m' --> test:8:3:\n'[39m +
        [32m'  |\n'[39m +
        [32m'8 | \t\tassert(x[3] == b); // fails\n'[39m +
        [32m'  | \t\t^^^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### Running /home/solc-js/regression/types/fixed_bytes_access_6.sol ...
### ... with solver Eldarica Vanilla
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### ... with solver Spacer Quant
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### Running /home/solc-js/regression/types/fixed_bytes_access_7.sol ...
### ... with solver Eldarica Vanilla
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m' --> test:5:3:\n'[39m +
        [32m'  |\n'[39m +
        [32m'5 | \t\tassert(x[i] == 0x00);\n'[39m +
        [32m'  | \t\t^^^^^^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### ... with solver Spacer Quant
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m' --> test:5:3:\n'[39m +
        [32m'  |\n'[39m +
        [32m'5 | \t\tassert(x[i] == 0x00);\n'[39m +
        [32m'  | \t\t^^^^^^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### Running /home/solc-js/regression/types/fixed_bytes_range.sol ...
### ... with solver Eldarica Vanilla
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### ... with solver Spacer Quant
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### Running /home/solc-js/regression/types/function_in_tuple_1.sol ...
### ... with solver Eldarica Vanilla
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6133'[39m,
      formattedMessage: [32m'Warning: Statement has no effect.\n'[39m +
        [32m' --> test:3:3:\n'[39m +
        [32m'  |\n'[39m +
        [32m'3 | \t\t(abi.encode, 2);\n'[39m +
        [32m'  | \t\t^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Statement has no effect.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### ... with solver Spacer Quant
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6133'[39m,
      formattedMessage: [32m'Warning: Statement has no effect.\n'[39m +
        [32m' --> test:3:3:\n'[39m +
        [32m'  |\n'[39m +
        [32m'3 | \t\t(abi.encode, 2);\n'[39m +
        [32m'  | \t\t^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Statement has no effect.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### Running /home/solc-js/regression/types/function_in_tuple_2.sol ...
### ... with solver Eldarica Vanilla
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6133'[39m,
      formattedMessage: [32m'Warning: Statement has no effect.\n'[39m +
        [32m' --> test:3:3:\n'[39m +
        [32m'  |\n'[39m +
        [32m'3 | \t\t(abi.encode, "");\n'[39m +
        [32m'  | \t\t^^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Statement has no effect.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### ... with solver Spacer Quant
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6133'[39m,
      formattedMessage: [32m'Warning: Statement has no effect.\n'[39m +
        [32m' --> test:3:3:\n'[39m +
        [32m'  |\n'[39m +
        [32m'3 | \t\t(abi.encode, "");\n'[39m +
        [32m'  | \t\t^^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Statement has no effect.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### Running /home/solc-js/regression/types/function_type_array_as_reference_type.sol ...
### ... with solver Eldarica Vanilla
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### ... with solver Spacer Quant
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### Running /home/solc-js/regression/types/function_type_arrays.sol ...
### ... with solver Eldarica Vanilla
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### ... with solver Spacer Quant
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### Running /home/solc-js/regression/types/function_type_as_argument.sol ...
### ... with solver Eldarica Vanilla
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### ... with solver Spacer Quant
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### Running /home/solc-js/regression/types/function_type_call.sol ...
### ... with solver Eldarica Vanilla
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### ... with solver Spacer Quant
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### Running /home/solc-js/regression/types/function_type_external_address.sol ...
### ... with solver Eldarica Vanilla
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'7650'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet support this expression.\n'[39m +
        [32m' --> test:3:15:\n'[39m +
        [32m'  |\n'[39m +
        [32m'3 | \t\taddress b = g.address;\n'[39m +
        [32m'  | \t\t            ^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet support this expression.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### ... with solver Spacer Quant
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'7650'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet support this expression.\n'[39m +
        [32m' --> test:3:15:\n'[39m +
        [32m'  |\n'[39m +
        [32m'3 | \t\taddress b = g.address;\n'[39m +
        [32m'  | \t\t            ^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet support this expression.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### Running /home/solc-js/regression/types/function_type_members.sol ...
### ... with solver Eldarica Vanilla
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'7650'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet support this expression.\n'[39m +
        [32m' --> test:3:3:\n'[39m +
        [32m'  |\n'[39m +
        [32m'3 | \t\tg.selector;\n'[39m +
        [32m'  | \t\t^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet support this expression.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### ... with solver Spacer Quant
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'7650'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet support this expression.\n'[39m +
        [32m' --> test:3:3:\n'[39m +
        [32m'  |\n'[39m +
        [32m'3 | \t\tg.selector;\n'[39m +
        [32m'  | \t\t^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet support this expression.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### Running /home/solc-js/regression/types/function_type_nested.sol ...
### ... with solver Eldarica Vanilla
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'8115'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet support the type of this variable.\n'[39m +
        [32m' --> test:6:17:\n'[39m +
        [32m'  |\n'[39m +
        [32m'6 |     function f2(function(function(uint) internal) internal g2) internal {\n'[39m +
        [32m'  |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet support the type of this variable.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'8364'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet implement type function (function (uint256))\n'[39m +
        [32m' --> test:7:3:\n'[39m +
        [32m'  |\n'[39m +
        [32m'7 | \t\tg2(m_g);\n'[39m +
        [32m'  | \t\t^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet implement type function (function (uint256))'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6031'[39m,
      formattedMessage: [32m'Warning: Internal error: Expression undefined for SMT solver.\n'[39m +
        [32m'  --> test:10:6:\n'[39m +
        [32m'   |\n'[39m +
        [32m'10 | \t\tf2(f1);\n'[39m +
        [32m'   | \t\t   ^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Internal error: Expression undefined for SMT solver.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'8364'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet implement type function (function (uint256))\n'[39m +
        [32m'  --> test:10:6:\n'[39m +
        [32m'   |\n'[39m +
        [32m'10 | \t\tf2(f1);\n'[39m +
        [32m'   | \t\t   ^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet implement type function (function (uint256))'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### ... with solver Spacer Quant
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'8115'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet support the type of this variable.\n'[39m +
        [32m' --> test:6:17:\n'[39m +
        [32m'  |\n'[39m +
        [32m'6 |     function f2(function(function(uint) internal) internal g2) internal {\n'[39m +
        [32m'  |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet support the type of this variable.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'8364'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet implement type function (function (uint256))\n'[39m +
        [32m' --> test:7:3:\n'[39m +
        [32m'  |\n'[39m +
        [32m'7 | \t\tg2(m_g);\n'[39m +
        [32m'  | \t\t^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet implement type function (function (uint256))'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6031'[39m,
      formattedMessage: [32m'Warning: Internal error: Expression undefined for SMT solver.\n'[39m +
        [32m'  --> test:10:6:\n'[39m +
        [32m'   |\n'[39m +
        [32m'10 | \t\tf2(f1);\n'[39m +
        [32m'   | \t\t   ^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Internal error: Expression undefined for SMT solver.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'8364'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet implement type function (function (uint256))\n'[39m +
        [32m'  --> test:10:6:\n'[39m +
        [32m'   |\n'[39m +
        [32m'10 | \t\tf2(f1);\n'[39m +
        [32m'   | \t\t   ^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet implement type function (function (uint256))'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### Running /home/solc-js/regression/types/function_type_nested_return.sol ...
### ... with solver Eldarica Vanilla
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'8115'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet support the type of this variable.\n'[39m +
        [32m' --> test:9:17:\n'[39m +
        [32m'  |\n'[39m +
        [32m'9 |     function f2(function(function(uint) internal) internal g2) internal {\n'[39m +
        [32m'  |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet support the type of this variable.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'8364'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet implement type function (function (uint256))\n'[39m +
        [32m'  --> test:10:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'10 | \t\tg2(r());\n'[39m +
        [32m'   | \t\t^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet implement type function (function (uint256))'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1695'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet support this global variable.\n'[39m +
        [32m'  --> test:10:6:\n'[39m +
        [32m'   |\n'[39m +
        [32m'10 | \t\tg2(r());\n'[39m +
        [32m'   | \t\t   ^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet support this global variable.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6031'[39m,
      formattedMessage: [32m'Warning: Internal error: Expression undefined for SMT solver.\n'[39m +
        [32m'  --> test:13:6:\n'[39m +
        [32m'   |\n'[39m +
        [32m'13 | \t\tf2(f1);\n'[39m +
        [32m'   | \t\t   ^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Internal error: Expression undefined for SMT solver.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'8364'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet implement type function (function (uint256))\n'[39m +
        [32m'  --> test:13:6:\n'[39m +
        [32m'   |\n'[39m +
        [32m'13 | \t\tf2(f1);\n'[39m +
        [32m'   | \t\t   ^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet implement type function (function (uint256))'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### ... with solver Spacer Quant
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'8115'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet support the type of this variable.\n'[39m +
        [32m' --> test:9:17:\n'[39m +
        [32m'  |\n'[39m +
        [32m'9 |     function f2(function(function(uint) internal) internal g2) internal {\n'[39m +
        [32m'  |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet support the type of this variable.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'8364'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet implement type function (function (uint256))\n'[39m +
        [32m'  --> test:10:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'10 | \t\tg2(r());\n'[39m +
        [32m'   | \t\t^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet implement type function (function (uint256))'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1695'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet support this global variable.\n'[39m +
        [32m'  --> test:10:6:\n'[39m +
        [32m'   |\n'[39m +
        [32m'10 | \t\tg2(r());\n'[39m +
        [32m'   | \t\t   ^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet support this global variable.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6031'[39m,
      formattedMessage: [32m'Warning: Internal error: Expression undefined for SMT solver.\n'[39m +
        [32m'  --> test:13:6:\n'[39m +
        [32m'   |\n'[39m +
        [32m'13 | \t\tf2(f1);\n'[39m +
        [32m'   | \t\t   ^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Internal error: Expression undefined for SMT solver.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'8364'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet implement type function (function (uint256))\n'[39m +
        [32m'  --> test:13:6:\n'[39m +
        [32m'   |\n'[39m +
        [32m'13 | \t\tf2(f1);\n'[39m +
        [32m'   | \t\t   ^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet implement type function (function (uint256))'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### Running /home/solc-js/regression/types/mapping_1.sol ...
### ... with solver Eldarica Vanilla
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### ... with solver Spacer Quant
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### Running /home/solc-js/regression/types/mapping_1_fail.sol ...
### ... with solver Eldarica Vanilla
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m' --> test:7:3:\n'[39m +
        [32m'  |\n'[39m +
        [32m'7 | \t\tassert(x != map[2]);\n'[39m +
        [32m'  | \t\t^^^^^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### ... with solver Spacer Quant
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m' --> test:7:3:\n'[39m +
        [32m'  |\n'[39m +
        [32m'7 | \t\tassert(x != map[2]);\n'[39m +
        [32m'  | \t\t^^^^^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### Running /home/solc-js/regression/types/mapping_2.sol ...
### ... with solver Eldarica Vanilla
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m' --> test:5:3:\n'[39m +
        [32m'  |\n'[39m +
        [32m'5 | \t\tassert(x != map[2]);\n'[39m +
        [32m'  | \t\t^^^^^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### ... with solver Spacer Quant
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m' --> test:5:3:\n'[39m +
        [32m'  |\n'[39m +
        [32m'5 | \t\tassert(x != map[2]);\n'[39m +
        [32m'  | \t\t^^^^^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### Running /home/solc-js/regression/types/mapping_2d_1.sol ...
### ... with solver Eldarica Vanilla
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### ... with solver Spacer Quant
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### Running /home/solc-js/regression/types/mapping_2d_1_fail.sol ...
### ... with solver Eldarica Vanilla
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m' --> test:7:3:\n'[39m +
        [32m'  |\n'[39m +
        [32m'7 | \t\tassert(x == map[13][14]);\n'[39m +
        [32m'  | \t\t^^^^^^^^^^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### ... with solver Spacer Quant
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m' --> test:7:3:\n'[39m +
        [32m'  |\n'[39m +
        [32m'7 | \t\tassert(x == map[13][14]);\n'[39m +
        [32m'  | \t\t^^^^^^^^^^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### Running /home/solc-js/regression/types/mapping_3.sol ...
### ... with solver Eldarica Vanilla
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### ... with solver Spacer Quant
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### Running /home/solc-js/regression/types/mapping_3d_1.sol ...
### ... with solver Eldarica Vanilla
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### ... with solver Spacer Quant
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### Running /home/solc-js/regression/types/mapping_3d_1_fail.sol ...
### ... with solver Eldarica Vanilla
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m' --> test:7:3:\n'[39m +
        [32m'  |\n'[39m +
        [32m'7 | \t\tassert(x == map[13][14][15]);\n'[39m +
        [32m'  | \t\t^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### ... with solver Spacer Quant
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m' --> test:7:3:\n'[39m +
        [32m'  |\n'[39m +
        [32m'7 | \t\tassert(x == map[13][14][15]);\n'[39m +
        [32m'  | \t\t^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### Running /home/solc-js/regression/types/mapping_4.sol ...
### ... with solver Eldarica Vanilla
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### ... with solver Spacer Quant
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### Running /home/solc-js/regression/types/mapping_5.sol ...
### ... with solver Eldarica Vanilla
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m' --> test:5:3:\n'[39m +
        [32m'  |\n'[39m +
        [32m'5 | \t\tassert(x != map[a]);\n'[39m +
        [32m'  | \t\t^^^^^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### ... with solver Spacer Quant
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m' --> test:5:3:\n'[39m +
        [32m'  |\n'[39m +
        [32m'5 | \t\tassert(x != map[a]);\n'[39m +
        [32m'  | \t\t^^^^^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### Running /home/solc-js/regression/types/mapping_aliasing_1.sol ...
### ... with solver Eldarica Vanilla
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m'  --> test:13:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'13 | \t\tassert(a[1] == b[1]);\n'[39m +
        [32m'   | \t\t^^^^^^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### ... with solver Spacer Quant
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m'  --> test:13:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'13 | \t\tassert(a[1] == b[1]);\n'[39m +
        [32m'   | \t\t^^^^^^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### Running /home/solc-js/regression/types/mapping_aliasing_2.sol ...
### ... with solver Eldarica Vanilla
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m'  --> test:13:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'13 | \t\tassert(map1[0] == 2);\n'[39m +
        [32m'   | \t\t^^^^^^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m'  --> test:15:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'15 | \t\tassert(a[0] == 42);\n'[39m +
        [32m'   | \t\t^^^^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m'  --> test:18:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'18 | \t\tassert(maps[0][0] == 42);\n'[39m +
        [32m'   | \t\t^^^^^^^^^^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### ... with solver Spacer Quant
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m'  --> test:13:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'13 | \t\tassert(map1[0] == 2);\n'[39m +
        [32m'   | \t\t^^^^^^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m'  --> test:15:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'15 | \t\tassert(a[0] == 42);\n'[39m +
        [32m'   | \t\t^^^^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m'  --> test:18:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'18 | \t\tassert(maps[0][0] == 42);\n'[39m +
        [32m'   | \t\t^^^^^^^^^^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### Running /home/solc-js/regression/types/mapping_and_array_of_functions.sol ...
### ... with solver Eldarica Vanilla
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### ... with solver Spacer Quant
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### Running /home/solc-js/regression/types/mapping_as_local_var_1.sol ...
### ... with solver Eldarica Vanilla
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m'  --> test:11:4:\n'[39m +
        [32m'   |\n'[39m +
        [32m'11 | \t\t\tassert(a[2] == x[2] && a[2] != y[2]);\n'[39m +
        [32m'   | \t\t\t^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m'  --> test:13:4:\n'[39m +
        [32m'   |\n'[39m +
        [32m'13 | \t\t\tassert(a[2] == y[2] && a[2] != x[2]);\n'[39m +
        [32m'   | \t\t\t^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### ... with solver Spacer Quant
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m'  --> test:11:4:\n'[39m +
        [32m'   |\n'[39m +
        [32m'11 | \t\t\tassert(a[2] == x[2] && a[2] != y[2]);\n'[39m +
        [32m'   | \t\t\t^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m'  --> test:13:4:\n'[39m +
        [32m'   |\n'[39m +
        [32m'13 | \t\t\tassert(a[2] == y[2] && a[2] != x[2]);\n'[39m +
        [32m'   | \t\t\t^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### Running /home/solc-js/regression/types/mapping_as_parameter_1.sol ...
### ... with solver Eldarica Vanilla
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m' --> test:9:3:\n'[39m +
        [32m'  |\n'[39m +
        [32m'9 | \t\tassert(x[a] == b);\n'[39m +
        [32m'  | \t\t^^^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### ... with solver Spacer Quant
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m' --> test:9:3:\n'[39m +
        [32m'  |\n'[39m +
        [32m'9 | \t\tassert(x[a] == b);\n'[39m +
        [32m'  | \t\t^^^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### Running /home/solc-js/regression/types/mapping_equal_keys_1.sol ...
### ... with solver Eldarica Vanilla
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### ... with solver Spacer Quant
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### Running /home/solc-js/regression/types/mapping_equal_keys_2.sol ...
### ... with solver Eldarica Vanilla
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1218'[39m,
      formattedMessage: [32m'Warning: CHC: Error trying to invoke SMT solver.\n'[39m +
        [32m' --> test:6:3:\n'[39m +
        [32m'  |\n'[39m +
        [32m'6 | \t\tassert(map[x] == map[y]);\n'[39m +
        [32m'  | \t\t^^^^^^^^^^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Error trying to invoke SMT solver.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m' --> test:5:3:\n'[39m +
        [32m'  |\n'[39m +
        [32m'5 | \t\tassert(x == y);\n'[39m +
        [32m'  | \t\t^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'5840'[39m,
      formattedMessage: [32m'Warning: CHC: 1 verification condition(s) could not be proved. Enable the model checker option "show unproved" to see all of them. Consider choosing a specific contract to be verified in order to reduce the solving problems. Consider increasing the timeout per query.\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: 1 verification condition(s) could not be proved. Enable the model checker option "show unproved" to see all of them. Consider choosing a specific contract to be verified in order to reduce the solving problems. Consider increasing the timeout per query.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### ... with solver Spacer Quant
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m' --> test:5:3:\n'[39m +
        [32m'  |\n'[39m +
        [32m'5 | \t\tassert(x == y);\n'[39m +
        [32m'  | \t\t^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### Running /home/solc-js/regression/types/mapping_struct_assignment.sol ...
### ... with solver Eldarica Vanilla
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### ... with solver Spacer Quant
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### Running /home/solc-js/regression/types/mapping_unsupported_key_type_1.sol ...
### ... with solver Eldarica Vanilla
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### ... with solver Spacer Quant
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### Running /home/solc-js/regression/types/no_effect_statements.sol ...
### ... with solver Eldarica Vanilla
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6321'[39m,
      formattedMessage: [32m'Warning: Unnamed return variable can remain unassigned. Add an explicit return with value to all non-reverting code paths or name the variable.\n'[39m +
        [32m' --> test:3:39:\n'[39m +
        [32m'  |\n'[39m +
        [32m'3 |     function f() pure public returns (bytes1) {\n'[39m +
        [32m'  |                                       ^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Unnamed return variable can remain unassigned. Add an explicit return with value to all non-reverting code paths or name the variable.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6133'[39m,
      formattedMessage: [32m'Warning: Statement has no effect.\n'[39m +
        [32m' --> test:4:3:\n'[39m +
        [32m'  |\n'[39m +
        [32m'4 | \t\ts;\n'[39m +
        [32m'  | \t\t^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Statement has no effect.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6133'[39m,
      formattedMessage: [32m'Warning: Statement has no effect.\n'[39m +
        [32m' --> test:5:3:\n'[39m +
        [32m'  |\n'[39m +
        [32m'5 | \t\ts(1,2);\n'[39m +
        [32m'  | \t\t^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Statement has no effect.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6133'[39m,
      formattedMessage: [32m'Warning: Statement has no effect.\n'[39m +
        [32m' --> test:6:3:\n'[39m +
        [32m'  |\n'[39m +
        [32m'6 | \t\ts[7];\n'[39m +
        [32m'  | \t\t^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Statement has no effect.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6133'[39m,
      formattedMessage: [32m'Warning: Statement has no effect.\n'[39m +
        [32m' --> test:7:3:\n'[39m +
        [32m'  |\n'[39m +
        [32m'7 | \t\tuint;\n'[39m +
        [32m'  | \t\t^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Statement has no effect.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6133'[39m,
      formattedMessage: [32m'Warning: Statement has no effect.\n'[39m +
        [32m' --> test:8:3:\n'[39m +
        [32m'  |\n'[39m +
        [32m'8 | \t\tuint[7];\n'[39m +
        [32m'  | \t\t^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Statement has no effect.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'8364'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet implement type type(struct test.s memory[7] memory)\n'[39m +
        [32m' --> test:6:3:\n'[39m +
        [32m'  |\n'[39m +
        [32m'6 | \t\ts[7];\n'[39m +
        [32m'  | \t\t^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet implement type type(struct test.s memory[7] memory)'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'8364'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet implement type type(uint256[7] memory)\n'[39m +
        [32m' --> test:8:3:\n'[39m +
        [32m'  |\n'[39m +
        [32m'8 | \t\tuint[7];\n'[39m +
        [32m'  | \t\t^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet implement type type(uint256[7] memory)'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### ... with solver Spacer Quant
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6321'[39m,
      formattedMessage: [32m'Warning: Unnamed return variable can remain unassigned. Add an explicit return with value to all non-reverting code paths or name the variable.\n'[39m +
        [32m' --> test:3:39:\n'[39m +
        [32m'  |\n'[39m +
        [32m'3 |     function f() pure public returns (bytes1) {\n'[39m +
        [32m'  |                                       ^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Unnamed return variable can remain unassigned. Add an explicit return with value to all non-reverting code paths or name the variable.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6133'[39m,
      formattedMessage: [32m'Warning: Statement has no effect.\n'[39m +
        [32m' --> test:4:3:\n'[39m +
        [32m'  |\n'[39m +
        [32m'4 | \t\ts;\n'[39m +
        [32m'  | \t\t^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Statement has no effect.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6133'[39m,
      formattedMessage: [32m'Warning: Statement has no effect.\n'[39m +
        [32m' --> test:5:3:\n'[39m +
        [32m'  |\n'[39m +
        [32m'5 | \t\ts(1,2);\n'[39m +
        [32m'  | \t\t^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Statement has no effect.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6133'[39m,
      formattedMessage: [32m'Warning: Statement has no effect.\n'[39m +
        [32m' --> test:6:3:\n'[39m +
        [32m'  |\n'[39m +
        [32m'6 | \t\ts[7];\n'[39m +
        [32m'  | \t\t^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Statement has no effect.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6133'[39m,
      formattedMessage: [32m'Warning: Statement has no effect.\n'[39m +
        [32m' --> test:7:3:\n'[39m +
        [32m'  |\n'[39m +
        [32m'7 | \t\tuint;\n'[39m +
        [32m'  | \t\t^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Statement has no effect.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6133'[39m,
      formattedMessage: [32m'Warning: Statement has no effect.\n'[39m +
        [32m' --> test:8:3:\n'[39m +
        [32m'  |\n'[39m +
        [32m'8 | \t\tuint[7];\n'[39m +
        [32m'  | \t\t^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Statement has no effect.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'8364'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet implement type type(struct test.s memory[7] memory)\n'[39m +
        [32m' --> test:6:3:\n'[39m +
        [32m'  |\n'[39m +
        [32m'6 | \t\ts[7];\n'[39m +
        [32m'  | \t\t^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet implement type type(struct test.s memory[7] memory)'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'8364'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet implement type type(uint256[7] memory)\n'[39m +
        [32m' --> test:8:3:\n'[39m +
        [32m'  |\n'[39m +
        [32m'8 | \t\tuint[7];\n'[39m +
        [32m'  | \t\t^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet implement type type(uint256[7] memory)'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### Running /home/solc-js/regression/types/rational_large_1.sol ...
### ... with solver Eldarica Vanilla
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6321'[39m,
      formattedMessage: [32m'Warning: Unnamed return variable can remain unassigned. Add an explicit return with value to all non-reverting code paths or name the variable.\n'[39m +
        [32m' --> test:2:36:\n'[39m +
        [32m'  |\n'[39m +
        [32m'2 | \tfunction f() public pure returns (uint) {\n'[39m +
        [32m'  | \t                                  ^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Unnamed return variable can remain unassigned. Add an explicit return with value to all non-reverting code paths or name the variable.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m' --> test:5:3:\n'[39m +
        [32m'  |\n'[39m +
        [32m'5 | \t\tassert(x != 8);\n'[39m +
        [32m'  | \t\t^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### ... with solver Spacer Quant
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6321'[39m,
      formattedMessage: [32m'Warning: Unnamed return variable can remain unassigned. Add an explicit return with value to all non-reverting code paths or name the variable.\n'[39m +
        [32m' --> test:2:36:\n'[39m +
        [32m'  |\n'[39m +
        [32m'2 | \tfunction f() public pure returns (uint) {\n'[39m +
        [32m'  | \t                                  ^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Unnamed return variable can remain unassigned. Add an explicit return with value to all non-reverting code paths or name the variable.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m' --> test:5:3:\n'[39m +
        [32m'  |\n'[39m +
        [32m'5 | \t\tassert(x != 8);\n'[39m +
        [32m'  | \t\t^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### Running /home/solc-js/regression/types/static_array_implicit_push_1.sol ...
### ... with solver Eldarica Vanilla
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### ... with solver Spacer Quant
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### Running /home/solc-js/regression/types/static_array_implicit_push_2.sol ...
### ... with solver Eldarica Vanilla
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### ... with solver Spacer Quant
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### Running /home/solc-js/regression/types/static_array_implicit_push_3.sol ...
### ... with solver Eldarica Vanilla
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### ... with solver Spacer Quant
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### Running /home/solc-js/regression/types/static_array_implicit_push_4.sol ...
### ... with solver Eldarica Vanilla
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### ... with solver Spacer Quant
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### Running /home/solc-js/regression/types/static_array_length_1.sol ...
### ... with solver Eldarica Vanilla
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m' --> test:4:3:\n'[39m +
        [32m'  |\n'[39m +
        [32m'4 | \t\tassert(a.length < 2); // should fail\n'[39m +
        [32m'  | \t\t^^^^^^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m' --> test:5:3:\n'[39m +
        [32m'  |\n'[39m +
        [32m'5 | \t\tassert(a.length > 2); // should fail\n'[39m +
        [32m'  | \t\t^^^^^^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### ... with solver Spacer Quant
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m' --> test:4:3:\n'[39m +
        [32m'  |\n'[39m +
        [32m'4 | \t\tassert(a.length < 2); // should fail\n'[39m +
        [32m'  | \t\t^^^^^^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m' --> test:5:3:\n'[39m +
        [32m'  |\n'[39m +
        [32m'5 | \t\tassert(a.length > 2); // should fail\n'[39m +
        [32m'  | \t\t^^^^^^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### Running /home/solc-js/regression/types/static_array_length_2.sol ...
### ... with solver Eldarica Vanilla
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m' --> test:4:3:\n'[39m +
        [32m'  |\n'[39m +
        [32m'4 | \t\tassert(a.length < 2); // should fail\n'[39m +
        [32m'  | \t\t^^^^^^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m' --> test:5:3:\n'[39m +
        [32m'  |\n'[39m +
        [32m'5 | \t\tassert(a.length > 2); // should fail\n'[39m +
        [32m'  | \t\t^^^^^^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### ... with solver Spacer Quant
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m' --> test:4:3:\n'[39m +
        [32m'  |\n'[39m +
        [32m'4 | \t\tassert(a.length < 2); // should fail\n'[39m +
        [32m'  | \t\t^^^^^^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m' --> test:5:3:\n'[39m +
        [32m'  |\n'[39m +
        [32m'5 | \t\tassert(a.length > 2); // should fail\n'[39m +
        [32m'  | \t\t^^^^^^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### Running /home/solc-js/regression/types/static_array_length_3.sol ...
### ... with solver Eldarica Vanilla
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m' --> test:5:3:\n'[39m +
        [32m'  |\n'[39m +
        [32m'5 | \t\tassert(a.length < 2); // should fail\n'[39m +
        [32m'  | \t\t^^^^^^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m' --> test:6:3:\n'[39m +
        [32m'  |\n'[39m +
        [32m'6 | \t\tassert(a.length > 2); // should fail\n'[39m +
        [32m'  | \t\t^^^^^^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### ... with solver Spacer Quant
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m' --> test:5:3:\n'[39m +
        [32m'  |\n'[39m +
        [32m'5 | \t\tassert(a.length < 2); // should fail\n'[39m +
        [32m'  | \t\t^^^^^^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m' --> test:6:3:\n'[39m +
        [32m'  |\n'[39m +
        [32m'6 | \t\tassert(a.length > 2); // should fail\n'[39m +
        [32m'  | \t\t^^^^^^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### Running /home/solc-js/regression/types/static_array_length_4.sol ...
### ... with solver Eldarica Vanilla
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m' --> test:7:3:\n'[39m +
        [32m'  |\n'[39m +
        [32m'7 | \t\tassert(a.length < 2); // should fail\n'[39m +
        [32m'  | \t\t^^^^^^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m' --> test:8:3:\n'[39m +
        [32m'  |\n'[39m +
        [32m'8 | \t\tassert(a.length > 2); // should fail\n'[39m +
        [32m'  | \t\t^^^^^^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m'  --> test:12:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'12 | \t\tassert(a.length < 2); // should fail\n'[39m +
        [32m'   | \t\t^^^^^^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m'  --> test:13:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'13 | \t\tassert(a.length > 2); // should fail\n'[39m +
        [32m'   | \t\t^^^^^^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### ... with solver Spacer Quant
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m' --> test:7:3:\n'[39m +
        [32m'  |\n'[39m +
        [32m'7 | \t\tassert(a.length < 2); // should fail\n'[39m +
        [32m'  | \t\t^^^^^^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m' --> test:8:3:\n'[39m +
        [32m'  |\n'[39m +
        [32m'8 | \t\tassert(a.length > 2); // should fail\n'[39m +
        [32m'  | \t\t^^^^^^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m'  --> test:12:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'12 | \t\tassert(a.length < 2); // should fail\n'[39m +
        [32m'   | \t\t^^^^^^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m'  --> test:13:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'13 | \t\tassert(a.length > 2); // should fail\n'[39m +
        [32m'   | \t\t^^^^^^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### Running /home/solc-js/regression/types/static_array_length_5.sol ...
### ... with solver Eldarica Vanilla
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m' --> test:5:3:\n'[39m +
        [32m'  |\n'[39m +
        [32m'5 | \t\tassert(a.length < 2); // should fail\n'[39m +
        [32m'  | \t\t^^^^^^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m' --> test:6:3:\n'[39m +
        [32m'  |\n'[39m +
        [32m'6 | \t\tassert(a.length > 2); // should fail\n'[39m +
        [32m'  | \t\t^^^^^^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### ... with solver Spacer Quant
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m' --> test:5:3:\n'[39m +
        [32m'  |\n'[39m +
        [32m'5 | \t\tassert(a.length < 2); // should fail\n'[39m +
        [32m'  | \t\t^^^^^^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m' --> test:6:3:\n'[39m +
        [32m'  |\n'[39m +
        [32m'6 | \t\tassert(a.length > 2); // should fail\n'[39m +
        [32m'  | \t\t^^^^^^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### Running /home/solc-js/regression/types/storage_value_vars_1.sol ...
### ... with solver Eldarica Vanilla
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m'  --> test:17:9:\n'[39m +
        [32m'   |\n'[39m +
        [32m'17 |         assert(a > 0x0000000000000000000000000000000000000000 && b);\n'[39m +
        [32m'   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### ... with solver Spacer Quant
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m'  --> test:17:9:\n'[39m +
        [32m'   |\n'[39m +
        [32m'17 |         assert(a > 0x0000000000000000000000000000000000000000 && b);\n'[39m +
        [32m'   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### Running /home/solc-js/regression/types/storage_value_vars_2.sol ...
### ... with solver Eldarica Vanilla
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m' --> test:7:9:\n'[39m +
        [32m'  |\n'[39m +
        [32m'7 |         assert(c > 0);\n'[39m +
        [32m'  |         ^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### ... with solver Spacer Quant
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m' --> test:7:9:\n'[39m +
        [32m'  |\n'[39m +
        [32m'7 |         assert(c > 0);\n'[39m +
        [32m'  |         ^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### Running /home/solc-js/regression/types/storage_value_vars_3.sol ...
### ... with solver Eldarica Vanilla
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### ... with solver Spacer Quant
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### Running /home/solc-js/regression/types/storage_value_vars_4.sol ...
### ... with solver Eldarica Vanilla
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m' --> test:4:9:\n'[39m +
        [32m'  |\n'[39m +
        [32m'4 |         assert(c > 0);\n'[39m +
        [32m'  |         ^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### ... with solver Spacer Quant
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m' --> test:4:9:\n'[39m +
        [32m'  |\n'[39m +
        [32m'4 |         assert(c > 0);\n'[39m +
        [32m'  |         ^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### Running /home/solc-js/regression/types/string_1.sol ...
### ... with solver Eldarica Vanilla
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m' --> test:4:3:\n'[39m +
        [32m'  |\n'[39m +
        [32m'4 | \t\tassert(bytes(s1).length == bytes(s2).length);\n'[39m +
        [32m'  | \t\t^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### ... with solver Spacer Quant
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m' --> test:4:3:\n'[39m +
        [32m'  |\n'[39m +
        [32m'4 | \t\tassert(bytes(s1).length == bytes(s2).length);\n'[39m +
        [32m'  | \t\t^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### Running /home/solc-js/regression/types/string_2.sol ...
### ... with solver Eldarica Vanilla
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'2072'[39m,
      formattedMessage: [32m'Warning: Unused local variable.\n'[39m +
        [32m' --> test:4:3:\n'[39m +
        [32m'  |\n'[39m +
        [32m'4 | \t\tstring memory s = "Hello World";\n'[39m +
        [32m'  | \t\t^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Unused local variable.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### ... with solver Spacer Quant
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'2072'[39m,
      formattedMessage: [32m'Warning: Unused local variable.\n'[39m +
        [32m' --> test:4:3:\n'[39m +
        [32m'  |\n'[39m +
        [32m'4 | \t\tstring memory s = "Hello World";\n'[39m +
        [32m'  | \t\t^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Unused local variable.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### Running /home/solc-js/regression/types/string_length.sol ...
### ... with solver Eldarica Vanilla
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### ... with solver Spacer Quant
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### Running /home/solc-js/regression/types/string_literal_assignment_1.sol ...
### ... with solver Eldarica Vanilla
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m' --> test:7:3:\n'[39m +
        [32m'  |\n'[39m +
        [32m'7 | \t\tassert(_x == z);\n'[39m +
        [32m'  | \t\t^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### ... with solver Spacer Quant
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m' --> test:7:3:\n'[39m +
        [32m'  |\n'[39m +
        [32m'7 | \t\tassert(_x == z);\n'[39m +
        [32m'  | \t\t^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### Running /home/solc-js/regression/types/string_literal_assignment_2.sol ...
### ... with solver Eldarica Vanilla
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m' --> test:6:3:\n'[39m +
        [32m'  |\n'[39m +
        [32m'6 | \t\tassert(_x == z);\n'[39m +
        [32m'  | \t\t^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### ... with solver Spacer Quant
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m' --> test:6:3:\n'[39m +
        [32m'  |\n'[39m +
        [32m'6 | \t\tassert(_x == z);\n'[39m +
        [32m'  | \t\t^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### Running /home/solc-js/regression/types/string_literal_assignment_3.sol ...
### ... with solver Eldarica Vanilla
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m' --> test:8:3:\n'[39m +
        [32m'  |\n'[39m +
        [32m'8 | \t\tassert(_x == z);\n'[39m +
        [32m'  | \t\t^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### ... with solver Spacer Quant
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m' --> test:8:3:\n'[39m +
        [32m'  |\n'[39m +
        [32m'8 | \t\tassert(_x == z);\n'[39m +
        [32m'  | \t\t^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### Running /home/solc-js/regression/types/string_literal_assignment_4.sol ...
### ... with solver Eldarica Vanilla
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m'  --> test:12:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'12 | \t\tassert(_x == z);\n'[39m +
        [32m'   | \t\t^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### ... with solver Spacer Quant
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m'  --> test:12:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'12 | \t\tassert(_x == z);\n'[39m +
        [32m'   | \t\t^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### Running /home/solc-js/regression/types/string_literal_assignment_5.sol ...
### ... with solver Eldarica Vanilla
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m'  --> test:10:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'10 | \t\tassert(_x == z);\n'[39m +
        [32m'   | \t\t^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### ... with solver Spacer Quant
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m'  --> test:10:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'10 | \t\tassert(_x == z);\n'[39m +
        [32m'   | \t\t^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### Running /home/solc-js/regression/types/string_literal_comparison_1.sol ...
### ... with solver Eldarica Vanilla
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m' --> test:7:3:\n'[39m +
        [32m'  |\n'[39m +
        [32m'7 | \t\tassert(y == "testx");\n'[39m +
        [32m'  | \t\t^^^^^^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### ... with solver Spacer Quant
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m' --> test:7:3:\n'[39m +
        [32m'  |\n'[39m +
        [32m'7 | \t\tassert(y == "testx");\n'[39m +
        [32m'  | \t\t^^^^^^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### Running /home/solc-js/regression/types/string_literal_comparison_2.sol ...
### ... with solver Eldarica Vanilla
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m' --> test:6:3:\n'[39m +
        [32m'  |\n'[39m +
        [32m'6 | \t\tassert(z == "test");\n'[39m +
        [32m'  | \t\t^^^^^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m' --> test:7:3:\n'[39m +
        [32m'  |\n'[39m +
        [32m'7 | \t\tassert(y != "testx");\n'[39m +
        [32m'  | \t\t^^^^^^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### ... with solver Spacer Quant
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m' --> test:6:3:\n'[39m +
        [32m'  |\n'[39m +
        [32m'6 | \t\tassert(z == "test");\n'[39m +
        [32m'  | \t\t^^^^^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m' --> test:7:3:\n'[39m +
        [32m'  |\n'[39m +
        [32m'7 | \t\tassert(y != "testx");\n'[39m +
        [32m'  | \t\t^^^^^^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### Running /home/solc-js/regression/types/struct_1.sol ...
### ... with solver Eldarica Vanilla
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### ... with solver Spacer Quant
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### Running /home/solc-js/regression/types/struct_array_branches_1d.sol ...
### ... with solver Eldarica Vanilla
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### ... with solver Spacer Quant
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### Running /home/solc-js/regression/types/struct_array_branches_2d.sol ...
### ... with solver Eldarica Vanilla
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### ... with solver Spacer Quant
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### Running /home/solc-js/regression/types/struct_array_branches_3d.sol ...
### ... with solver Eldarica Vanilla
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### ... with solver Spacer Quant
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'5840'[39m,
      formattedMessage: [32m'Warning: CHC: 1 verification condition(s) could not be proved. Enable the model checker option "show unproved" to see all of them. Consider choosing a specific contract to be verified in order to reduce the solving problems. Consider increasing the timeout per query.\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: 1 verification condition(s) could not be proved. Enable the model checker option "show unproved" to see all of them. Consider choosing a specific contract to be verified in order to reduce the solving problems. Consider increasing the timeout per query.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### Running /home/solc-js/regression/types/tuple_1_chain_1.sol ...
### ... with solver Eldarica Vanilla
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### ... with solver Spacer Quant
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### Running /home/solc-js/regression/types/tuple_1_chain_2.sol ...
### ... with solver Eldarica Vanilla
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### ... with solver Spacer Quant
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### Running /home/solc-js/regression/types/tuple_1_chain_n.sol ...
### ... with solver Eldarica Vanilla
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### ... with solver Spacer Quant
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### Running /home/solc-js/regression/types/tuple_array_pop_1.sol ...
### ... with solver Eldarica Vanilla
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### ... with solver Spacer Quant
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### Running /home/solc-js/regression/types/tuple_array_pop_2.sol ...
### ... with solver Eldarica Vanilla
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### ... with solver Spacer Quant
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### Running /home/solc-js/regression/types/tuple_assignment.sol ...
### ... with solver Eldarica Vanilla
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### ... with solver Spacer Quant
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### Running /home/solc-js/regression/types/tuple_assignment_array.sol ...
### ... with solver Eldarica Vanilla
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### ... with solver Spacer Quant
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### Running /home/solc-js/regression/types/tuple_assignment_array_empty.sol ...
### ... with solver Eldarica Vanilla
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m'  --> test:12:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'12 | \t\tassert(a[x] == 2);\n'[39m +
        [32m'   | \t\t^^^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### ... with solver Spacer Quant
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m'  --> test:12:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'12 | \t\tassert(a[x] == 2);\n'[39m +
        [32m'   | \t\t^^^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### Running /home/solc-js/regression/types/tuple_assignment_compound.sol ...
### ... with solver Eldarica Vanilla
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m' --> test:7:3:\n'[39m +
        [32m'  |\n'[39m +
        [32m'7 | \t\tassert(a == 3);\n'[39m +
        [32m'  | \t\t^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### ... with solver Spacer Quant
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m' --> test:7:3:\n'[39m +
        [32m'  |\n'[39m +
        [32m'7 | \t\tassert(a == 3);\n'[39m +
        [32m'  | \t\t^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### Running /home/solc-js/regression/types/tuple_assignment_empty.sol ...
### ... with solver Eldarica Vanilla
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m' --> test:8:3:\n'[39m +
        [32m'  |\n'[39m +
        [32m'8 | \t\tassert(y == 4);\n'[39m +
        [32m'  | \t\t^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### ... with solver Spacer Quant
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m' --> test:8:3:\n'[39m +
        [32m'  |\n'[39m +
        [32m'8 | \t\tassert(y == 4);\n'[39m +
        [32m'  | \t\t^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### Running /home/solc-js/regression/types/tuple_assignment_multiple_calls.sol ...
### ... with solver Eldarica Vanilla
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### ... with solver Spacer Quant
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### Running /home/solc-js/regression/types/tuple_declarations.sol ...
### ... with solver Eldarica Vanilla
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### ... with solver Spacer Quant
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### Running /home/solc-js/regression/types/tuple_declarations_empty.sol ...
### ... with solver Eldarica Vanilla
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### ... with solver Spacer Quant
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### Running /home/solc-js/regression/types/tuple_declarations_function.sol ...
### ... with solver Eldarica Vanilla
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### ... with solver Spacer Quant
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### Running /home/solc-js/regression/types/tuple_declarations_function_2.sol ...
### ... with solver Eldarica Vanilla
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### ... with solver Spacer Quant
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### Running /home/solc-js/regression/types/tuple_declarations_function_empty.sol ...
### ... with solver Eldarica Vanilla
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m'  --> test:11:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'11 | \t\tassert(!b);\n'[39m +
        [32m'   | \t\t^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### ... with solver Spacer Quant
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m'  --> test:11:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'11 | \t\tassert(!b);\n'[39m +
        [32m'   | \t\t^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### Running /home/solc-js/regression/types/tuple_different_count_assignment_1.sol ...
### ... with solver Eldarica Vanilla
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6321'[39m,
      formattedMessage: [32m'Warning: Unnamed return variable can remain unassigned. Add an explicit return with value to all non-reverting code paths or name the variable.\n'[39m +
        [32m' --> test:2:35:\n'[39m +
        [32m'  |\n'[39m +
        [32m'2 | \tfunction f() public pure returns(int) {\n'[39m +
        [32m'  | \t                                 ^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Unnamed return variable can remain unassigned. Add an explicit return with value to all non-reverting code paths or name the variable.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m' --> test:6:3:\n'[39m +
        [32m'  |\n'[39m +
        [32m'6 | \t\tassert(a == 3);\n'[39m +
        [32m'  | \t\t^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### ... with solver Spacer Quant
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6321'[39m,
      formattedMessage: [32m'Warning: Unnamed return variable can remain unassigned. Add an explicit return with value to all non-reverting code paths or name the variable.\n'[39m +
        [32m' --> test:2:35:\n'[39m +
        [32m'  |\n'[39m +
        [32m'2 | \tfunction f() public pure returns(int) {\n'[39m +
        [32m'  | \t                                 ^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Unnamed return variable can remain unassigned. Add an explicit return with value to all non-reverting code paths or name the variable.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m' --> test:6:3:\n'[39m +
        [32m'  |\n'[39m +
        [32m'6 | \t\tassert(a == 3);\n'[39m +
        [32m'  | \t\t^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### Running /home/solc-js/regression/types/tuple_different_count_assignment_2.sol ...
### ... with solver Eldarica Vanilla
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6321'[39m,
      formattedMessage: [32m'Warning: Unnamed return variable can remain unassigned. Add an explicit return with value to all non-reverting code paths or name the variable.\n'[39m +
        [32m' --> test:2:35:\n'[39m +
        [32m'  |\n'[39m +
        [32m'2 | \tfunction f() public pure returns(int) {\n'[39m +
        [32m'  | \t                                 ^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Unnamed return variable can remain unassigned. Add an explicit return with value to all non-reverting code paths or name the variable.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m' --> test:6:3:\n'[39m +
        [32m'  |\n'[39m +
        [32m'6 | \t\tassert(a == 3);\n'[39m +
        [32m'  | \t\t^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### ... with solver Spacer Quant
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6321'[39m,
      formattedMessage: [32m'Warning: Unnamed return variable can remain unassigned. Add an explicit return with value to all non-reverting code paths or name the variable.\n'[39m +
        [32m' --> test:2:35:\n'[39m +
        [32m'  |\n'[39m +
        [32m'2 | \tfunction f() public pure returns(int) {\n'[39m +
        [32m'  | \t                                 ^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Unnamed return variable can remain unassigned. Add an explicit return with value to all non-reverting code paths or name the variable.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m' --> test:6:3:\n'[39m +
        [32m'  |\n'[39m +
        [32m'6 | \t\tassert(a == 3);\n'[39m +
        [32m'  | \t\t^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### Running /home/solc-js/regression/types/tuple_extra_parens_1.sol ...
### ... with solver Eldarica Vanilla
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6321'[39m,
      formattedMessage: [32m'Warning: Unnamed return variable can remain unassigned. Add an explicit return with value to all non-reverting code paths or name the variable.\n'[39m +
        [32m' --> test:2:36:\n'[39m +
        [32m'  |\n'[39m +
        [32m'2 | \tfunction f2() public pure returns(int) {\n'[39m +
        [32m'  | \t                                  ^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Unnamed return variable can remain unassigned. Add an explicit return with value to all non-reverting code paths or name the variable.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### ... with solver Spacer Quant
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6321'[39m,
      formattedMessage: [32m'Warning: Unnamed return variable can remain unassigned. Add an explicit return with value to all non-reverting code paths or name the variable.\n'[39m +
        [32m' --> test:2:36:\n'[39m +
        [32m'  |\n'[39m +
        [32m'2 | \tfunction f2() public pure returns(int) {\n'[39m +
        [32m'  | \t                                  ^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Unnamed return variable can remain unassigned. Add an explicit return with value to all non-reverting code paths or name the variable.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### Running /home/solc-js/regression/types/tuple_extra_parens_2.sol ...
### ... with solver Eldarica Vanilla
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6321'[39m,
      formattedMessage: [32m'Warning: Unnamed return variable can remain unassigned. Add an explicit return with value to all non-reverting code paths or name the variable.\n'[39m +
        [32m' --> test:2:36:\n'[39m +
        [32m'  |\n'[39m +
        [32m'2 | \tfunction f2() public pure returns(int) {\n'[39m +
        [32m'  | \t                                  ^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Unnamed return variable can remain unassigned. Add an explicit return with value to all non-reverting code paths or name the variable.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### ... with solver Spacer Quant
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6321'[39m,
      formattedMessage: [32m'Warning: Unnamed return variable can remain unassigned. Add an explicit return with value to all non-reverting code paths or name the variable.\n'[39m +
        [32m' --> test:2:36:\n'[39m +
        [32m'  |\n'[39m +
        [32m'2 | \tfunction f2() public pure returns(int) {\n'[39m +
        [32m'  | \t                                  ^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Unnamed return variable can remain unassigned. Add an explicit return with value to all non-reverting code paths or name the variable.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### Running /home/solc-js/regression/types/tuple_extra_parens_3.sol ...
### ... with solver Eldarica Vanilla
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6321'[39m,
      formattedMessage: [32m'Warning: Unnamed return variable can remain unassigned. Add an explicit return with value to all non-reverting code paths or name the variable.\n'[39m +
        [32m' --> test:2:36:\n'[39m +
        [32m'  |\n'[39m +
        [32m'2 | \tfunction f2() public pure returns(int) {\n'[39m +
        [32m'  | \t                                  ^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Unnamed return variable can remain unassigned. Add an explicit return with value to all non-reverting code paths or name the variable.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### ... with solver Spacer Quant
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6321'[39m,
      formattedMessage: [32m'Warning: Unnamed return variable can remain unassigned. Add an explicit return with value to all non-reverting code paths or name the variable.\n'[39m +
        [32m' --> test:2:36:\n'[39m +
        [32m'  |\n'[39m +
        [32m'2 | \tfunction f2() public pure returns(int) {\n'[39m +
        [32m'  | \t                                  ^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Unnamed return variable can remain unassigned. Add an explicit return with value to all non-reverting code paths or name the variable.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### Running /home/solc-js/regression/types/tuple_extra_parens_4.sol ...
### ... with solver Eldarica Vanilla
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6321'[39m,
      formattedMessage: [32m'Warning: Unnamed return variable can remain unassigned. Add an explicit return with value to all non-reverting code paths or name the variable.\n'[39m +
        [32m' --> test:2:36:\n'[39m +
        [32m'  |\n'[39m +
        [32m'2 | \tfunction f2() public pure returns(int) {\n'[39m +
        [32m'  | \t                                  ^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Unnamed return variable can remain unassigned. Add an explicit return with value to all non-reverting code paths or name the variable.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### ... with solver Spacer Quant
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6321'[39m,
      formattedMessage: [32m'Warning: Unnamed return variable can remain unassigned. Add an explicit return with value to all non-reverting code paths or name the variable.\n'[39m +
        [32m' --> test:2:36:\n'[39m +
        [32m'  |\n'[39m +
        [32m'2 | \tfunction f2() public pure returns(int) {\n'[39m +
        [32m'  | \t                                  ^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Unnamed return variable can remain unassigned. Add an explicit return with value to all non-reverting code paths or name the variable.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### Running /home/solc-js/regression/types/tuple_extra_parens_5.sol ...
### ... with solver Eldarica Vanilla
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6321'[39m,
      formattedMessage: [32m'Warning: Unnamed return variable can remain unassigned. Add an explicit return with value to all non-reverting code paths or name the variable.\n'[39m +
        [32m' --> test:2:36:\n'[39m +
        [32m'  |\n'[39m +
        [32m'2 | \tfunction f2() public pure returns(int) {\n'[39m +
        [32m'  | \t                                  ^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Unnamed return variable can remain unassigned. Add an explicit return with value to all non-reverting code paths or name the variable.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### ... with solver Spacer Quant
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6321'[39m,
      formattedMessage: [32m'Warning: Unnamed return variable can remain unassigned. Add an explicit return with value to all non-reverting code paths or name the variable.\n'[39m +
        [32m' --> test:2:36:\n'[39m +
        [32m'  |\n'[39m +
        [32m'2 | \tfunction f2() public pure returns(int) {\n'[39m +
        [32m'  | \t                                  ^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Unnamed return variable can remain unassigned. Add an explicit return with value to all non-reverting code paths or name the variable.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### Running /home/solc-js/regression/types/tuple_extra_parens_6.sol ...
### ... with solver Eldarica Vanilla
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### ... with solver Spacer Quant
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### Running /home/solc-js/regression/types/tuple_extra_parens_7.sol ...
### ... with solver Eldarica Vanilla
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### ... with solver Spacer Quant
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### Running /home/solc-js/regression/types/tuple_function.sol ...
### ... with solver Eldarica Vanilla
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m'  --> test:10:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'10 | \t\tassert(x == 1);\n'[39m +
        [32m'   | \t\t^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m'  --> test:11:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'11 | \t\tassert(y == 4);\n'[39m +
        [32m'   | \t\t^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### ... with solver Spacer Quant
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m'  --> test:10:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'10 | \t\tassert(x == 1);\n'[39m +
        [32m'   | \t\t^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m'  --> test:11:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'11 | \t\tassert(y == 4);\n'[39m +
        [32m'   | \t\t^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### Running /home/solc-js/regression/types/tuple_function_2.sol ...
### ... with solver Eldarica Vanilla
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m'  --> test:11:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'11 | \t\tassert(y == 4);\n'[39m +
        [32m'   | \t\t^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### ... with solver Spacer Quant
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m'  --> test:11:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'11 | \t\tassert(y == 4);\n'[39m +
        [32m'   | \t\t^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### Running /home/solc-js/regression/types/tuple_function_3.sol ...
### ... with solver Eldarica Vanilla
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m'  --> test:11:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'11 | \t\tassert(x == 2);\n'[39m +
        [32m'   | \t\t^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m'  --> test:12:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'12 | \t\tassert(y == 4);\n'[39m +
        [32m'   | \t\t^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### ... with solver Spacer Quant
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m'  --> test:11:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'11 | \t\tassert(x == 2);\n'[39m +
        [32m'   | \t\t^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m'  --> test:12:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'12 | \t\tassert(y == 4);\n'[39m +
        [32m'   | \t\t^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### Running /home/solc-js/regression/types/tuple_return_branch.sol ...
### ... with solver Eldarica Vanilla
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### ... with solver Spacer Quant
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### Running /home/solc-js/regression/types/tuple_single_element_1.sol ...
### ... with solver Eldarica Vanilla
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6133'[39m,
      formattedMessage: [32m'Warning: Statement has no effect.\n'[39m +
        [32m' --> test:3:3:\n'[39m +
        [32m'  |\n'[39m +
        [32m'3 | \t\t(("", 2));\n'[39m +
        [32m'  | \t\t^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Statement has no effect.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### ... with solver Spacer Quant
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6133'[39m,
      formattedMessage: [32m'Warning: Statement has no effect.\n'[39m +
        [32m' --> test:3:3:\n'[39m +
        [32m'  |\n'[39m +
        [32m'3 | \t\t(("", 2));\n'[39m +
        [32m'  | \t\t^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Statement has no effect.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### Running /home/solc-js/regression/types/tuple_single_element_2.sol ...
### ... with solver Eldarica Vanilla
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6133'[39m,
      formattedMessage: [32m'Warning: Statement has no effect.\n'[39m +
        [32m' --> test:3:3:\n'[39m +
        [32m'  |\n'[39m +
        [32m'3 | \t\t(("", ""));\n'[39m +
        [32m'  | \t\t^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Statement has no effect.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### ... with solver Spacer Quant
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6133'[39m,
      formattedMessage: [32m'Warning: Statement has no effect.\n'[39m +
        [32m' --> test:3:3:\n'[39m +
        [32m'  |\n'[39m +
        [32m'3 | \t\t(("", ""));\n'[39m +
        [32m'  | \t\t^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Statement has no effect.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### Running /home/solc-js/regression/types/tuple_single_non_tuple_element.sol ...
### ... with solver Eldarica Vanilla
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6133'[39m,
      formattedMessage: [32m'Warning: Statement has no effect.\n'[39m +
        [32m' --> test:3:3:\n'[39m +
        [32m'  |\n'[39m +
        [32m'3 | \t\t(2);\n'[39m +
        [32m'  | \t\t^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Statement has no effect.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### ... with solver Spacer Quant
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6133'[39m,
      formattedMessage: [32m'Warning: Statement has no effect.\n'[39m +
        [32m' --> test:3:3:\n'[39m +
        [32m'  |\n'[39m +
        [32m'3 | \t\t(2);\n'[39m +
        [32m'  | \t\t^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Statement has no effect.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### Running /home/solc-js/regression/types/tuple_tuple.sol ...
### ... with solver Eldarica Vanilla
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### ... with solver Spacer Quant
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### Running /home/solc-js/regression/types/type_expression_array_2d.sol ...
### ... with solver Eldarica Vanilla
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6133'[39m,
      formattedMessage: [32m'Warning: Statement has no effect.\n'[39m +
        [32m' --> test:3:28:\n'[39m +
        [32m'  |\n'[39m +
        [32m'3 | function f() public pure { int[][]; }\n'[39m +
        [32m'  |                            ^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Statement has no effect.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'8364'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet implement type type(int256[] memory)\n'[39m +
        [32m' --> test:3:28:\n'[39m +
        [32m'  |\n'[39m +
        [32m'3 | function f() public pure { int[][]; }\n'[39m +
        [32m'  |                            ^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet implement type type(int256[] memory)'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'8364'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet implement type type(int256[] memory[] memory)\n'[39m +
        [32m' --> test:3:28:\n'[39m +
        [32m'  |\n'[39m +
        [32m'3 | function f() public pure { int[][]; }\n'[39m +
        [32m'  |                            ^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet implement type type(int256[] memory[] memory)'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### ... with solver Spacer Quant
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6133'[39m,
      formattedMessage: [32m'Warning: Statement has no effect.\n'[39m +
        [32m' --> test:3:28:\n'[39m +
        [32m'  |\n'[39m +
        [32m'3 | function f() public pure { int[][]; }\n'[39m +
        [32m'  |                            ^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Statement has no effect.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'8364'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet implement type type(int256[] memory)\n'[39m +
        [32m' --> test:3:28:\n'[39m +
        [32m'  |\n'[39m +
        [32m'3 | function f() public pure { int[][]; }\n'[39m +
        [32m'  |                            ^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet implement type type(int256[] memory)'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'8364'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet implement type type(int256[] memory[] memory)\n'[39m +
        [32m' --> test:3:28:\n'[39m +
        [32m'  |\n'[39m +
        [32m'3 | function f() public pure { int[][]; }\n'[39m +
        [32m'  |                            ^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet implement type type(int256[] memory[] memory)'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### Running /home/solc-js/regression/types/type_expression_array_3d.sol ...
### ... with solver Eldarica Vanilla
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6133'[39m,
      formattedMessage: [32m'Warning: Statement has no effect.\n'[39m +
        [32m' --> test:3:28:\n'[39m +
        [32m'  |\n'[39m +
        [32m'3 | function f() public pure { int[][][]; }\n'[39m +
        [32m'  |                            ^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Statement has no effect.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'8364'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet implement type type(int256[] memory)\n'[39m +
        [32m' --> test:3:28:\n'[39m +
        [32m'  |\n'[39m +
        [32m'3 | function f() public pure { int[][][]; }\n'[39m +
        [32m'  |                            ^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet implement type type(int256[] memory)'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'8364'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet implement type type(int256[] memory[] memory)\n'[39m +
        [32m' --> test:3:28:\n'[39m +
        [32m'  |\n'[39m +
        [32m'3 | function f() public pure { int[][][]; }\n'[39m +
        [32m'  |                            ^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet implement type type(int256[] memory[] memory)'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'8364'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet implement type type(int256[] memory[] memory[] memory)\n'[39m +
        [32m' --> test:3:28:\n'[39m +
        [32m'  |\n'[39m +
        [32m'3 | function f() public pure { int[][][]; }\n'[39m +
        [32m'  |                            ^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet implement type type(int256[] memory[] memory[] memory)'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### ... with solver Spacer Quant
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6133'[39m,
      formattedMessage: [32m'Warning: Statement has no effect.\n'[39m +
        [32m' --> test:3:28:\n'[39m +
        [32m'  |\n'[39m +
        [32m'3 | function f() public pure { int[][][]; }\n'[39m +
        [32m'  |                            ^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Statement has no effect.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'8364'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet implement type type(int256[] memory)\n'[39m +
        [32m' --> test:3:28:\n'[39m +
        [32m'  |\n'[39m +
        [32m'3 | function f() public pure { int[][][]; }\n'[39m +
        [32m'  |                            ^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet implement type type(int256[] memory)'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'8364'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet implement type type(int256[] memory[] memory)\n'[39m +
        [32m' --> test:3:28:\n'[39m +
        [32m'  |\n'[39m +
        [32m'3 | function f() public pure { int[][][]; }\n'[39m +
        [32m'  |                            ^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet implement type type(int256[] memory[] memory)'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'8364'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet implement type type(int256[] memory[] memory[] memory)\n'[39m +
        [32m' --> test:3:28:\n'[39m +
        [32m'  |\n'[39m +
        [32m'3 | function f() public pure { int[][][]; }\n'[39m +
        [32m'  |                            ^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet implement type type(int256[] memory[] memory[] memory)'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### Running /home/solc-js/regression/types/type_expression_tuple_array_2d.sol ...
### ... with solver Eldarica Vanilla
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6133'[39m,
      formattedMessage: [32m'Warning: Statement has no effect.\n'[39m +
        [32m' --> test:3:28:\n'[39m +
        [32m'  |\n'[39m +
        [32m'3 | function f() public pure { (int[][]); }\n'[39m +
        [32m'  |                            ^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Statement has no effect.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'8364'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet implement type type(int256[] memory)\n'[39m +
        [32m' --> test:3:29:\n'[39m +
        [32m'  |\n'[39m +
        [32m'3 | function f() public pure { (int[][]); }\n'[39m +
        [32m'  |                             ^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet implement type type(int256[] memory)'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'8364'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet implement type type(int256[] memory[] memory)\n'[39m +
        [32m' --> test:3:29:\n'[39m +
        [32m'  |\n'[39m +
        [32m'3 | function f() public pure { (int[][]); }\n'[39m +
        [32m'  |                             ^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet implement type type(int256[] memory[] memory)'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### ... with solver Spacer Quant
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6133'[39m,
      formattedMessage: [32m'Warning: Statement has no effect.\n'[39m +
        [32m' --> test:3:28:\n'[39m +
        [32m'  |\n'[39m +
        [32m'3 | function f() public pure { (int[][]); }\n'[39m +
        [32m'  |                            ^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Statement has no effect.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'8364'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet implement type type(int256[] memory)\n'[39m +
        [32m' --> test:3:29:\n'[39m +
        [32m'  |\n'[39m +
        [32m'3 | function f() public pure { (int[][]); }\n'[39m +
        [32m'  |                             ^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet implement type type(int256[] memory)'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'8364'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet implement type type(int256[] memory[] memory)\n'[39m +
        [32m' --> test:3:29:\n'[39m +
        [32m'  |\n'[39m +
        [32m'3 | function f() public pure { (int[][]); }\n'[39m +
        [32m'  |                             ^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet implement type type(int256[] memory[] memory)'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### Running /home/solc-js/regression/types/type_expression_tuple_array_3d.sol ...
### ... with solver Eldarica Vanilla
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6133'[39m,
      formattedMessage: [32m'Warning: Statement has no effect.\n'[39m +
        [32m' --> test:3:28:\n'[39m +
        [32m'  |\n'[39m +
        [32m'3 | function f() public pure { (int[][][]); }\n'[39m +
        [32m'  |                            ^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Statement has no effect.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'8364'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet implement type type(int256[] memory)\n'[39m +
        [32m' --> test:3:29:\n'[39m +
        [32m'  |\n'[39m +
        [32m'3 | function f() public pure { (int[][][]); }\n'[39m +
        [32m'  |                             ^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet implement type type(int256[] memory)'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'8364'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet implement type type(int256[] memory[] memory)\n'[39m +
        [32m' --> test:3:29:\n'[39m +
        [32m'  |\n'[39m +
        [32m'3 | function f() public pure { (int[][][]); }\n'[39m +
        [32m'  |                             ^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet implement type type(int256[] memory[] memory)'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'8364'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet implement type type(int256[] memory[] memory[] memory)\n'[39m +
        [32m' --> test:3:29:\n'[39m +
        [32m'  |\n'[39m +
        [32m'3 | function f() public pure { (int[][][]); }\n'[39m +
        [32m'  |                             ^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet implement type type(int256[] memory[] memory[] memory)'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### ... with solver Spacer Quant
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6133'[39m,
      formattedMessage: [32m'Warning: Statement has no effect.\n'[39m +
        [32m' --> test:3:28:\n'[39m +
        [32m'  |\n'[39m +
        [32m'3 | function f() public pure { (int[][][]); }\n'[39m +
        [32m'  |                            ^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Statement has no effect.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'8364'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet implement type type(int256[] memory)\n'[39m +
        [32m' --> test:3:29:\n'[39m +
        [32m'  |\n'[39m +
        [32m'3 | function f() public pure { (int[][][]); }\n'[39m +
        [32m'  |                             ^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet implement type type(int256[] memory)'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'8364'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet implement type type(int256[] memory[] memory)\n'[39m +
        [32m' --> test:3:29:\n'[39m +
        [32m'  |\n'[39m +
        [32m'3 | function f() public pure { (int[][][]); }\n'[39m +
        [32m'  |                             ^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet implement type type(int256[] memory[] memory)'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'8364'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet implement type type(int256[] memory[] memory[] memory)\n'[39m +
        [32m' --> test:3:29:\n'[39m +
        [32m'  |\n'[39m +
        [32m'3 | function f() public pure { (int[][][]); }\n'[39m +
        [32m'  |                             ^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet implement type type(int256[] memory[] memory[] memory)'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### Running /home/solc-js/regression/types/type_interfaceid.sol ...
### ... with solver Eldarica Vanilla
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m'  --> test:22:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'22 | \t\tassert(type(I1).interfaceId == type(I2).interfaceId);\n'[39m +
        [32m'   | \t\t^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m'  --> test:25:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'25 | \t\tassert(type(I2).interfaceId == type(I3).interfaceId);\n'[39m +
        [32m'   | \t\t^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### ... with solver Spacer Quant
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m'  --> test:22:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'22 | \t\tassert(type(I1).interfaceId == type(I2).interfaceId);\n'[39m +
        [32m'   | \t\t^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m'  --> test:25:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'25 | \t\tassert(type(I2).interfaceId == type(I3).interfaceId);\n'[39m +
        [32m'   | \t\t^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### Running /home/solc-js/regression/types/type_meta_unsupported.sol ...
### ... with solver Eldarica Vanilla
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'7507'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet support this expression.\n'[39m +
        [32m' --> test:6:16:\n'[39m +
        [32m'  |\n'[39m +
        [32m'6 | \t\tassert(bytes(type(C).name).length != 0);\n'[39m +
        [32m'  | \t\t             ^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet support this expression.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'7507'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet support this expression.\n'[39m +
        [32m' --> test:7:10:\n'[39m +
        [32m'  |\n'[39m +
        [32m'7 | \t\tassert(type(A).creationCode.length != 0);\n'[39m +
        [32m'  | \t\t       ^^^^^^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet support this expression.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'7507'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet support this expression.\n'[39m +
        [32m' --> test:8:10:\n'[39m +
        [32m'  |\n'[39m +
        [32m'8 | \t\tassert(type(A).runtimeCode.length != 0);\n'[39m +
        [32m'  | \t\t       ^^^^^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet support this expression.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m' --> test:6:3:\n'[39m +
        [32m'  |\n'[39m +
        [32m'6 | \t\tassert(bytes(type(C).name).length != 0);\n'[39m +
        [32m'  | \t\t^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m' --> test:7:3:\n'[39m +
        [32m'  |\n'[39m +
        [32m'7 | \t\tassert(type(A).creationCode.length != 0);\n'[39m +
        [32m'  | \t\t^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m' --> test:8:3:\n'[39m +
        [32m'  |\n'[39m +
        [32m'8 | \t\tassert(type(A).runtimeCode.length != 0);\n'[39m +
        [32m'  | \t\t^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### ... with solver Spacer Quant
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'7507'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet support this expression.\n'[39m +
        [32m' --> test:6:16:\n'[39m +
        [32m'  |\n'[39m +
        [32m'6 | \t\tassert(bytes(type(C).name).length != 0);\n'[39m +
        [32m'  | \t\t             ^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet support this expression.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'7507'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet support this expression.\n'[39m +
        [32m' --> test:7:10:\n'[39m +
        [32m'  |\n'[39m +
        [32m'7 | \t\tassert(type(A).creationCode.length != 0);\n'[39m +
        [32m'  | \t\t       ^^^^^^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet support this expression.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'7507'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet support this expression.\n'[39m +
        [32m' --> test:8:10:\n'[39m +
        [32m'  |\n'[39m +
        [32m'8 | \t\tassert(type(A).runtimeCode.length != 0);\n'[39m +
        [32m'  | \t\t       ^^^^^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet support this expression.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m' --> test:6:3:\n'[39m +
        [32m'  |\n'[39m +
        [32m'6 | \t\tassert(bytes(type(C).name).length != 0);\n'[39m +
        [32m'  | \t\t^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m' --> test:7:3:\n'[39m +
        [32m'  |\n'[39m +
        [32m'7 | \t\tassert(type(A).creationCode.length != 0);\n'[39m +
        [32m'  | \t\t^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m' --> test:8:3:\n'[39m +
        [32m'  |\n'[39m +
        [32m'8 | \t\tassert(type(A).runtimeCode.length != 0);\n'[39m +
        [32m'  | \t\t^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### Running /home/solc-js/regression/types/type_minmax.sol ...
### ... with solver Eldarica Vanilla
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m' --> test:7:3:\n'[39m +
        [32m'  |\n'[39m +
        [32m'7 | \t\tassert(a <= type(uint32).max);\n'[39m +
        [32m'  | \t\t^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### ... with solver Spacer Quant
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m' --> test:7:3:\n'[39m +
        [32m'  |\n'[39m +
        [32m'7 | \t\tassert(a <= type(uint32).max);\n'[39m +
        [32m'  | \t\t^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### Running /home/solc-js/regression/types/unused_mapping.sol ...
### ... with solver Eldarica Vanilla
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### ... with solver Spacer Quant
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### Running /home/solc-js/regression/types/struct/array_struct_array_struct_memory_safe.sol ...
### ... with solver Eldarica Vanilla
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### ... with solver Spacer Quant
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### Running /home/solc-js/regression/types/struct/array_struct_array_struct_memory_unsafe.sol ...
### ... with solver Eldarica Vanilla
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m'  --> test:20:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'20 | \t\tassert(s1[0].x == s2.x);\n'[39m +
        [32m'   | \t\t^^^^^^^^^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m'  --> test:23:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'23 | \t\tassert(s1[1].t.y == s2.t.y);\n'[39m +
        [32m'   | \t\t^^^^^^^^^^^^^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m'  --> test:27:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'27 | \t\tassert(s1[2].a[2] == s2.a[2]);\n'[39m +
        [32m'   | \t\t^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m'  --> test:31:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'31 | \t\tassert(s1[0].ts[3].y == s2.ts[3].y);\n'[39m +
        [32m'   | \t\t^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### ... with solver Spacer Quant
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m'  --> test:20:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'20 | \t\tassert(s1[0].x == s2.x);\n'[39m +
        [32m'   | \t\t^^^^^^^^^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m'  --> test:23:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'23 | \t\tassert(s1[1].t.y == s2.t.y);\n'[39m +
        [32m'   | \t\t^^^^^^^^^^^^^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m'  --> test:27:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'27 | \t\tassert(s1[2].a[2] == s2.a[2]);\n'[39m +
        [32m'   | \t\t^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m'  --> test:31:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'31 | \t\tassert(s1[0].ts[3].y == s2.ts[3].y);\n'[39m +
        [32m'   | \t\t^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### Running /home/solc-js/regression/types/struct/array_struct_array_struct_storage_safe.sol ...
### ... with solver Eldarica Vanilla
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'5840'[39m,
      formattedMessage: [32m'Warning: CHC: 1 verification condition(s) could not be proved. Enable the model checker option "show unproved" to see all of them. Consider choosing a specific contract to be verified in order to reduce the solving problems. Consider increasing the timeout per query.\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: 1 verification condition(s) could not be proved. Enable the model checker option "show unproved" to see all of them. Consider choosing a specific contract to be verified in order to reduce the solving problems. Consider increasing the timeout per query.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### ... with solver Spacer Quant
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### Running /home/solc-js/regression/types/struct/struct_aliasing_memory.sol ...
### ... with solver Eldarica Vanilla
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m'  --> test:10:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'10 | \t\tassert(s3.x == s1.x);\n'[39m +
        [32m'   | \t\t^^^^^^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m'  --> test:11:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'11 | \t\tassert(s3.x == s2.x);\n'[39m +
        [32m'   | \t\t^^^^^^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m'  --> test:16:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'16 | \t\tassert(s3.x == s1.x || s3.x == s2.x);\n'[39m +
        [32m'   | \t\t^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### ... with solver Spacer Quant
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m'  --> test:10:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'10 | \t\tassert(s3.x == s1.x);\n'[39m +
        [32m'   | \t\t^^^^^^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m'  --> test:11:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'11 | \t\tassert(s3.x == s2.x);\n'[39m +
        [32m'   | \t\t^^^^^^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m'  --> test:16:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'16 | \t\tassert(s3.x == s1.x || s3.x == s2.x);\n'[39m +
        [32m'   | \t\t^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### Running /home/solc-js/regression/types/struct/struct_aliasing_storage.sol ...
### ... with solver Eldarica Vanilla
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m'  --> test:11:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'11 | \t\tassert(s3.x == s1.x);\n'[39m +
        [32m'   | \t\t^^^^^^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m'  --> test:12:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'12 | \t\tassert(s3.x == s2.x);\n'[39m +
        [32m'   | \t\t^^^^^^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m'  --> test:17:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'17 | \t\tassert(s3.x == s1.x || s3.x == s2.x);\n'[39m +
        [32m'   | \t\t^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### ... with solver Spacer Quant
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m'  --> test:11:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'11 | \t\tassert(s3.x == s1.x);\n'[39m +
        [32m'   | \t\t^^^^^^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m'  --> test:12:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'12 | \t\tassert(s3.x == s2.x);\n'[39m +
        [32m'   | \t\t^^^^^^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m'  --> test:17:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'17 | \t\tassert(s3.x == s1.x || s3.x == s2.x);\n'[39m +
        [32m'   | \t\t^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### Running /home/solc-js/regression/types/struct/struct_array_struct_array_memory_safe.sol ...
### ... with solver Eldarica Vanilla
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### ... with solver Spacer Quant
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### Running /home/solc-js/regression/types/struct/struct_array_struct_array_memory_unsafe_1.sol ...
### ... with solver Eldarica Vanilla
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m'  --> test:17:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'17 | \t\tassert(s1.x != 2);\n'[39m +
        [32m'   | \t\t^^^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m'  --> test:19:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'19 | \t\tassert(s1.t.y != 3);\n'[39m +
        [32m'   | \t\t^^^^^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m'  --> test:22:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'22 | \t\tassert(s1.a[2] != 4);\n'[39m +
        [32m'   | \t\t^^^^^^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m'  --> test:25:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'25 | \t\tassert(s1.ts[3].y != 5);\n'[39m +
        [32m'   | \t\t^^^^^^^^^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m'  --> test:28:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'28 | \t\tassert(s1.ts[4].a[5] != 6);\n'[39m +
        [32m'   | \t\t^^^^^^^^^^^^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### ... with solver Spacer Quant
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m'  --> test:17:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'17 | \t\tassert(s1.x != 2);\n'[39m +
        [32m'   | \t\t^^^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m'  --> test:19:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'19 | \t\tassert(s1.t.y != 3);\n'[39m +
        [32m'   | \t\t^^^^^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m'  --> test:22:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'22 | \t\tassert(s1.a[2] != 4);\n'[39m +
        [32m'   | \t\t^^^^^^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m'  --> test:25:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'25 | \t\tassert(s1.ts[3].y != 5);\n'[39m +
        [32m'   | \t\t^^^^^^^^^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m'  --> test:28:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'28 | \t\tassert(s1.ts[4].a[5] != 6);\n'[39m +
        [32m'   | \t\t^^^^^^^^^^^^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### Running /home/solc-js/regression/types/struct/struct_array_struct_array_memory_unsafe_2.sol ...
### ... with solver Eldarica Vanilla
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m'  --> test:18:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'18 | \t\tassert(s1.x == s2.x);\n'[39m +
        [32m'   | \t\t^^^^^^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m'  --> test:21:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'21 | \t\tassert(s1.t.y == s2.t.y);\n'[39m +
        [32m'   | \t\t^^^^^^^^^^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m'  --> test:25:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'25 | \t\tassert(s1.a[2] == s2.a[2]);\n'[39m +
        [32m'   | \t\t^^^^^^^^^^^^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m'  --> test:29:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'29 | \t\tassert(s1.ts[3].y == s2.ts[3].y);\n'[39m +
        [32m'   | \t\t^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m'  --> test:34:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'34 | \t\tassert(s1.ts[4].a[5] == s2.ts[4].a[5]);\n'[39m +
        [32m'   | \t\t^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### ... with solver Spacer Quant
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m'  --> test:18:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'18 | \t\tassert(s1.x == s2.x);\n'[39m +
        [32m'   | \t\t^^^^^^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m'  --> test:21:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'21 | \t\tassert(s1.t.y == s2.t.y);\n'[39m +
        [32m'   | \t\t^^^^^^^^^^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m'  --> test:25:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'25 | \t\tassert(s1.a[2] == s2.a[2]);\n'[39m +
        [32m'   | \t\t^^^^^^^^^^^^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m'  --> test:29:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'29 | \t\tassert(s1.ts[3].y == s2.ts[3].y);\n'[39m +
        [32m'   | \t\t^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m'  --> test:34:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'34 | \t\tassert(s1.ts[4].a[5] == s2.ts[4].a[5]);\n'[39m +
        [32m'   | \t\t^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### Running /home/solc-js/regression/types/struct/struct_array_struct_array_storage_safe.sol ...
### ... with solver Eldarica Vanilla
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### ... with solver Spacer Quant
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### Running /home/solc-js/regression/types/struct/struct_array_struct_array_storage_unsafe_1.sol ...
### ... with solver Eldarica Vanilla
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m'  --> test:15:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'15 | \t\tassert(s1.x != 2);\n'[39m +
        [32m'   | \t\t^^^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m'  --> test:17:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'17 | \t\tassert(s1.t.y != 3);\n'[39m +
        [32m'   | \t\t^^^^^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m'  --> test:22:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'22 | \t\tassert(s1.a[2] != 4);\n'[39m +
        [32m'   | \t\t^^^^^^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m'  --> test:30:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'30 | \t\tassert(s1.ts[3].y != 5);\n'[39m +
        [32m'   | \t\t^^^^^^^^^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m'  --> test:38:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'38 | \t\tassert(s1.ts[4].a[5] != 6);\n'[39m +
        [32m'   | \t\t^^^^^^^^^^^^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### ... with solver Spacer Quant
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m'  --> test:15:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'15 | \t\tassert(s1.x != 2);\n'[39m +
        [32m'   | \t\t^^^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m'  --> test:17:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'17 | \t\tassert(s1.t.y != 3);\n'[39m +
        [32m'   | \t\t^^^^^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m'  --> test:22:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'22 | \t\tassert(s1.a[2] != 4);\n'[39m +
        [32m'   | \t\t^^^^^^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m'  --> test:30:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'30 | \t\tassert(s1.ts[3].y != 5);\n'[39m +
        [32m'   | \t\t^^^^^^^^^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m'  --> test:38:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'38 | \t\tassert(s1.ts[4].a[5] != 6);\n'[39m +
        [32m'   | \t\t^^^^^^^^^^^^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### Running /home/solc-js/regression/types/struct/struct_constructor_fixed_bytes_from_string_1.sol ...
### ... with solver Eldarica Vanilla
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'5523'[39m,
      formattedMessage: [32m'Warning: The SMTChecker pragma has been deprecated and will be removed in the future. Please use the "model checker engine" compiler setting to activate the SMTChecker instead. If the pragma is enabled, all engines will be used.\n'[39m +
        [32m' --> test:1:1:\n'[39m +
        [32m'  |\n'[39m +
        [32m'1 | pragma experimental SMTChecker;\n'[39m +
        [32m'  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'The SMTChecker pragma has been deprecated and will be removed in the future. Please use the "model checker engine" compiler setting to activate the SMTChecker instead. If the pragma is enabled, all engines will be used.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m' --> test:9:5:\n'[39m +
        [32m'  |\n'[39m +
        [32m'9 |     assert(S({a:2, b:""}).a == 0); // should fail\n'[39m +
        [32m'  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### ... with solver Spacer Quant
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'5523'[39m,
      formattedMessage: [32m'Warning: The SMTChecker pragma has been deprecated and will be removed in the future. Please use the "model checker engine" compiler setting to activate the SMTChecker instead. If the pragma is enabled, all engines will be used.\n'[39m +
        [32m' --> test:1:1:\n'[39m +
        [32m'  |\n'[39m +
        [32m'1 | pragma experimental SMTChecker;\n'[39m +
        [32m'  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'The SMTChecker pragma has been deprecated and will be removed in the future. Please use the "model checker engine" compiler setting to activate the SMTChecker instead. If the pragma is enabled, all engines will be used.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m' --> test:9:5:\n'[39m +
        [32m'  |\n'[39m +
        [32m'9 |     assert(S({a:2, b:""}).a == 0); // should fail\n'[39m +
        [32m'  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### Running /home/solc-js/regression/types/struct/struct_constructor_named_args.sol ...
### ... with solver Eldarica Vanilla
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m'  --> test:17:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'17 | \t\tassert(outer.s.x == 42);\n'[39m +
        [32m'   | \t\t^^^^^^^^^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### ... with solver Spacer Quant
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m'  --> test:17:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'17 | \t\tassert(outer.s.x == 42);\n'[39m +
        [32m'   | \t\t^^^^^^^^^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### Running /home/solc-js/regression/types/struct/struct_constructor_named_args_2.sol ...
### ... with solver Eldarica Vanilla
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m'  --> test:14:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'14 | \t\tassert(s.x == 0 || s.y == 0 || s.z == 0); // should fail\n'[39m +
        [32m'   | \t\t^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### ... with solver Spacer Quant
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m'  --> test:14:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'14 | \t\tassert(s.x == 0 || s.y == 0 || s.z == 0); // should fail\n'[39m +
        [32m'   | \t\t^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### Running /home/solc-js/regression/types/struct/struct_constructor_recursive_1.sol ...
### ... with solver Eldarica Vanilla
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'2072'[39m,
      formattedMessage: [32m'Warning: Unused local variable.\n'[39m +
        [32m' --> test:6:3:\n'[39m +
        [32m'  |\n'[39m +
        [32m'6 | \t\tRecursiveStruct[1] memory val = [ RecursiveStruct(new RecursiveStruct[](42)) ];\n'[39m +
        [32m'  | \t\t^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Unused local variable.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'8364'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet implement type struct Test.RecursiveStruct memory\n'[39m +
        [32m' --> test:6:37:\n'[39m +
        [32m'  |\n'[39m +
        [32m'6 | \t\tRecursiveStruct[1] memory val = [ RecursiveStruct(new RecursiveStruct[](42)) ];\n'[39m +
        [32m'  | \t\t                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet implement type struct Test.RecursiveStruct memory'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### ... with solver Spacer Quant
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'2072'[39m,
      formattedMessage: [32m'Warning: Unused local variable.\n'[39m +
        [32m' --> test:6:3:\n'[39m +
        [32m'  |\n'[39m +
        [32m'6 | \t\tRecursiveStruct[1] memory val = [ RecursiveStruct(new RecursiveStruct[](42)) ];\n'[39m +
        [32m'  | \t\t^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Unused local variable.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'8364'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet implement type struct Test.RecursiveStruct memory\n'[39m +
        [32m' --> test:6:37:\n'[39m +
        [32m'  |\n'[39m +
        [32m'6 | \t\tRecursiveStruct[1] memory val = [ RecursiveStruct(new RecursiveStruct[](42)) ];\n'[39m +
        [32m'  | \t\t                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet implement type struct Test.RecursiveStruct memory'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### Running /home/solc-js/regression/types/struct/struct_constructor_recursive_2.sol ...
### ... with solver Eldarica Vanilla
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'8115'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet support the type of this variable.\n'[39m +
        [32m' --> test:7:3:\n'[39m +
        [32m'  |\n'[39m +
        [32m'7 | \t\tRecursiveStruct memory val = RecursiveStruct(1, new RecursiveStruct[](42));\n'[39m +
        [32m'  | \t\t^^^^^^^^^^^^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet support the type of this variable.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'8364'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet implement type struct Test.RecursiveStruct memory\n'[39m +
        [32m' --> test:7:32:\n'[39m +
        [32m'  |\n'[39m +
        [32m'7 | \t\tRecursiveStruct memory val = RecursiveStruct(1, new RecursiveStruct[](42));\n'[39m +
        [32m'  | \t\t                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet implement type struct Test.RecursiveStruct memory'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'7650'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet support this expression.\n'[39m +
        [32m' --> test:8:10:\n'[39m +
        [32m'  |\n'[39m +
        [32m'8 | \t\tassert(val.x == 1);\n'[39m +
        [32m'  | \t\t       ^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet support this expression.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'8364'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet implement type struct Test.RecursiveStruct memory\n'[39m +
        [32m' --> test:8:10:\n'[39m +
        [32m'  |\n'[39m +
        [32m'8 | \t\tassert(val.x == 1);\n'[39m +
        [32m'  | \t\t       ^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet implement type struct Test.RecursiveStruct memory'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m' --> test:8:3:\n'[39m +
        [32m'  |\n'[39m +
        [32m'8 | \t\tassert(val.x == 1);\n'[39m +
        [32m'  | \t\t^^^^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### ... with solver Spacer Quant
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'8115'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet support the type of this variable.\n'[39m +
        [32m' --> test:7:3:\n'[39m +
        [32m'  |\n'[39m +
        [32m'7 | \t\tRecursiveStruct memory val = RecursiveStruct(1, new RecursiveStruct[](42));\n'[39m +
        [32m'  | \t\t^^^^^^^^^^^^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet support the type of this variable.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'8364'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet implement type struct Test.RecursiveStruct memory\n'[39m +
        [32m' --> test:7:32:\n'[39m +
        [32m'  |\n'[39m +
        [32m'7 | \t\tRecursiveStruct memory val = RecursiveStruct(1, new RecursiveStruct[](42));\n'[39m +
        [32m'  | \t\t                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet implement type struct Test.RecursiveStruct memory'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'7650'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet support this expression.\n'[39m +
        [32m' --> test:8:10:\n'[39m +
        [32m'  |\n'[39m +
        [32m'8 | \t\tassert(val.x == 1);\n'[39m +
        [32m'  | \t\t       ^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet support this expression.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'8364'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet implement type struct Test.RecursiveStruct memory\n'[39m +
        [32m' --> test:8:10:\n'[39m +
        [32m'  |\n'[39m +
        [32m'8 | \t\tassert(val.x == 1);\n'[39m +
        [32m'  | \t\t       ^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet implement type struct Test.RecursiveStruct memory'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m' --> test:8:3:\n'[39m +
        [32m'  |\n'[39m +
        [32m'8 | \t\tassert(val.x == 1);\n'[39m +
        [32m'  | \t\t^^^^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### Running /home/solc-js/regression/types/struct/struct_delete_memory.sol ...
### ... with solver Eldarica Vanilla
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m'  --> test:10:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'10 | \t\tassert(s1.x == s2.x);\n'[39m +
        [32m'   | \t\t^^^^^^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m'  --> test:11:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'11 | \t\tassert(s1.a.length == s2.a.length);\n'[39m +
        [32m'   | \t\t^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### ... with solver Spacer Quant
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m'  --> test:10:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'10 | \t\tassert(s1.x == s2.x);\n'[39m +
        [32m'   | \t\t^^^^^^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m'  --> test:11:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'11 | \t\tassert(s1.a.length == s2.a.length);\n'[39m +
        [32m'   | \t\t^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### Running /home/solc-js/regression/types/struct/struct_delete_storage.sol ...
### ... with solver Eldarica Vanilla
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m'  --> test:15:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'15 | \t\tassert(s1.x == s2.x);\n'[39m +
        [32m'   | \t\t^^^^^^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m'  --> test:16:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'16 | \t\tassert(s1.a.length == s2.a.length);\n'[39m +
        [32m'   | \t\t^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### ... with solver Spacer Quant
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m'  --> test:15:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'15 | \t\tassert(s1.x == s2.x);\n'[39m +
        [32m'   | \t\t^^^^^^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m'  --> test:16:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'16 | \t\tassert(s1.a.length == s2.a.length);\n'[39m +
        [32m'   | \t\t^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### Running /home/solc-js/regression/types/struct/struct_mapping.sol ...
### ... with solver Eldarica Vanilla
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m'  --> test:10:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'10 | \t\tassert(s1.m[0] == s2.m[0]);\n'[39m +
        [32m'   | \t\t^^^^^^^^^^^^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### ... with solver Spacer Quant
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m'  --> test:10:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'10 | \t\tassert(s1.m[0] == s2.m[0]);\n'[39m +
        [32m'   | \t\t^^^^^^^^^^^^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### Running /home/solc-js/regression/types/struct/struct_nested_constructor.sol ...
### ... with solver Eldarica Vanilla
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m'  --> test:17:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'17 | \t\tassert(outer.s.x == 42);\n'[39m +
        [32m'   | \t\t^^^^^^^^^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### ... with solver Spacer Quant
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m'  --> test:17:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'17 | \t\tassert(outer.s.x == 42);\n'[39m +
        [32m'   | \t\t^^^^^^^^^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### Running /home/solc-js/regression/types/struct/struct_nested_constructor_named_args.sol ...
### ... with solver Eldarica Vanilla
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### ... with solver Spacer Quant
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### Running /home/solc-js/regression/types/struct/struct_nested_temporary.sol ...
### ... with solver Eldarica Vanilla
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### ... with solver Spacer Quant
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### Running /home/solc-js/regression/types/struct/struct_recursive_1.sol ...
### ... with solver Eldarica Vanilla
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'8115'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet support the type of this variable.\n'[39m +
        [32m' --> test:6:2:\n'[39m +
        [32m'  |\n'[39m +
        [32m'6 | \tS s1;\n'[39m +
        [32m'  | \t^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet support the type of this variable.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'8115'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet support the type of this variable.\n'[39m +
        [32m' --> test:7:2:\n'[39m +
        [32m'  |\n'[39m +
        [32m'7 | \tS s2;\n'[39m +
        [32m'  | \t^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet support the type of this variable.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'7650'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet support this expression.\n'[39m +
        [32m' --> test:9:10:\n'[39m +
        [32m'  |\n'[39m +
        [32m'9 | \t\tassert(s1.x == s2.x);\n'[39m +
        [32m'  | \t\t       ^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet support this expression.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'8364'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet implement type struct C.S storage ref\n'[39m +
        [32m' --> test:9:10:\n'[39m +
        [32m'  |\n'[39m +
        [32m'9 | \t\tassert(s1.x == s2.x);\n'[39m +
        [32m'  | \t\t       ^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet implement type struct C.S storage ref'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'7650'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet support this expression.\n'[39m +
        [32m' --> test:9:18:\n'[39m +
        [32m'  |\n'[39m +
        [32m'9 | \t\tassert(s1.x == s2.x);\n'[39m +
        [32m'  | \t\t               ^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet support this expression.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'8364'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet implement type struct C.S storage ref\n'[39m +
        [32m' --> test:9:18:\n'[39m +
        [32m'  |\n'[39m +
        [32m'9 | \t\tassert(s1.x == s2.x);\n'[39m +
        [32m'  | \t\t               ^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet implement type struct C.S storage ref'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'7650'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet support this expression.\n'[39m +
        [32m'  --> test:10:10:\n'[39m +
        [32m'   |\n'[39m +
        [32m'10 | \t\tassert(s1.a.length == s2.a.length);\n'[39m +
        [32m'   | \t\t       ^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet support this expression.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'8364'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet implement type struct C.S storage ref\n'[39m +
        [32m'  --> test:10:10:\n'[39m +
        [32m'   |\n'[39m +
        [32m'10 | \t\tassert(s1.a.length == s2.a.length);\n'[39m +
        [32m'   | \t\t       ^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet implement type struct C.S storage ref'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'7650'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet support this expression.\n'[39m +
        [32m'  --> test:10:25:\n'[39m +
        [32m'   |\n'[39m +
        [32m'10 | \t\tassert(s1.a.length == s2.a.length);\n'[39m +
        [32m'   | \t\t                      ^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet support this expression.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'8364'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet implement type struct C.S storage ref\n'[39m +
        [32m'  --> test:10:25:\n'[39m +
        [32m'   |\n'[39m +
        [32m'10 | \t\tassert(s1.a.length == s2.a.length);\n'[39m +
        [32m'   | \t\t                      ^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet implement type struct C.S storage ref'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m' --> test:9:3:\n'[39m +
        [32m'  |\n'[39m +
        [32m'9 | \t\tassert(s1.x == s2.x);\n'[39m +
        [32m'  | \t\t^^^^^^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m'  --> test:10:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'10 | \t\tassert(s1.a.length == s2.a.length);\n'[39m +
        [32m'   | \t\t^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### ... with solver Spacer Quant
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'8115'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet support the type of this variable.\n'[39m +
        [32m' --> test:6:2:\n'[39m +
        [32m'  |\n'[39m +
        [32m'6 | \tS s1;\n'[39m +
        [32m'  | \t^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet support the type of this variable.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'8115'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet support the type of this variable.\n'[39m +
        [32m' --> test:7:2:\n'[39m +
        [32m'  |\n'[39m +
        [32m'7 | \tS s2;\n'[39m +
        [32m'  | \t^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet support the type of this variable.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'7650'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet support this expression.\n'[39m +
        [32m' --> test:9:10:\n'[39m +
        [32m'  |\n'[39m +
        [32m'9 | \t\tassert(s1.x == s2.x);\n'[39m +
        [32m'  | \t\t       ^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet support this expression.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'8364'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet implement type struct C.S storage ref\n'[39m +
        [32m' --> test:9:10:\n'[39m +
        [32m'  |\n'[39m +
        [32m'9 | \t\tassert(s1.x == s2.x);\n'[39m +
        [32m'  | \t\t       ^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet implement type struct C.S storage ref'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'7650'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet support this expression.\n'[39m +
        [32m' --> test:9:18:\n'[39m +
        [32m'  |\n'[39m +
        [32m'9 | \t\tassert(s1.x == s2.x);\n'[39m +
        [32m'  | \t\t               ^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet support this expression.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'8364'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet implement type struct C.S storage ref\n'[39m +
        [32m' --> test:9:18:\n'[39m +
        [32m'  |\n'[39m +
        [32m'9 | \t\tassert(s1.x == s2.x);\n'[39m +
        [32m'  | \t\t               ^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet implement type struct C.S storage ref'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'7650'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet support this expression.\n'[39m +
        [32m'  --> test:10:10:\n'[39m +
        [32m'   |\n'[39m +
        [32m'10 | \t\tassert(s1.a.length == s2.a.length);\n'[39m +
        [32m'   | \t\t       ^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet support this expression.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'8364'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet implement type struct C.S storage ref\n'[39m +
        [32m'  --> test:10:10:\n'[39m +
        [32m'   |\n'[39m +
        [32m'10 | \t\tassert(s1.a.length == s2.a.length);\n'[39m +
        [32m'   | \t\t       ^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet implement type struct C.S storage ref'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'7650'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet support this expression.\n'[39m +
        [32m'  --> test:10:25:\n'[39m +
        [32m'   |\n'[39m +
        [32m'10 | \t\tassert(s1.a.length == s2.a.length);\n'[39m +
        [32m'   | \t\t                      ^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet support this expression.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'8364'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet implement type struct C.S storage ref\n'[39m +
        [32m'  --> test:10:25:\n'[39m +
        [32m'   |\n'[39m +
        [32m'10 | \t\tassert(s1.a.length == s2.a.length);\n'[39m +
        [32m'   | \t\t                      ^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet implement type struct C.S storage ref'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m' --> test:9:3:\n'[39m +
        [32m'  |\n'[39m +
        [32m'9 | \t\tassert(s1.x == s2.x);\n'[39m +
        [32m'  | \t\t^^^^^^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m'  --> test:10:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'10 | \t\tassert(s1.a.length == s2.a.length);\n'[39m +
        [32m'   | \t\t^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### Running /home/solc-js/regression/types/struct/struct_recursive_2.sol ...
### ... with solver Eldarica Vanilla
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'8115'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet support the type of this variable.\n'[39m +
        [32m' --> test:6:2:\n'[39m +
        [32m'  |\n'[39m +
        [32m'6 | \tS s1;\n'[39m +
        [32m'  | \t^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet support the type of this variable.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'8115'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet support the type of this variable.\n'[39m +
        [32m' --> test:7:2:\n'[39m +
        [32m'  |\n'[39m +
        [32m'7 | \tS s2;\n'[39m +
        [32m'  | \t^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet support the type of this variable.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'7650'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet support this expression.\n'[39m +
        [32m' --> test:9:10:\n'[39m +
        [32m'  |\n'[39m +
        [32m'9 | \t\tassert(s1.x == s2.x);\n'[39m +
        [32m'  | \t\t       ^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet support this expression.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'8364'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet implement type struct C.S storage ref\n'[39m +
        [32m' --> test:9:10:\n'[39m +
        [32m'  |\n'[39m +
        [32m'9 | \t\tassert(s1.x == s2.x);\n'[39m +
        [32m'  | \t\t       ^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet implement type struct C.S storage ref'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'7650'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet support this expression.\n'[39m +
        [32m' --> test:9:18:\n'[39m +
        [32m'  |\n'[39m +
        [32m'9 | \t\tassert(s1.x == s2.x);\n'[39m +
        [32m'  | \t\t               ^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet support this expression.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'8364'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet implement type struct C.S storage ref\n'[39m +
        [32m' --> test:9:18:\n'[39m +
        [32m'  |\n'[39m +
        [32m'9 | \t\tassert(s1.x == s2.x);\n'[39m +
        [32m'  | \t\t               ^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet implement type struct C.S storage ref'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'7650'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet support this expression.\n'[39m +
        [32m'  --> test:10:10:\n'[39m +
        [32m'   |\n'[39m +
        [32m'10 | \t\tassert(s1.a.length == s2.a.length);\n'[39m +
        [32m'   | \t\t       ^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet support this expression.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'8364'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet implement type struct C.S storage ref\n'[39m +
        [32m'  --> test:10:10:\n'[39m +
        [32m'   |\n'[39m +
        [32m'10 | \t\tassert(s1.a.length == s2.a.length);\n'[39m +
        [32m'   | \t\t       ^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet implement type struct C.S storage ref'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'7650'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet support this expression.\n'[39m +
        [32m'  --> test:10:25:\n'[39m +
        [32m'   |\n'[39m +
        [32m'10 | \t\tassert(s1.a.length == s2.a.length);\n'[39m +
        [32m'   | \t\t                      ^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet support this expression.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'8364'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet implement type struct C.S storage ref\n'[39m +
        [32m'  --> test:10:25:\n'[39m +
        [32m'   |\n'[39m +
        [32m'10 | \t\tassert(s1.a.length == s2.a.length);\n'[39m +
        [32m'   | \t\t                      ^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet implement type struct C.S storage ref'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'7650'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet support this expression.\n'[39m +
        [32m'  --> test:11:10:\n'[39m +
        [32m'   |\n'[39m +
        [32m'11 | \t\tassert(s1.a[0].x == s2.a[0].x);\n'[39m +
        [32m'   | \t\t       ^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet support this expression.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'7650'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet support this expression.\n'[39m +
        [32m'  --> test:11:10:\n'[39m +
        [32m'   |\n'[39m +
        [32m'11 | \t\tassert(s1.a[0].x == s2.a[0].x);\n'[39m +
        [32m'   | \t\t       ^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet support this expression.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'8364'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet implement type struct C.S storage ref\n'[39m +
        [32m'  --> test:11:10:\n'[39m +
        [32m'   |\n'[39m +
        [32m'11 | \t\tassert(s1.a[0].x == s2.a[0].x);\n'[39m +
        [32m'   | \t\t       ^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet implement type struct C.S storage ref'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'8364'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet implement type struct C.S storage ref\n'[39m +
        [32m'  --> test:11:10:\n'[39m +
        [32m'   |\n'[39m +
        [32m'11 | \t\tassert(s1.a[0].x == s2.a[0].x);\n'[39m +
        [32m'   | \t\t       ^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet implement type struct C.S storage ref'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'7650'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet support this expression.\n'[39m +
        [32m'  --> test:11:23:\n'[39m +
        [32m'   |\n'[39m +
        [32m'11 | \t\tassert(s1.a[0].x == s2.a[0].x);\n'[39m +
        [32m'   | \t\t                    ^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet support this expression.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'7650'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet support this expression.\n'[39m +
        [32m'  --> test:11:23:\n'[39m +
        [32m'   |\n'[39m +
        [32m'11 | \t\tassert(s1.a[0].x == s2.a[0].x);\n'[39m +
        [32m'   | \t\t                    ^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet support this expression.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'8364'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet implement type struct C.S storage ref\n'[39m +
        [32m'  --> test:11:23:\n'[39m +
        [32m'   |\n'[39m +
        [32m'11 | \t\tassert(s1.a[0].x == s2.a[0].x);\n'[39m +
        [32m'   | \t\t                    ^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet implement type struct C.S storage ref'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'8364'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet implement type struct C.S storage ref\n'[39m +
        [32m'  --> test:11:23:\n'[39m +
        [32m'   |\n'[39m +
        [32m'11 | \t\tassert(s1.a[0].x == s2.a[0].x);\n'[39m +
        [32m'   | \t\t                    ^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet implement type struct C.S storage ref'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'7650'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet support this expression.\n'[39m +
        [32m'  --> test:14:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'14 | \t\ts1.x = 42;\n'[39m +
        [32m'   | \t\t^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet support this expression.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'8364'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet implement type struct C.S storage ref\n'[39m +
        [32m'  --> test:14:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'14 | \t\ts1.x = 42;\n'[39m +
        [32m'   | \t\t^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet implement type struct C.S storage ref'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'4375'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not support recursive structs.\n'[39m +
        [32m'  --> test:14:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'14 | \t\ts1.x = 42;\n'[39m +
        [32m'   | \t\t^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not support recursive structs.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'7650'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet support this expression.\n'[39m +
        [32m'  --> test:15:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'15 | \t\ts2.x = 42;\n'[39m +
        [32m'   | \t\t^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet support this expression.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'8364'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet implement type struct C.S storage ref\n'[39m +
        [32m'  --> test:15:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'15 | \t\ts2.x = 42;\n'[39m +
        [32m'   | \t\t^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet implement type struct C.S storage ref'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'4375'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not support recursive structs.\n'[39m +
        [32m'  --> test:15:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'15 | \t\ts2.x = 42;\n'[39m +
        [32m'   | \t\t^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not support recursive structs.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'7650'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet support this expression.\n'[39m +
        [32m'  --> test:16:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'16 | \t\ts1.a.push();\n'[39m +
        [32m'   | \t\t^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet support this expression.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'8364'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet implement type struct C.S storage ref\n'[39m +
        [32m'  --> test:16:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'16 | \t\ts1.a.push();\n'[39m +
        [32m'   | \t\t^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet implement type struct C.S storage ref'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'8364'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet implement type struct C.S storage ref\n'[39m +
        [32m'  --> test:16:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'16 | \t\ts1.a.push();\n'[39m +
        [32m'   | \t\t^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet implement type struct C.S storage ref'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'4375'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not support recursive structs.\n'[39m +
        [32m'  --> test:16:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'16 | \t\ts1.a.push();\n'[39m +
        [32m'   | \t\t^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not support recursive structs.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'7650'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet support this expression.\n'[39m +
        [32m'  --> test:17:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'17 | \t\ts2.a.push();\n'[39m +
        [32m'   | \t\t^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet support this expression.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'8364'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet implement type struct C.S storage ref\n'[39m +
        [32m'  --> test:17:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'17 | \t\ts2.a.push();\n'[39m +
        [32m'   | \t\t^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet implement type struct C.S storage ref'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'8364'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet implement type struct C.S storage ref\n'[39m +
        [32m'  --> test:17:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'17 | \t\ts2.a.push();\n'[39m +
        [32m'   | \t\t^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet implement type struct C.S storage ref'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'4375'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not support recursive structs.\n'[39m +
        [32m'  --> test:17:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'17 | \t\ts2.a.push();\n'[39m +
        [32m'   | \t\t^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not support recursive structs.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'7650'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet support this expression.\n'[39m +
        [32m'  --> test:18:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'18 | \t\ts1.a[0].x = 43;\n'[39m +
        [32m'   | \t\t^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet support this expression.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'7650'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet support this expression.\n'[39m +
        [32m'  --> test:18:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'18 | \t\ts1.a[0].x = 43;\n'[39m +
        [32m'   | \t\t^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet support this expression.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'8364'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet implement type struct C.S storage ref\n'[39m +
        [32m'  --> test:18:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'18 | \t\ts1.a[0].x = 43;\n'[39m +
        [32m'   | \t\t^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet implement type struct C.S storage ref'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'8364'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet implement type struct C.S storage ref\n'[39m +
        [32m'  --> test:18:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'18 | \t\ts1.a[0].x = 43;\n'[39m +
        [32m'   | \t\t^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet implement type struct C.S storage ref'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'4375'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not support recursive structs.\n'[39m +
        [32m'  --> test:18:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'18 | \t\ts1.a[0].x = 43;\n'[39m +
        [32m'   | \t\t^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not support recursive structs.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'7650'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet support this expression.\n'[39m +
        [32m'  --> test:19:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'19 | \t\ts2.a[0].x = 43;\n'[39m +
        [32m'   | \t\t^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet support this expression.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'7650'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet support this expression.\n'[39m +
        [32m'  --> test:19:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'19 | \t\ts2.a[0].x = 43;\n'[39m +
        [32m'   | \t\t^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet support this expression.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'8364'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet implement type struct C.S storage ref\n'[39m +
        [32m'  --> test:19:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'19 | \t\ts2.a[0].x = 43;\n'[39m +
        [32m'   | \t\t^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet implement type struct C.S storage ref'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'8364'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet implement type struct C.S storage ref\n'[39m +
        [32m'  --> test:19:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'19 | \t\ts2.a[0].x = 43;\n'[39m +
        [32m'   | \t\t^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet implement type struct C.S storage ref'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'4375'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not support recursive structs.\n'[39m +
        [32m'  --> test:19:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'19 | \t\ts2.a[0].x = 43;\n'[39m +
        [32m'   | \t\t^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not support recursive structs.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m' --> test:9:3:\n'[39m +
        [32m'  |\n'[39m +
        [32m'9 | \t\tassert(s1.x == s2.x);\n'[39m +
        [32m'  | \t\t^^^^^^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m'  --> test:10:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'10 | \t\tassert(s1.a.length == s2.a.length);\n'[39m +
        [32m'   | \t\t^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m'  --> test:11:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'11 | \t\tassert(s1.a[0].x == s2.a[0].x);\n'[39m +
        [32m'   | \t\t^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### ... with solver Spacer Quant
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'8115'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet support the type of this variable.\n'[39m +
        [32m' --> test:6:2:\n'[39m +
        [32m'  |\n'[39m +
        [32m'6 | \tS s1;\n'[39m +
        [32m'  | \t^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet support the type of this variable.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'8115'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet support the type of this variable.\n'[39m +
        [32m' --> test:7:2:\n'[39m +
        [32m'  |\n'[39m +
        [32m'7 | \tS s2;\n'[39m +
        [32m'  | \t^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet support the type of this variable.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'7650'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet support this expression.\n'[39m +
        [32m' --> test:9:10:\n'[39m +
        [32m'  |\n'[39m +
        [32m'9 | \t\tassert(s1.x == s2.x);\n'[39m +
        [32m'  | \t\t       ^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet support this expression.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'8364'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet implement type struct C.S storage ref\n'[39m +
        [32m' --> test:9:10:\n'[39m +
        [32m'  |\n'[39m +
        [32m'9 | \t\tassert(s1.x == s2.x);\n'[39m +
        [32m'  | \t\t       ^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet implement type struct C.S storage ref'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'7650'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet support this expression.\n'[39m +
        [32m' --> test:9:18:\n'[39m +
        [32m'  |\n'[39m +
        [32m'9 | \t\tassert(s1.x == s2.x);\n'[39m +
        [32m'  | \t\t               ^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet support this expression.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'8364'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet implement type struct C.S storage ref\n'[39m +
        [32m' --> test:9:18:\n'[39m +
        [32m'  |\n'[39m +
        [32m'9 | \t\tassert(s1.x == s2.x);\n'[39m +
        [32m'  | \t\t               ^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet implement type struct C.S storage ref'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'7650'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet support this expression.\n'[39m +
        [32m'  --> test:10:10:\n'[39m +
        [32m'   |\n'[39m +
        [32m'10 | \t\tassert(s1.a.length == s2.a.length);\n'[39m +
        [32m'   | \t\t       ^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet support this expression.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'8364'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet implement type struct C.S storage ref\n'[39m +
        [32m'  --> test:10:10:\n'[39m +
        [32m'   |\n'[39m +
        [32m'10 | \t\tassert(s1.a.length == s2.a.length);\n'[39m +
        [32m'   | \t\t       ^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet implement type struct C.S storage ref'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'7650'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet support this expression.\n'[39m +
        [32m'  --> test:10:25:\n'[39m +
        [32m'   |\n'[39m +
        [32m'10 | \t\tassert(s1.a.length == s2.a.length);\n'[39m +
        [32m'   | \t\t                      ^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet support this expression.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'8364'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet implement type struct C.S storage ref\n'[39m +
        [32m'  --> test:10:25:\n'[39m +
        [32m'   |\n'[39m +
        [32m'10 | \t\tassert(s1.a.length == s2.a.length);\n'[39m +
        [32m'   | \t\t                      ^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet implement type struct C.S storage ref'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'7650'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet support this expression.\n'[39m +
        [32m'  --> test:11:10:\n'[39m +
        [32m'   |\n'[39m +
        [32m'11 | \t\tassert(s1.a[0].x == s2.a[0].x);\n'[39m +
        [32m'   | \t\t       ^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet support this expression.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'7650'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet support this expression.\n'[39m +
        [32m'  --> test:11:10:\n'[39m +
        [32m'   |\n'[39m +
        [32m'11 | \t\tassert(s1.a[0].x == s2.a[0].x);\n'[39m +
        [32m'   | \t\t       ^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet support this expression.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'8364'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet implement type struct C.S storage ref\n'[39m +
        [32m'  --> test:11:10:\n'[39m +
        [32m'   |\n'[39m +
        [32m'11 | \t\tassert(s1.a[0].x == s2.a[0].x);\n'[39m +
        [32m'   | \t\t       ^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet implement type struct C.S storage ref'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'8364'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet implement type struct C.S storage ref\n'[39m +
        [32m'  --> test:11:10:\n'[39m +
        [32m'   |\n'[39m +
        [32m'11 | \t\tassert(s1.a[0].x == s2.a[0].x);\n'[39m +
        [32m'   | \t\t       ^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet implement type struct C.S storage ref'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'7650'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet support this expression.\n'[39m +
        [32m'  --> test:11:23:\n'[39m +
        [32m'   |\n'[39m +
        [32m'11 | \t\tassert(s1.a[0].x == s2.a[0].x);\n'[39m +
        [32m'   | \t\t                    ^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet support this expression.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'7650'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet support this expression.\n'[39m +
        [32m'  --> test:11:23:\n'[39m +
        [32m'   |\n'[39m +
        [32m'11 | \t\tassert(s1.a[0].x == s2.a[0].x);\n'[39m +
        [32m'   | \t\t                    ^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet support this expression.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'8364'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet implement type struct C.S storage ref\n'[39m +
        [32m'  --> test:11:23:\n'[39m +
        [32m'   |\n'[39m +
        [32m'11 | \t\tassert(s1.a[0].x == s2.a[0].x);\n'[39m +
        [32m'   | \t\t                    ^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet implement type struct C.S storage ref'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'8364'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet implement type struct C.S storage ref\n'[39m +
        [32m'  --> test:11:23:\n'[39m +
        [32m'   |\n'[39m +
        [32m'11 | \t\tassert(s1.a[0].x == s2.a[0].x);\n'[39m +
        [32m'   | \t\t                    ^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet implement type struct C.S storage ref'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'7650'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet support this expression.\n'[39m +
        [32m'  --> test:14:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'14 | \t\ts1.x = 42;\n'[39m +
        [32m'   | \t\t^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet support this expression.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'8364'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet implement type struct C.S storage ref\n'[39m +
        [32m'  --> test:14:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'14 | \t\ts1.x = 42;\n'[39m +
        [32m'   | \t\t^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet implement type struct C.S storage ref'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'4375'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not support recursive structs.\n'[39m +
        [32m'  --> test:14:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'14 | \t\ts1.x = 42;\n'[39m +
        [32m'   | \t\t^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not support recursive structs.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'7650'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet support this expression.\n'[39m +
        [32m'  --> test:15:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'15 | \t\ts2.x = 42;\n'[39m +
        [32m'   | \t\t^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet support this expression.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'8364'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet implement type struct C.S storage ref\n'[39m +
        [32m'  --> test:15:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'15 | \t\ts2.x = 42;\n'[39m +
        [32m'   | \t\t^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet implement type struct C.S storage ref'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'4375'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not support recursive structs.\n'[39m +
        [32m'  --> test:15:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'15 | \t\ts2.x = 42;\n'[39m +
        [32m'   | \t\t^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not support recursive structs.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'7650'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet support this expression.\n'[39m +
        [32m'  --> test:16:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'16 | \t\ts1.a.push();\n'[39m +
        [32m'   | \t\t^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet support this expression.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'8364'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet implement type struct C.S storage ref\n'[39m +
        [32m'  --> test:16:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'16 | \t\ts1.a.push();\n'[39m +
        [32m'   | \t\t^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet implement type struct C.S storage ref'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'8364'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet implement type struct C.S storage ref\n'[39m +
        [32m'  --> test:16:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'16 | \t\ts1.a.push();\n'[39m +
        [32m'   | \t\t^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet implement type struct C.S storage ref'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'4375'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not support recursive structs.\n'[39m +
        [32m'  --> test:16:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'16 | \t\ts1.a.push();\n'[39m +
        [32m'   | \t\t^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not support recursive structs.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'7650'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet support this expression.\n'[39m +
        [32m'  --> test:17:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'17 | \t\ts2.a.push();\n'[39m +
        [32m'   | \t\t^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet support this expression.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'8364'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet implement type struct C.S storage ref\n'[39m +
        [32m'  --> test:17:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'17 | \t\ts2.a.push();\n'[39m +
        [32m'   | \t\t^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet implement type struct C.S storage ref'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'8364'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet implement type struct C.S storage ref\n'[39m +
        [32m'  --> test:17:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'17 | \t\ts2.a.push();\n'[39m +
        [32m'   | \t\t^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet implement type struct C.S storage ref'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'4375'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not support recursive structs.\n'[39m +
        [32m'  --> test:17:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'17 | \t\ts2.a.push();\n'[39m +
        [32m'   | \t\t^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not support recursive structs.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'7650'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet support this expression.\n'[39m +
        [32m'  --> test:18:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'18 | \t\ts1.a[0].x = 43;\n'[39m +
        [32m'   | \t\t^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet support this expression.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'7650'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet support this expression.\n'[39m +
        [32m'  --> test:18:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'18 | \t\ts1.a[0].x = 43;\n'[39m +
        [32m'   | \t\t^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet support this expression.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'8364'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet implement type struct C.S storage ref\n'[39m +
        [32m'  --> test:18:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'18 | \t\ts1.a[0].x = 43;\n'[39m +
        [32m'   | \t\t^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet implement type struct C.S storage ref'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'8364'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet implement type struct C.S storage ref\n'[39m +
        [32m'  --> test:18:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'18 | \t\ts1.a[0].x = 43;\n'[39m +
        [32m'   | \t\t^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet implement type struct C.S storage ref'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'4375'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not support recursive structs.\n'[39m +
        [32m'  --> test:18:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'18 | \t\ts1.a[0].x = 43;\n'[39m +
        [32m'   | \t\t^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not support recursive structs.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'7650'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet support this expression.\n'[39m +
        [32m'  --> test:19:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'19 | \t\ts2.a[0].x = 43;\n'[39m +
        [32m'   | \t\t^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet support this expression.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'7650'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet support this expression.\n'[39m +
        [32m'  --> test:19:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'19 | \t\ts2.a[0].x = 43;\n'[39m +
        [32m'   | \t\t^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet support this expression.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'8364'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet implement type struct C.S storage ref\n'[39m +
        [32m'  --> test:19:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'19 | \t\ts2.a[0].x = 43;\n'[39m +
        [32m'   | \t\t^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet implement type struct C.S storage ref'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'8364'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet implement type struct C.S storage ref\n'[39m +
        [32m'  --> test:19:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'19 | \t\ts2.a[0].x = 43;\n'[39m +
        [32m'   | \t\t^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet implement type struct C.S storage ref'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'4375'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not support recursive structs.\n'[39m +
        [32m'  --> test:19:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'19 | \t\ts2.a[0].x = 43;\n'[39m +
        [32m'   | \t\t^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not support recursive structs.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m' --> test:9:3:\n'[39m +
        [32m'  |\n'[39m +
        [32m'9 | \t\tassert(s1.x == s2.x);\n'[39m +
        [32m'  | \t\t^^^^^^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m'  --> test:10:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'10 | \t\tassert(s1.a.length == s2.a.length);\n'[39m +
        [32m'   | \t\t^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m'  --> test:11:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'11 | \t\tassert(s1.a[0].x == s2.a[0].x);\n'[39m +
        [32m'   | \t\t^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### Running /home/solc-js/regression/types/struct/struct_recursive_3.sol ...
### ... with solver Eldarica Vanilla
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'8115'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet support the type of this variable.\n'[39m +
        [32m' --> test:6:2:\n'[39m +
        [32m'  |\n'[39m +
        [32m'6 | \tS s1;\n'[39m +
        [32m'  | \t^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet support the type of this variable.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'8115'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet support the type of this variable.\n'[39m +
        [32m' --> test:7:2:\n'[39m +
        [32m'  |\n'[39m +
        [32m'7 | \tS s2;\n'[39m +
        [32m'  | \t^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet support the type of this variable.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'7650'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet support this expression.\n'[39m +
        [32m' --> test:9:10:\n'[39m +
        [32m'  |\n'[39m +
        [32m'9 | \t\tassert(s1.x == s2.x);\n'[39m +
        [32m'  | \t\t       ^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet support this expression.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'8364'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet implement type struct C.S storage ref\n'[39m +
        [32m' --> test:9:10:\n'[39m +
        [32m'  |\n'[39m +
        [32m'9 | \t\tassert(s1.x == s2.x);\n'[39m +
        [32m'  | \t\t       ^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet implement type struct C.S storage ref'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'7650'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet support this expression.\n'[39m +
        [32m' --> test:9:18:\n'[39m +
        [32m'  |\n'[39m +
        [32m'9 | \t\tassert(s1.x == s2.x);\n'[39m +
        [32m'  | \t\t               ^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet support this expression.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'8364'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet implement type struct C.S storage ref\n'[39m +
        [32m' --> test:9:18:\n'[39m +
        [32m'  |\n'[39m +
        [32m'9 | \t\tassert(s1.x == s2.x);\n'[39m +
        [32m'  | \t\t               ^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet implement type struct C.S storage ref'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'7650'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet support this expression.\n'[39m +
        [32m'  --> test:10:10:\n'[39m +
        [32m'   |\n'[39m +
        [32m'10 | \t\tassert(s1.a.length == s2.a.length);\n'[39m +
        [32m'   | \t\t       ^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet support this expression.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'8364'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet implement type struct C.S storage ref\n'[39m +
        [32m'  --> test:10:10:\n'[39m +
        [32m'   |\n'[39m +
        [32m'10 | \t\tassert(s1.a.length == s2.a.length);\n'[39m +
        [32m'   | \t\t       ^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet implement type struct C.S storage ref'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'7650'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet support this expression.\n'[39m +
        [32m'  --> test:10:25:\n'[39m +
        [32m'   |\n'[39m +
        [32m'10 | \t\tassert(s1.a.length == s2.a.length);\n'[39m +
        [32m'   | \t\t                      ^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet support this expression.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'8364'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet implement type struct C.S storage ref\n'[39m +
        [32m'  --> test:10:25:\n'[39m +
        [32m'   |\n'[39m +
        [32m'10 | \t\tassert(s1.a.length == s2.a.length);\n'[39m +
        [32m'   | \t\t                      ^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet implement type struct C.S storage ref'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'7650'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet support this expression.\n'[39m +
        [32m'  --> test:11:11:\n'[39m +
        [32m'   |\n'[39m +
        [32m'11 | \t\trequire(s1.a.length > 0);\n'[39m +
        [32m'   | \t\t        ^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet support this expression.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'8364'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet implement type struct C.S storage ref\n'[39m +
        [32m'  --> test:11:11:\n'[39m +
        [32m'   |\n'[39m +
        [32m'11 | \t\trequire(s1.a.length > 0);\n'[39m +
        [32m'   | \t\t        ^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet implement type struct C.S storage ref'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'7650'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet support this expression.\n'[39m +
        [32m'  --> test:12:11:\n'[39m +
        [32m'   |\n'[39m +
        [32m'12 | \t\trequire(s2.a.length > 0);\n'[39m +
        [32m'   | \t\t        ^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet support this expression.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'8364'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet implement type struct C.S storage ref\n'[39m +
        [32m'  --> test:12:11:\n'[39m +
        [32m'   |\n'[39m +
        [32m'12 | \t\trequire(s2.a.length > 0);\n'[39m +
        [32m'   | \t\t        ^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet implement type struct C.S storage ref'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'7650'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet support this expression.\n'[39m +
        [32m'  --> test:13:10:\n'[39m +
        [32m'   |\n'[39m +
        [32m'13 | \t\tassert(s1.a[0].x == s2.a[0].x);\n'[39m +
        [32m'   | \t\t       ^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet support this expression.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'7650'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet support this expression.\n'[39m +
        [32m'  --> test:13:10:\n'[39m +
        [32m'   |\n'[39m +
        [32m'13 | \t\tassert(s1.a[0].x == s2.a[0].x);\n'[39m +
        [32m'   | \t\t       ^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet support this expression.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'8364'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet implement type struct C.S storage ref\n'[39m +
        [32m'  --> test:13:10:\n'[39m +
        [32m'   |\n'[39m +
        [32m'13 | \t\tassert(s1.a[0].x == s2.a[0].x);\n'[39m +
        [32m'   | \t\t       ^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet implement type struct C.S storage ref'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'8364'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet implement type struct C.S storage ref\n'[39m +
        [32m'  --> test:13:10:\n'[39m +
        [32m'   |\n'[39m +
        [32m'13 | \t\tassert(s1.a[0].x == s2.a[0].x);\n'[39m +
        [32m'   | \t\t       ^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet implement type struct C.S storage ref'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'7650'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet support this expression.\n'[39m +
        [32m'  --> test:13:23:\n'[39m +
        [32m'   |\n'[39m +
        [32m'13 | \t\tassert(s1.a[0].x == s2.a[0].x);\n'[39m +
        [32m'   | \t\t                    ^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet support this expression.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'7650'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet support this expression.\n'[39m +
        [32m'  --> test:13:23:\n'[39m +
        [32m'   |\n'[39m +
        [32m'13 | \t\tassert(s1.a[0].x == s2.a[0].x);\n'[39m +
        [32m'   | \t\t                    ^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet support this expression.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'8364'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet implement type struct C.S storage ref\n'[39m +
        [32m'  --> test:13:23:\n'[39m +
        [32m'   |\n'[39m +
        [32m'13 | \t\tassert(s1.a[0].x == s2.a[0].x);\n'[39m +
        [32m'   | \t\t                    ^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet implement type struct C.S storage ref'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'8364'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet implement type struct C.S storage ref\n'[39m +
        [32m'  --> test:13:23:\n'[39m +
        [32m'   |\n'[39m +
        [32m'13 | \t\tassert(s1.a[0].x == s2.a[0].x);\n'[39m +
        [32m'   | \t\t                    ^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet implement type struct C.S storage ref'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'7650'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet support this expression.\n'[39m +
        [32m'  --> test:14:11:\n'[39m +
        [32m'   |\n'[39m +
        [32m'14 | \t\trequire(s1.a[0].a.length > 0);\n'[39m +
        [32m'   | \t\t        ^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet support this expression.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'7650'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet support this expression.\n'[39m +
        [32m'  --> test:14:11:\n'[39m +
        [32m'   |\n'[39m +
        [32m'14 | \t\trequire(s1.a[0].a.length > 0);\n'[39m +
        [32m'   | \t\t        ^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet support this expression.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'8364'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet implement type struct C.S storage ref\n'[39m +
        [32m'  --> test:14:11:\n'[39m +
        [32m'   |\n'[39m +
        [32m'14 | \t\trequire(s1.a[0].a.length > 0);\n'[39m +
        [32m'   | \t\t        ^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet implement type struct C.S storage ref'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'8364'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet implement type struct C.S storage ref\n'[39m +
        [32m'  --> test:14:11:\n'[39m +
        [32m'   |\n'[39m +
        [32m'14 | \t\trequire(s1.a[0].a.length > 0);\n'[39m +
        [32m'   | \t\t        ^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet implement type struct C.S storage ref'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'7650'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet support this expression.\n'[39m +
        [32m'  --> test:15:11:\n'[39m +
        [32m'   |\n'[39m +
        [32m'15 | \t\trequire(s2.a[0].a.length > 0);\n'[39m +
        [32m'   | \t\t        ^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet support this expression.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'7650'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet support this expression.\n'[39m +
        [32m'  --> test:15:11:\n'[39m +
        [32m'   |\n'[39m +
        [32m'15 | \t\trequire(s2.a[0].a.length > 0);\n'[39m +
        [32m'   | \t\t        ^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet support this expression.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'8364'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet implement type struct C.S storage ref\n'[39m +
        [32m'  --> test:15:11:\n'[39m +
        [32m'   |\n'[39m +
        [32m'15 | \t\trequire(s2.a[0].a.length > 0);\n'[39m +
        [32m'   | \t\t        ^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet implement type struct C.S storage ref'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'8364'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet implement type struct C.S storage ref\n'[39m +
        [32m'  --> test:15:11:\n'[39m +
        [32m'   |\n'[39m +
        [32m'15 | \t\trequire(s2.a[0].a.length > 0);\n'[39m +
        [32m'   | \t\t        ^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet implement type struct C.S storage ref'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'7650'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet support this expression.\n'[39m +
        [32m'  --> test:16:10:\n'[39m +
        [32m'   |\n'[39m +
        [32m'16 | \t\tassert(s1.a[0].a.length == s2.a[0].a.length);\n'[39m +
        [32m'   | \t\t       ^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet support this expression.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'7650'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet support this expression.\n'[39m +
        [32m'  --> test:16:10:\n'[39m +
        [32m'   |\n'[39m +
        [32m'16 | \t\tassert(s1.a[0].a.length == s2.a[0].a.length);\n'[39m +
        [32m'   | \t\t       ^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet support this expression.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'8364'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet implement type struct C.S storage ref\n'[39m +
        [32m'  --> test:16:10:\n'[39m +
        [32m'   |\n'[39m +
        [32m'16 | \t\tassert(s1.a[0].a.length == s2.a[0].a.length);\n'[39m +
        [32m'   | \t\t       ^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet implement type struct C.S storage ref'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'8364'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet implement type struct C.S storage ref\n'[39m +
        [32m'  --> test:16:10:\n'[39m +
        [32m'   |\n'[39m +
        [32m'16 | \t\tassert(s1.a[0].a.length == s2.a[0].a.length);\n'[39m +
        [32m'   | \t\t       ^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet implement type struct C.S storage ref'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'7650'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet support this expression.\n'[39m +
        [32m'  --> test:16:30:\n'[39m +
        [32m'   |\n'[39m +
        [32m'16 | \t\tassert(s1.a[0].a.length == s2.a[0].a.length);\n'[39m +
        [32m'   | \t\t                           ^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet support this expression.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'7650'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet support this expression.\n'[39m +
        [32m'  --> test:16:30:\n'[39m +
        [32m'   |\n'[39m +
        [32m'16 | \t\tassert(s1.a[0].a.length == s2.a[0].a.length);\n'[39m +
        [32m'   | \t\t                           ^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet support this expression.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'8364'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet implement type struct C.S storage ref\n'[39m +
        [32m'  --> test:16:30:\n'[39m +
        [32m'   |\n'[39m +
        [32m'16 | \t\tassert(s1.a[0].a.length == s2.a[0].a.length);\n'[39m +
        [32m'   | \t\t                           ^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet implement type struct C.S storage ref'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'8364'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet implement type struct C.S storage ref\n'[39m +
        [32m'  --> test:16:30:\n'[39m +
        [32m'   |\n'[39m +
        [32m'16 | \t\tassert(s1.a[0].a.length == s2.a[0].a.length);\n'[39m +
        [32m'   | \t\t                           ^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet implement type struct C.S storage ref'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'7650'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet support this expression.\n'[39m +
        [32m'  --> test:20:10:\n'[39m +
        [32m'   |\n'[39m +
        [32m'20 | \t\tassert(s1.a[0].a[0].x == s2.a[0].a[0].x);\n'[39m +
        [32m'   | \t\t       ^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet support this expression.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'7650'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet support this expression.\n'[39m +
        [32m'  --> test:20:10:\n'[39m +
        [32m'   |\n'[39m +
        [32m'20 | \t\tassert(s1.a[0].a[0].x == s2.a[0].a[0].x);\n'[39m +
        [32m'   | \t\t       ^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet support this expression.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'7650'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet support this expression.\n'[39m +
        [32m'  --> test:20:10:\n'[39m +
        [32m'   |\n'[39m +
        [32m'20 | \t\tassert(s1.a[0].a[0].x == s2.a[0].a[0].x);\n'[39m +
        [32m'   | \t\t       ^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet support this expression.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'8364'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet implement type struct C.S storage ref\n'[39m +
        [32m'  --> test:20:10:\n'[39m +
        [32m'   |\n'[39m +
        [32m'20 | \t\tassert(s1.a[0].a[0].x == s2.a[0].a[0].x);\n'[39m +
        [32m'   | \t\t       ^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet implement type struct C.S storage ref'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'8364'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet implement type struct C.S storage ref\n'[39m +
        [32m'  --> test:20:10:\n'[39m +
        [32m'   |\n'[39m +
        [32m'20 | \t\tassert(s1.a[0].a[0].x == s2.a[0].a[0].x);\n'[39m +
        [32m'   | \t\t       ^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet implement type struct C.S storage ref'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'8364'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet implement type struct C.S storage ref\n'[39m +
        [32m'  --> test:20:10:\n'[39m +
        [32m'   |\n'[39m +
        [32m'20 | \t\tassert(s1.a[0].a[0].x == s2.a[0].a[0].x);\n'[39m +
        [32m'   | \t\t       ^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet implement type struct C.S storage ref'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'7650'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet support this expression.\n'[39m +
        [32m'  --> test:20:28:\n'[39m +
        [32m'   |\n'[39m +
        [32m'20 | \t\tassert(s1.a[0].a[0].x == s2.a[0].a[0].x);\n'[39m +
        [32m'   | \t\t                         ^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet support this expression.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'7650'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet support this expression.\n'[39m +
        [32m'  --> test:20:28:\n'[39m +
        [32m'   |\n'[39m +
        [32m'20 | \t\tassert(s1.a[0].a[0].x == s2.a[0].a[0].x);\n'[39m +
        [32m'   | \t\t                         ^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet support this expression.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'7650'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet support this expression.\n'[39m +
        [32m'  --> test:20:28:\n'[39m +
        [32m'   |\n'[39m +
        [32m'20 | \t\tassert(s1.a[0].a[0].x == s2.a[0].a[0].x);\n'[39m +
        [32m'   | \t\t                         ^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet support this expression.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'8364'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet implement type struct C.S storage ref\n'[39m +
        [32m'  --> test:20:28:\n'[39m +
        [32m'   |\n'[39m +
        [32m'20 | \t\tassert(s1.a[0].a[0].x == s2.a[0].a[0].x);\n'[39m +
        [32m'   | \t\t                         ^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet implement type struct C.S storage ref'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'8364'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet implement type struct C.S storage ref\n'[39m +
        [32m'  --> test:20:28:\n'[39m +
        [32m'   |\n'[39m +
        [32m'20 | \t\tassert(s1.a[0].a[0].x == s2.a[0].a[0].x);\n'[39m +
        [32m'   | \t\t                         ^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet implement type struct C.S storage ref'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'8364'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet implement type struct C.S storage ref\n'[39m +
        [32m'  --> test:20:28:\n'[39m +
        [32m'   |\n'[39m +
        [32m'20 | \t\tassert(s1.a[0].a[0].x == s2.a[0].a[0].x);\n'[39m +
        [32m'   | \t\t                         ^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet implement type struct C.S storage ref'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'7650'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet support this expression.\n'[39m +
        [32m'  --> test:23:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'23 | \t\ts1.x = 42;\n'[39m +
        [32m'   | \t\t^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet support this expression.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'8364'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet implement type struct C.S storage ref\n'[39m +
        [32m'  --> test:23:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'23 | \t\ts1.x = 42;\n'[39m +
        [32m'   | \t\t^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet implement type struct C.S storage ref'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'4375'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not support recursive structs.\n'[39m +
        [32m'  --> test:23:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'23 | \t\ts1.x = 42;\n'[39m +
        [32m'   | \t\t^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not support recursive structs.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'7650'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet support this expression.\n'[39m +
        [32m'  --> test:24:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'24 | \t\ts2.x = 42;\n'[39m +
        [32m'   | \t\t^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet support this expression.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'8364'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet implement type struct C.S storage ref\n'[39m +
        [32m'  --> test:24:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'24 | \t\ts2.x = 42;\n'[39m +
        [32m'   | \t\t^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet implement type struct C.S storage ref'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'4375'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not support recursive structs.\n'[39m +
        [32m'  --> test:24:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'24 | \t\ts2.x = 42;\n'[39m +
        [32m'   | \t\t^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not support recursive structs.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'7650'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet support this expression.\n'[39m +
        [32m'  --> test:25:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'25 | \t\ts1.a.push();\n'[39m +
        [32m'   | \t\t^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet support this expression.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'8364'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet implement type struct C.S storage ref\n'[39m +
        [32m'  --> test:25:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'25 | \t\ts1.a.push();\n'[39m +
        [32m'   | \t\t^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet implement type struct C.S storage ref'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'8364'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet implement type struct C.S storage ref\n'[39m +
        [32m'  --> test:25:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'25 | \t\ts1.a.push();\n'[39m +
        [32m'   | \t\t^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet implement type struct C.S storage ref'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'4375'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not support recursive structs.\n'[39m +
        [32m'  --> test:25:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'25 | \t\ts1.a.push();\n'[39m +
        [32m'   | \t\t^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not support recursive structs.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'7650'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet support this expression.\n'[39m +
        [32m'  --> test:26:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'26 | \t\ts2.a.push();\n'[39m +
        [32m'   | \t\t^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet support this expression.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'8364'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet implement type struct C.S storage ref\n'[39m +
        [32m'  --> test:26:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'26 | \t\ts2.a.push();\n'[39m +
        [32m'   | \t\t^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet implement type struct C.S storage ref'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'8364'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet implement type struct C.S storage ref\n'[39m +
        [32m'  --> test:26:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'26 | \t\ts2.a.push();\n'[39m +
        [32m'   | \t\t^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet implement type struct C.S storage ref'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'4375'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not support recursive structs.\n'[39m +
        [32m'  --> test:26:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'26 | \t\ts2.a.push();\n'[39m +
        [32m'   | \t\t^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not support recursive structs.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'7650'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet support this expression.\n'[39m +
        [32m'  --> test:27:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'27 | \t\ts1.a[0].x = 43;\n'[39m +
        [32m'   | \t\t^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet support this expression.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'7650'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet support this expression.\n'[39m +
        [32m'  --> test:27:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'27 | \t\ts1.a[0].x = 43;\n'[39m +
        [32m'   | \t\t^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet support this expression.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'8364'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet implement type struct C.S storage ref\n'[39m +
        [32m'  --> test:27:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'27 | \t\ts1.a[0].x = 43;\n'[39m +
        [32m'   | \t\t^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet implement type struct C.S storage ref'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'8364'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet implement type struct C.S storage ref\n'[39m +
        [32m'  --> test:27:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'27 | \t\ts1.a[0].x = 43;\n'[39m +
        [32m'   | \t\t^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet implement type struct C.S storage ref'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'4375'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not support recursive structs.\n'[39m +
        [32m'  --> test:27:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'27 | \t\ts1.a[0].x = 43;\n'[39m +
        [32m'   | \t\t^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not support recursive structs.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'7650'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet support this expression.\n'[39m +
        [32m'  --> test:28:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'28 | \t\ts2.a[0].x = 43;\n'[39m +
        [32m'   | \t\t^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet support this expression.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'7650'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet support this expression.\n'[39m +
        [32m'  --> test:28:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'28 | \t\ts2.a[0].x = 43;\n'[39m +
        [32m'   | \t\t^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet support this expression.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'8364'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet implement type struct C.S storage ref\n'[39m +
        [32m'  --> test:28:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'28 | \t\ts2.a[0].x = 43;\n'[39m +
        [32m'   | \t\t^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet implement type struct C.S storage ref'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'8364'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet implement type struct C.S storage ref\n'[39m +
        [32m'  --> test:28:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'28 | \t\ts2.a[0].x = 43;\n'[39m +
        [32m'   | \t\t^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet implement type struct C.S storage ref'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'4375'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not support recursive structs.\n'[39m +
        [32m'  --> test:28:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'28 | \t\ts2.a[0].x = 43;\n'[39m +
        [32m'   | \t\t^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not support recursive structs.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'7650'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet support this expression.\n'[39m +
        [32m'  --> test:29:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'29 | \t\ts1.a[0].a.push();\n'[39m +
        [32m'   | \t\t^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet support this expression.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'7650'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet support this expression.\n'[39m +
        [32m'  --> test:29:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'29 | \t\ts1.a[0].a.push();\n'[39m +
        [32m'   | \t\t^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet support this expression.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'8364'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet implement type struct C.S storage ref\n'[39m +
        [32m'  --> test:29:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'29 | \t\ts1.a[0].a.push();\n'[39m +
        [32m'   | \t\t^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet implement type struct C.S storage ref'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'8364'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet implement type struct C.S storage ref\n'[39m +
        [32m'  --> test:29:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'29 | \t\ts1.a[0].a.push();\n'[39m +
        [32m'   | \t\t^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet implement type struct C.S storage ref'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'8364'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet implement type struct C.S storage ref\n'[39m +
        [32m'  --> test:29:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'29 | \t\ts1.a[0].a.push();\n'[39m +
        [32m'   | \t\t^^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet implement type struct C.S storage ref'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'4375'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not support recursive structs.\n'[39m +
        [32m'  --> test:29:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'29 | \t\ts1.a[0].a.push();\n'[39m +
        [32m'   | \t\t^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not support recursive structs.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'7650'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet support this expression.\n'[39m +
        [32m'  --> test:30:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'30 | \t\ts2.a[0].a.push();\n'[39m +
        [32m'   | \t\t^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet support this expression.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'7650'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet support this expression.\n'[39m +
        [32m'  --> test:30:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'30 | \t\ts2.a[0].a.push();\n'[39m +
        [32m'   | \t\t^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet support this expression.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'8364'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet implement type struct C.S storage ref\n'[39m +
        [32m'  --> test:30:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'30 | \t\ts2.a[0].a.push();\n'[39m +
        [32m'   | \t\t^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet implement type struct C.S storage ref'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'8364'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet implement type struct C.S storage ref\n'[39m +
        [32m'  --> test:30:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'30 | \t\ts2.a[0].a.push();\n'[39m +
        [32m'   | \t\t^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet implement type struct C.S storage ref'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'8364'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet implement type struct C.S storage ref\n'[39m +
        [32m'  --> test:30:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'30 | \t\ts2.a[0].a.push();\n'[39m +
        [32m'   | \t\t^^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet implement type struct C.S storage ref'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'4375'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not support recursive structs.\n'[39m +
        [32m'  --> test:30:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'30 | \t\ts2.a[0].a.push();\n'[39m +
        [32m'   | \t\t^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not support recursive structs.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'7650'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet support this expression.\n'[39m +
        [32m'  --> test:31:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'31 | \t\ts1.a[0].a[0].x = 44;\n'[39m +
        [32m'   | \t\t^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet support this expression.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'7650'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet support this expression.\n'[39m +
        [32m'  --> test:31:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'31 | \t\ts1.a[0].a[0].x = 44;\n'[39m +
        [32m'   | \t\t^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet support this expression.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'7650'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet support this expression.\n'[39m +
        [32m'  --> test:31:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'31 | \t\ts1.a[0].a[0].x = 44;\n'[39m +
        [32m'   | \t\t^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet support this expression.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'8364'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet implement type struct C.S storage ref\n'[39m +
        [32m'  --> test:31:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'31 | \t\ts1.a[0].a[0].x = 44;\n'[39m +
        [32m'   | \t\t^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet implement type struct C.S storage ref'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'8364'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet implement type struct C.S storage ref\n'[39m +
        [32m'  --> test:31:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'31 | \t\ts1.a[0].a[0].x = 44;\n'[39m +
        [32m'   | \t\t^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet implement type struct C.S storage ref'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'8364'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet implement type struct C.S storage ref\n'[39m +
        [32m'  --> test:31:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'31 | \t\ts1.a[0].a[0].x = 44;\n'[39m +
        [32m'   | \t\t^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet implement type struct C.S storage ref'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'4375'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not support recursive structs.\n'[39m +
        [32m'  --> test:31:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'31 | \t\ts1.a[0].a[0].x = 44;\n'[39m +
        [32m'   | \t\t^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not support recursive structs.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'7650'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet support this expression.\n'[39m +
        [32m'  --> test:32:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'32 | \t\ts2.a[0].a[0].x = 44;\n'[39m +
        [32m'   | \t\t^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet support this expression.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'7650'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet support this expression.\n'[39m +
        [32m'  --> test:32:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'32 | \t\ts2.a[0].a[0].x = 44;\n'[39m +
        [32m'   | \t\t^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet support this expression.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'7650'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet support this expression.\n'[39m +
        [32m'  --> test:32:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'32 | \t\ts2.a[0].a[0].x = 44;\n'[39m +
        [32m'   | \t\t^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet support this expression.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'8364'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet implement type struct C.S storage ref\n'[39m +
        [32m'  --> test:32:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'32 | \t\ts2.a[0].a[0].x = 44;\n'[39m +
        [32m'   | \t\t^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet implement type struct C.S storage ref'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    ... 8 more items
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### ... with solver Spacer Quant
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'8115'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet support the type of this variable.\n'[39m +
        [32m' --> test:6:2:\n'[39m +
        [32m'  |\n'[39m +
        [32m'6 | \tS s1;\n'[39m +
        [32m'  | \t^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet support the type of this variable.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'8115'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet support the type of this variable.\n'[39m +
        [32m' --> test:7:2:\n'[39m +
        [32m'  |\n'[39m +
        [32m'7 | \tS s2;\n'[39m +
        [32m'  | \t^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet support the type of this variable.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'7650'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet support this expression.\n'[39m +
        [32m' --> test:9:10:\n'[39m +
        [32m'  |\n'[39m +
        [32m'9 | \t\tassert(s1.x == s2.x);\n'[39m +
        [32m'  | \t\t       ^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet support this expression.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'8364'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet implement type struct C.S storage ref\n'[39m +
        [32m' --> test:9:10:\n'[39m +
        [32m'  |\n'[39m +
        [32m'9 | \t\tassert(s1.x == s2.x);\n'[39m +
        [32m'  | \t\t       ^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet implement type struct C.S storage ref'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'7650'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet support this expression.\n'[39m +
        [32m' --> test:9:18:\n'[39m +
        [32m'  |\n'[39m +
        [32m'9 | \t\tassert(s1.x == s2.x);\n'[39m +
        [32m'  | \t\t               ^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet support this expression.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'8364'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet implement type struct C.S storage ref\n'[39m +
        [32m' --> test:9:18:\n'[39m +
        [32m'  |\n'[39m +
        [32m'9 | \t\tassert(s1.x == s2.x);\n'[39m +
        [32m'  | \t\t               ^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet implement type struct C.S storage ref'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'7650'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet support this expression.\n'[39m +
        [32m'  --> test:10:10:\n'[39m +
        [32m'   |\n'[39m +
        [32m'10 | \t\tassert(s1.a.length == s2.a.length);\n'[39m +
        [32m'   | \t\t       ^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet support this expression.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'8364'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet implement type struct C.S storage ref\n'[39m +
        [32m'  --> test:10:10:\n'[39m +
        [32m'   |\n'[39m +
        [32m'10 | \t\tassert(s1.a.length == s2.a.length);\n'[39m +
        [32m'   | \t\t       ^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet implement type struct C.S storage ref'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'7650'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet support this expression.\n'[39m +
        [32m'  --> test:10:25:\n'[39m +
        [32m'   |\n'[39m +
        [32m'10 | \t\tassert(s1.a.length == s2.a.length);\n'[39m +
        [32m'   | \t\t                      ^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet support this expression.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'8364'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet implement type struct C.S storage ref\n'[39m +
        [32m'  --> test:10:25:\n'[39m +
        [32m'   |\n'[39m +
        [32m'10 | \t\tassert(s1.a.length == s2.a.length);\n'[39m +
        [32m'   | \t\t                      ^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet implement type struct C.S storage ref'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'7650'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet support this expression.\n'[39m +
        [32m'  --> test:11:11:\n'[39m +
        [32m'   |\n'[39m +
        [32m'11 | \t\trequire(s1.a.length > 0);\n'[39m +
        [32m'   | \t\t        ^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet support this expression.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'8364'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet implement type struct C.S storage ref\n'[39m +
        [32m'  --> test:11:11:\n'[39m +
        [32m'   |\n'[39m +
        [32m'11 | \t\trequire(s1.a.length > 0);\n'[39m +
        [32m'   | \t\t        ^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet implement type struct C.S storage ref'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'7650'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet support this expression.\n'[39m +
        [32m'  --> test:12:11:\n'[39m +
        [32m'   |\n'[39m +
        [32m'12 | \t\trequire(s2.a.length > 0);\n'[39m +
        [32m'   | \t\t        ^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet support this expression.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'8364'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet implement type struct C.S storage ref\n'[39m +
        [32m'  --> test:12:11:\n'[39m +
        [32m'   |\n'[39m +
        [32m'12 | \t\trequire(s2.a.length > 0);\n'[39m +
        [32m'   | \t\t        ^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet implement type struct C.S storage ref'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'7650'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet support this expression.\n'[39m +
        [32m'  --> test:13:10:\n'[39m +
        [32m'   |\n'[39m +
        [32m'13 | \t\tassert(s1.a[0].x == s2.a[0].x);\n'[39m +
        [32m'   | \t\t       ^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet support this expression.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'7650'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet support this expression.\n'[39m +
        [32m'  --> test:13:10:\n'[39m +
        [32m'   |\n'[39m +
        [32m'13 | \t\tassert(s1.a[0].x == s2.a[0].x);\n'[39m +
        [32m'   | \t\t       ^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet support this expression.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'8364'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet implement type struct C.S storage ref\n'[39m +
        [32m'  --> test:13:10:\n'[39m +
        [32m'   |\n'[39m +
        [32m'13 | \t\tassert(s1.a[0].x == s2.a[0].x);\n'[39m +
        [32m'   | \t\t       ^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet implement type struct C.S storage ref'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'8364'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet implement type struct C.S storage ref\n'[39m +
        [32m'  --> test:13:10:\n'[39m +
        [32m'   |\n'[39m +
        [32m'13 | \t\tassert(s1.a[0].x == s2.a[0].x);\n'[39m +
        [32m'   | \t\t       ^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet implement type struct C.S storage ref'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'7650'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet support this expression.\n'[39m +
        [32m'  --> test:13:23:\n'[39m +
        [32m'   |\n'[39m +
        [32m'13 | \t\tassert(s1.a[0].x == s2.a[0].x);\n'[39m +
        [32m'   | \t\t                    ^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet support this expression.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'7650'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet support this expression.\n'[39m +
        [32m'  --> test:13:23:\n'[39m +
        [32m'   |\n'[39m +
        [32m'13 | \t\tassert(s1.a[0].x == s2.a[0].x);\n'[39m +
        [32m'   | \t\t                    ^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet support this expression.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'8364'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet implement type struct C.S storage ref\n'[39m +
        [32m'  --> test:13:23:\n'[39m +
        [32m'   |\n'[39m +
        [32m'13 | \t\tassert(s1.a[0].x == s2.a[0].x);\n'[39m +
        [32m'   | \t\t                    ^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet implement type struct C.S storage ref'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'8364'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet implement type struct C.S storage ref\n'[39m +
        [32m'  --> test:13:23:\n'[39m +
        [32m'   |\n'[39m +
        [32m'13 | \t\tassert(s1.a[0].x == s2.a[0].x);\n'[39m +
        [32m'   | \t\t                    ^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet implement type struct C.S storage ref'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'7650'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet support this expression.\n'[39m +
        [32m'  --> test:14:11:\n'[39m +
        [32m'   |\n'[39m +
        [32m'14 | \t\trequire(s1.a[0].a.length > 0);\n'[39m +
        [32m'   | \t\t        ^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet support this expression.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'7650'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet support this expression.\n'[39m +
        [32m'  --> test:14:11:\n'[39m +
        [32m'   |\n'[39m +
        [32m'14 | \t\trequire(s1.a[0].a.length > 0);\n'[39m +
        [32m'   | \t\t        ^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet support this expression.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'8364'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet implement type struct C.S storage ref\n'[39m +
        [32m'  --> test:14:11:\n'[39m +
        [32m'   |\n'[39m +
        [32m'14 | \t\trequire(s1.a[0].a.length > 0);\n'[39m +
        [32m'   | \t\t        ^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet implement type struct C.S storage ref'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'8364'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet implement type struct C.S storage ref\n'[39m +
        [32m'  --> test:14:11:\n'[39m +
        [32m'   |\n'[39m +
        [32m'14 | \t\trequire(s1.a[0].a.length > 0);\n'[39m +
        [32m'   | \t\t        ^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet implement type struct C.S storage ref'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'7650'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet support this expression.\n'[39m +
        [32m'  --> test:15:11:\n'[39m +
        [32m'   |\n'[39m +
        [32m'15 | \t\trequire(s2.a[0].a.length > 0);\n'[39m +
        [32m'   | \t\t        ^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet support this expression.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'7650'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet support this expression.\n'[39m +
        [32m'  --> test:15:11:\n'[39m +
        [32m'   |\n'[39m +
        [32m'15 | \t\trequire(s2.a[0].a.length > 0);\n'[39m +
        [32m'   | \t\t        ^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet support this expression.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'8364'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet implement type struct C.S storage ref\n'[39m +
        [32m'  --> test:15:11:\n'[39m +
        [32m'   |\n'[39m +
        [32m'15 | \t\trequire(s2.a[0].a.length > 0);\n'[39m +
        [32m'   | \t\t        ^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet implement type struct C.S storage ref'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'8364'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet implement type struct C.S storage ref\n'[39m +
        [32m'  --> test:15:11:\n'[39m +
        [32m'   |\n'[39m +
        [32m'15 | \t\trequire(s2.a[0].a.length > 0);\n'[39m +
        [32m'   | \t\t        ^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet implement type struct C.S storage ref'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'7650'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet support this expression.\n'[39m +
        [32m'  --> test:16:10:\n'[39m +
        [32m'   |\n'[39m +
        [32m'16 | \t\tassert(s1.a[0].a.length == s2.a[0].a.length);\n'[39m +
        [32m'   | \t\t       ^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet support this expression.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'7650'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet support this expression.\n'[39m +
        [32m'  --> test:16:10:\n'[39m +
        [32m'   |\n'[39m +
        [32m'16 | \t\tassert(s1.a[0].a.length == s2.a[0].a.length);\n'[39m +
        [32m'   | \t\t       ^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet support this expression.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'8364'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet implement type struct C.S storage ref\n'[39m +
        [32m'  --> test:16:10:\n'[39m +
        [32m'   |\n'[39m +
        [32m'16 | \t\tassert(s1.a[0].a.length == s2.a[0].a.length);\n'[39m +
        [32m'   | \t\t       ^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet implement type struct C.S storage ref'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'8364'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet implement type struct C.S storage ref\n'[39m +
        [32m'  --> test:16:10:\n'[39m +
        [32m'   |\n'[39m +
        [32m'16 | \t\tassert(s1.a[0].a.length == s2.a[0].a.length);\n'[39m +
        [32m'   | \t\t       ^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet implement type struct C.S storage ref'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'7650'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet support this expression.\n'[39m +
        [32m'  --> test:16:30:\n'[39m +
        [32m'   |\n'[39m +
        [32m'16 | \t\tassert(s1.a[0].a.length == s2.a[0].a.length);\n'[39m +
        [32m'   | \t\t                           ^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet support this expression.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'7650'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet support this expression.\n'[39m +
        [32m'  --> test:16:30:\n'[39m +
        [32m'   |\n'[39m +
        [32m'16 | \t\tassert(s1.a[0].a.length == s2.a[0].a.length);\n'[39m +
        [32m'   | \t\t                           ^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet support this expression.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'8364'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet implement type struct C.S storage ref\n'[39m +
        [32m'  --> test:16:30:\n'[39m +
        [32m'   |\n'[39m +
        [32m'16 | \t\tassert(s1.a[0].a.length == s2.a[0].a.length);\n'[39m +
        [32m'   | \t\t                           ^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet implement type struct C.S storage ref'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'8364'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet implement type struct C.S storage ref\n'[39m +
        [32m'  --> test:16:30:\n'[39m +
        [32m'   |\n'[39m +
        [32m'16 | \t\tassert(s1.a[0].a.length == s2.a[0].a.length);\n'[39m +
        [32m'   | \t\t                           ^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet implement type struct C.S storage ref'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'7650'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet support this expression.\n'[39m +
        [32m'  --> test:20:10:\n'[39m +
        [32m'   |\n'[39m +
        [32m'20 | \t\tassert(s1.a[0].a[0].x == s2.a[0].a[0].x);\n'[39m +
        [32m'   | \t\t       ^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet support this expression.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'7650'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet support this expression.\n'[39m +
        [32m'  --> test:20:10:\n'[39m +
        [32m'   |\n'[39m +
        [32m'20 | \t\tassert(s1.a[0].a[0].x == s2.a[0].a[0].x);\n'[39m +
        [32m'   | \t\t       ^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet support this expression.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'7650'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet support this expression.\n'[39m +
        [32m'  --> test:20:10:\n'[39m +
        [32m'   |\n'[39m +
        [32m'20 | \t\tassert(s1.a[0].a[0].x == s2.a[0].a[0].x);\n'[39m +
        [32m'   | \t\t       ^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet support this expression.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'8364'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet implement type struct C.S storage ref\n'[39m +
        [32m'  --> test:20:10:\n'[39m +
        [32m'   |\n'[39m +
        [32m'20 | \t\tassert(s1.a[0].a[0].x == s2.a[0].a[0].x);\n'[39m +
        [32m'   | \t\t       ^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet implement type struct C.S storage ref'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'8364'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet implement type struct C.S storage ref\n'[39m +
        [32m'  --> test:20:10:\n'[39m +
        [32m'   |\n'[39m +
        [32m'20 | \t\tassert(s1.a[0].a[0].x == s2.a[0].a[0].x);\n'[39m +
        [32m'   | \t\t       ^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet implement type struct C.S storage ref'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'8364'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet implement type struct C.S storage ref\n'[39m +
        [32m'  --> test:20:10:\n'[39m +
        [32m'   |\n'[39m +
        [32m'20 | \t\tassert(s1.a[0].a[0].x == s2.a[0].a[0].x);\n'[39m +
        [32m'   | \t\t       ^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet implement type struct C.S storage ref'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'7650'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet support this expression.\n'[39m +
        [32m'  --> test:20:28:\n'[39m +
        [32m'   |\n'[39m +
        [32m'20 | \t\tassert(s1.a[0].a[0].x == s2.a[0].a[0].x);\n'[39m +
        [32m'   | \t\t                         ^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet support this expression.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'7650'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet support this expression.\n'[39m +
        [32m'  --> test:20:28:\n'[39m +
        [32m'   |\n'[39m +
        [32m'20 | \t\tassert(s1.a[0].a[0].x == s2.a[0].a[0].x);\n'[39m +
        [32m'   | \t\t                         ^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet support this expression.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'7650'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet support this expression.\n'[39m +
        [32m'  --> test:20:28:\n'[39m +
        [32m'   |\n'[39m +
        [32m'20 | \t\tassert(s1.a[0].a[0].x == s2.a[0].a[0].x);\n'[39m +
        [32m'   | \t\t                         ^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet support this expression.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'8364'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet implement type struct C.S storage ref\n'[39m +
        [32m'  --> test:20:28:\n'[39m +
        [32m'   |\n'[39m +
        [32m'20 | \t\tassert(s1.a[0].a[0].x == s2.a[0].a[0].x);\n'[39m +
        [32m'   | \t\t                         ^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet implement type struct C.S storage ref'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'8364'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet implement type struct C.S storage ref\n'[39m +
        [32m'  --> test:20:28:\n'[39m +
        [32m'   |\n'[39m +
        [32m'20 | \t\tassert(s1.a[0].a[0].x == s2.a[0].a[0].x);\n'[39m +
        [32m'   | \t\t                         ^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet implement type struct C.S storage ref'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'8364'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet implement type struct C.S storage ref\n'[39m +
        [32m'  --> test:20:28:\n'[39m +
        [32m'   |\n'[39m +
        [32m'20 | \t\tassert(s1.a[0].a[0].x == s2.a[0].a[0].x);\n'[39m +
        [32m'   | \t\t                         ^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet implement type struct C.S storage ref'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'7650'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet support this expression.\n'[39m +
        [32m'  --> test:23:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'23 | \t\ts1.x = 42;\n'[39m +
        [32m'   | \t\t^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet support this expression.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'8364'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet implement type struct C.S storage ref\n'[39m +
        [32m'  --> test:23:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'23 | \t\ts1.x = 42;\n'[39m +
        [32m'   | \t\t^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet implement type struct C.S storage ref'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'4375'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not support recursive structs.\n'[39m +
        [32m'  --> test:23:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'23 | \t\ts1.x = 42;\n'[39m +
        [32m'   | \t\t^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not support recursive structs.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'7650'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet support this expression.\n'[39m +
        [32m'  --> test:24:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'24 | \t\ts2.x = 42;\n'[39m +
        [32m'   | \t\t^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet support this expression.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'8364'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet implement type struct C.S storage ref\n'[39m +
        [32m'  --> test:24:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'24 | \t\ts2.x = 42;\n'[39m +
        [32m'   | \t\t^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet implement type struct C.S storage ref'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'4375'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not support recursive structs.\n'[39m +
        [32m'  --> test:24:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'24 | \t\ts2.x = 42;\n'[39m +
        [32m'   | \t\t^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not support recursive structs.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'7650'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet support this expression.\n'[39m +
        [32m'  --> test:25:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'25 | \t\ts1.a.push();\n'[39m +
        [32m'   | \t\t^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet support this expression.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'8364'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet implement type struct C.S storage ref\n'[39m +
        [32m'  --> test:25:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'25 | \t\ts1.a.push();\n'[39m +
        [32m'   | \t\t^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet implement type struct C.S storage ref'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'8364'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet implement type struct C.S storage ref\n'[39m +
        [32m'  --> test:25:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'25 | \t\ts1.a.push();\n'[39m +
        [32m'   | \t\t^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet implement type struct C.S storage ref'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'4375'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not support recursive structs.\n'[39m +
        [32m'  --> test:25:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'25 | \t\ts1.a.push();\n'[39m +
        [32m'   | \t\t^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not support recursive structs.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'7650'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet support this expression.\n'[39m +
        [32m'  --> test:26:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'26 | \t\ts2.a.push();\n'[39m +
        [32m'   | \t\t^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet support this expression.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'8364'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet implement type struct C.S storage ref\n'[39m +
        [32m'  --> test:26:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'26 | \t\ts2.a.push();\n'[39m +
        [32m'   | \t\t^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet implement type struct C.S storage ref'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'8364'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet implement type struct C.S storage ref\n'[39m +
        [32m'  --> test:26:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'26 | \t\ts2.a.push();\n'[39m +
        [32m'   | \t\t^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet implement type struct C.S storage ref'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'4375'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not support recursive structs.\n'[39m +
        [32m'  --> test:26:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'26 | \t\ts2.a.push();\n'[39m +
        [32m'   | \t\t^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not support recursive structs.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'7650'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet support this expression.\n'[39m +
        [32m'  --> test:27:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'27 | \t\ts1.a[0].x = 43;\n'[39m +
        [32m'   | \t\t^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet support this expression.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'7650'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet support this expression.\n'[39m +
        [32m'  --> test:27:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'27 | \t\ts1.a[0].x = 43;\n'[39m +
        [32m'   | \t\t^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet support this expression.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'8364'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet implement type struct C.S storage ref\n'[39m +
        [32m'  --> test:27:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'27 | \t\ts1.a[0].x = 43;\n'[39m +
        [32m'   | \t\t^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet implement type struct C.S storage ref'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'8364'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet implement type struct C.S storage ref\n'[39m +
        [32m'  --> test:27:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'27 | \t\ts1.a[0].x = 43;\n'[39m +
        [32m'   | \t\t^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet implement type struct C.S storage ref'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'4375'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not support recursive structs.\n'[39m +
        [32m'  --> test:27:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'27 | \t\ts1.a[0].x = 43;\n'[39m +
        [32m'   | \t\t^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not support recursive structs.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'7650'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet support this expression.\n'[39m +
        [32m'  --> test:28:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'28 | \t\ts2.a[0].x = 43;\n'[39m +
        [32m'   | \t\t^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet support this expression.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'7650'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet support this expression.\n'[39m +
        [32m'  --> test:28:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'28 | \t\ts2.a[0].x = 43;\n'[39m +
        [32m'   | \t\t^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet support this expression.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'8364'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet implement type struct C.S storage ref\n'[39m +
        [32m'  --> test:28:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'28 | \t\ts2.a[0].x = 43;\n'[39m +
        [32m'   | \t\t^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet implement type struct C.S storage ref'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'8364'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet implement type struct C.S storage ref\n'[39m +
        [32m'  --> test:28:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'28 | \t\ts2.a[0].x = 43;\n'[39m +
        [32m'   | \t\t^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet implement type struct C.S storage ref'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'4375'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not support recursive structs.\n'[39m +
        [32m'  --> test:28:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'28 | \t\ts2.a[0].x = 43;\n'[39m +
        [32m'   | \t\t^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not support recursive structs.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'7650'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet support this expression.\n'[39m +
        [32m'  --> test:29:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'29 | \t\ts1.a[0].a.push();\n'[39m +
        [32m'   | \t\t^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet support this expression.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'7650'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet support this expression.\n'[39m +
        [32m'  --> test:29:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'29 | \t\ts1.a[0].a.push();\n'[39m +
        [32m'   | \t\t^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet support this expression.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'8364'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet implement type struct C.S storage ref\n'[39m +
        [32m'  --> test:29:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'29 | \t\ts1.a[0].a.push();\n'[39m +
        [32m'   | \t\t^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet implement type struct C.S storage ref'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'8364'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet implement type struct C.S storage ref\n'[39m +
        [32m'  --> test:29:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'29 | \t\ts1.a[0].a.push();\n'[39m +
        [32m'   | \t\t^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet implement type struct C.S storage ref'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'8364'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet implement type struct C.S storage ref\n'[39m +
        [32m'  --> test:29:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'29 | \t\ts1.a[0].a.push();\n'[39m +
        [32m'   | \t\t^^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet implement type struct C.S storage ref'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'4375'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not support recursive structs.\n'[39m +
        [32m'  --> test:29:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'29 | \t\ts1.a[0].a.push();\n'[39m +
        [32m'   | \t\t^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not support recursive structs.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'7650'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet support this expression.\n'[39m +
        [32m'  --> test:30:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'30 | \t\ts2.a[0].a.push();\n'[39m +
        [32m'   | \t\t^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet support this expression.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'7650'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet support this expression.\n'[39m +
        [32m'  --> test:30:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'30 | \t\ts2.a[0].a.push();\n'[39m +
        [32m'   | \t\t^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet support this expression.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'8364'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet implement type struct C.S storage ref\n'[39m +
        [32m'  --> test:30:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'30 | \t\ts2.a[0].a.push();\n'[39m +
        [32m'   | \t\t^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet implement type struct C.S storage ref'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'8364'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet implement type struct C.S storage ref\n'[39m +
        [32m'  --> test:30:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'30 | \t\ts2.a[0].a.push();\n'[39m +
        [32m'   | \t\t^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet implement type struct C.S storage ref'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'8364'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet implement type struct C.S storage ref\n'[39m +
        [32m'  --> test:30:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'30 | \t\ts2.a[0].a.push();\n'[39m +
        [32m'   | \t\t^^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet implement type struct C.S storage ref'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'4375'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not support recursive structs.\n'[39m +
        [32m'  --> test:30:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'30 | \t\ts2.a[0].a.push();\n'[39m +
        [32m'   | \t\t^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not support recursive structs.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'7650'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet support this expression.\n'[39m +
        [32m'  --> test:31:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'31 | \t\ts1.a[0].a[0].x = 44;\n'[39m +
        [32m'   | \t\t^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet support this expression.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'7650'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet support this expression.\n'[39m +
        [32m'  --> test:31:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'31 | \t\ts1.a[0].a[0].x = 44;\n'[39m +
        [32m'   | \t\t^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet support this expression.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'7650'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet support this expression.\n'[39m +
        [32m'  --> test:31:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'31 | \t\ts1.a[0].a[0].x = 44;\n'[39m +
        [32m'   | \t\t^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet support this expression.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'8364'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet implement type struct C.S storage ref\n'[39m +
        [32m'  --> test:31:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'31 | \t\ts1.a[0].a[0].x = 44;\n'[39m +
        [32m'   | \t\t^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet implement type struct C.S storage ref'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'8364'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet implement type struct C.S storage ref\n'[39m +
        [32m'  --> test:31:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'31 | \t\ts1.a[0].a[0].x = 44;\n'[39m +
        [32m'   | \t\t^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet implement type struct C.S storage ref'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'8364'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet implement type struct C.S storage ref\n'[39m +
        [32m'  --> test:31:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'31 | \t\ts1.a[0].a[0].x = 44;\n'[39m +
        [32m'   | \t\t^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet implement type struct C.S storage ref'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'4375'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not support recursive structs.\n'[39m +
        [32m'  --> test:31:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'31 | \t\ts1.a[0].a[0].x = 44;\n'[39m +
        [32m'   | \t\t^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not support recursive structs.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'7650'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet support this expression.\n'[39m +
        [32m'  --> test:32:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'32 | \t\ts2.a[0].a[0].x = 44;\n'[39m +
        [32m'   | \t\t^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet support this expression.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'7650'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet support this expression.\n'[39m +
        [32m'  --> test:32:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'32 | \t\ts2.a[0].a[0].x = 44;\n'[39m +
        [32m'   | \t\t^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet support this expression.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'7650'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet support this expression.\n'[39m +
        [32m'  --> test:32:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'32 | \t\ts2.a[0].a[0].x = 44;\n'[39m +
        [32m'   | \t\t^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet support this expression.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'8364'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet implement type struct C.S storage ref\n'[39m +
        [32m'  --> test:32:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'32 | \t\ts2.a[0].a[0].x = 44;\n'[39m +
        [32m'   | \t\t^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet implement type struct C.S storage ref'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    ... 8 more items
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### Running /home/solc-js/regression/types/struct/struct_recursive_4.sol ...
### ... with solver Eldarica Vanilla
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'8115'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet support the type of this variable.\n'[39m +
        [32m' --> test:6:2:\n'[39m +
        [32m'  |\n'[39m +
        [32m'6 | \tS s1;\n'[39m +
        [32m'  | \t^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet support the type of this variable.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'8115'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet support the type of this variable.\n'[39m +
        [32m' --> test:7:2:\n'[39m +
        [32m'  |\n'[39m +
        [32m'7 | \tS s2;\n'[39m +
        [32m'  | \t^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet support the type of this variable.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'8115'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet support the type of this variable.\n'[39m +
        [32m' --> test:9:3:\n'[39m +
        [32m'  |\n'[39m +
        [32m'9 | \t\tS storage s3 = b1 ? s1 : s2;\n'[39m +
        [32m'  | \t\t^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet support the type of this variable.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'8115'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet support the type of this variable.\n'[39m +
        [32m'  --> test:10:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'10 | \t\tS storage s4 = b2 ? s1 : s2;\n'[39m +
        [32m'   | \t\t^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet support the type of this variable.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'8364'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet implement type struct C.S storage ref\n'[39m +
        [32m' --> test:9:23:\n'[39m +
        [32m'  |\n'[39m +
        [32m'9 | \t\tS storage s3 = b1 ? s1 : s2;\n'[39m +
        [32m'  | \t\t                    ^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet implement type struct C.S storage ref'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'8364'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet implement type struct C.S storage ref\n'[39m +
        [32m' --> test:9:28:\n'[39m +
        [32m'  |\n'[39m +
        [32m'9 | \t\tS storage s3 = b1 ? s1 : s2;\n'[39m +
        [32m'  | \t\t                         ^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet implement type struct C.S storage ref'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'8364'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet implement type struct C.S storage pointer\n'[39m +
        [32m' --> test:9:18:\n'[39m +
        [32m'  |\n'[39m +
        [32m'9 | \t\tS storage s3 = b1 ? s1 : s2;\n'[39m +
        [32m'  | \t\t               ^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet implement type struct C.S storage pointer'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'8364'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet implement type struct C.S storage ref\n'[39m +
        [32m'  --> test:10:23:\n'[39m +
        [32m'   |\n'[39m +
        [32m'10 | \t\tS storage s4 = b2 ? s1 : s2;\n'[39m +
        [32m'   | \t\t                    ^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet implement type struct C.S storage ref'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'8364'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet implement type struct C.S storage ref\n'[39m +
        [32m'  --> test:10:28:\n'[39m +
        [32m'   |\n'[39m +
        [32m'10 | \t\tS storage s4 = b2 ? s1 : s2;\n'[39m +
        [32m'   | \t\t                         ^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet implement type struct C.S storage ref'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'8364'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet implement type struct C.S storage pointer\n'[39m +
        [32m'  --> test:10:18:\n'[39m +
        [32m'   |\n'[39m +
        [32m'10 | \t\tS storage s4 = b2 ? s1 : s2;\n'[39m +
        [32m'   | \t\t               ^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet implement type struct C.S storage pointer'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'7650'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet support this expression.\n'[39m +
        [32m'  --> test:11:10:\n'[39m +
        [32m'   |\n'[39m +
        [32m'11 | \t\tassert(s3.x == s1.x || s3.x == s2.x);\n'[39m +
        [32m'   | \t\t       ^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet support this expression.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'8364'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet implement type struct C.S storage pointer\n'[39m +
        [32m'  --> test:11:10:\n'[39m +
        [32m'   |\n'[39m +
        [32m'11 | \t\tassert(s3.x == s1.x || s3.x == s2.x);\n'[39m +
        [32m'   | \t\t       ^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet implement type struct C.S storage pointer'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'7650'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet support this expression.\n'[39m +
        [32m'  --> test:11:18:\n'[39m +
        [32m'   |\n'[39m +
        [32m'11 | \t\tassert(s3.x == s1.x || s3.x == s2.x);\n'[39m +
        [32m'   | \t\t               ^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet support this expression.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'8364'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet implement type struct C.S storage ref\n'[39m +
        [32m'  --> test:11:18:\n'[39m +
        [32m'   |\n'[39m +
        [32m'11 | \t\tassert(s3.x == s1.x || s3.x == s2.x);\n'[39m +
        [32m'   | \t\t               ^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet implement type struct C.S storage ref'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'7650'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet support this expression.\n'[39m +
        [32m'  --> test:11:26:\n'[39m +
        [32m'   |\n'[39m +
        [32m'11 | \t\tassert(s3.x == s1.x || s3.x == s2.x);\n'[39m +
        [32m'   | \t\t                       ^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet support this expression.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'8364'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet implement type struct C.S storage pointer\n'[39m +
        [32m'  --> test:11:26:\n'[39m +
        [32m'   |\n'[39m +
        [32m'11 | \t\tassert(s3.x == s1.x || s3.x == s2.x);\n'[39m +
        [32m'   | \t\t                       ^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet implement type struct C.S storage pointer'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'7650'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet support this expression.\n'[39m +
        [32m'  --> test:11:34:\n'[39m +
        [32m'   |\n'[39m +
        [32m'11 | \t\tassert(s3.x == s1.x || s3.x == s2.x);\n'[39m +
        [32m'   | \t\t                               ^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet support this expression.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'8364'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet implement type struct C.S storage ref\n'[39m +
        [32m'  --> test:11:34:\n'[39m +
        [32m'   |\n'[39m +
        [32m'11 | \t\tassert(s3.x == s1.x || s3.x == s2.x);\n'[39m +
        [32m'   | \t\t                               ^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet implement type struct C.S storage ref'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'7650'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet support this expression.\n'[39m +
        [32m'  --> test:12:10:\n'[39m +
        [32m'   |\n'[39m +
        [32m'12 | \t\tassert(s4.x == s1.x || s4.x == s2.x);\n'[39m +
        [32m'   | \t\t       ^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet support this expression.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'8364'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet implement type struct C.S storage pointer\n'[39m +
        [32m'  --> test:12:10:\n'[39m +
        [32m'   |\n'[39m +
        [32m'12 | \t\tassert(s4.x == s1.x || s4.x == s2.x);\n'[39m +
        [32m'   | \t\t       ^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet implement type struct C.S storage pointer'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'7650'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet support this expression.\n'[39m +
        [32m'  --> test:12:18:\n'[39m +
        [32m'   |\n'[39m +
        [32m'12 | \t\tassert(s4.x == s1.x || s4.x == s2.x);\n'[39m +
        [32m'   | \t\t               ^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet support this expression.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'8364'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet implement type struct C.S storage ref\n'[39m +
        [32m'  --> test:12:18:\n'[39m +
        [32m'   |\n'[39m +
        [32m'12 | \t\tassert(s4.x == s1.x || s4.x == s2.x);\n'[39m +
        [32m'   | \t\t               ^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet implement type struct C.S storage ref'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'7650'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet support this expression.\n'[39m +
        [32m'  --> test:12:26:\n'[39m +
        [32m'   |\n'[39m +
        [32m'12 | \t\tassert(s4.x == s1.x || s4.x == s2.x);\n'[39m +
        [32m'   | \t\t                       ^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet support this expression.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'8364'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet implement type struct C.S storage pointer\n'[39m +
        [32m'  --> test:12:26:\n'[39m +
        [32m'   |\n'[39m +
        [32m'12 | \t\tassert(s4.x == s1.x || s4.x == s2.x);\n'[39m +
        [32m'   | \t\t                       ^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet implement type struct C.S storage pointer'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'7650'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet support this expression.\n'[39m +
        [32m'  --> test:12:34:\n'[39m +
        [32m'   |\n'[39m +
        [32m'12 | \t\tassert(s4.x == s1.x || s4.x == s2.x);\n'[39m +
        [32m'   | \t\t                               ^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet support this expression.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'8364'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet implement type struct C.S storage ref\n'[39m +
        [32m'  --> test:12:34:\n'[39m +
        [32m'   |\n'[39m +
        [32m'12 | \t\tassert(s4.x == s1.x || s4.x == s2.x);\n'[39m +
        [32m'   | \t\t                               ^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet implement type struct C.S storage ref'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'7650'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet support this expression.\n'[39m +
        [32m'  --> test:13:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'13 | \t\ts3.x = 44;\n'[39m +
        [32m'   | \t\t^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet support this expression.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'8364'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet implement type struct C.S storage pointer\n'[39m +
        [32m'  --> test:13:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'13 | \t\ts3.x = 44;\n'[39m +
        [32m'   | \t\t^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet implement type struct C.S storage pointer'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'4375'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not support recursive structs.\n'[39m +
        [32m'  --> test:13:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'13 | \t\ts3.x = 44;\n'[39m +
        [32m'   | \t\t^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not support recursive structs.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'7650'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet support this expression.\n'[39m +
        [32m'  --> test:15:10:\n'[39m +
        [32m'   |\n'[39m +
        [32m'15 | \t\tassert(s1.x == 44 || s2.x == 44);\n'[39m +
        [32m'   | \t\t       ^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet support this expression.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'8364'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet implement type struct C.S storage ref\n'[39m +
        [32m'  --> test:15:10:\n'[39m +
        [32m'   |\n'[39m +
        [32m'15 | \t\tassert(s1.x == 44 || s2.x == 44);\n'[39m +
        [32m'   | \t\t       ^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet implement type struct C.S storage ref'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'7650'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet support this expression.\n'[39m +
        [32m'  --> test:15:24:\n'[39m +
        [32m'   |\n'[39m +
        [32m'15 | \t\tassert(s1.x == 44 || s2.x == 44);\n'[39m +
        [32m'   | \t\t                     ^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet support this expression.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'8364'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet implement type struct C.S storage ref\n'[39m +
        [32m'  --> test:15:24:\n'[39m +
        [32m'   |\n'[39m +
        [32m'15 | \t\tassert(s1.x == 44 || s2.x == 44);\n'[39m +
        [32m'   | \t\t                     ^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet implement type struct C.S storage ref'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m'  --> test:11:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'11 | \t\tassert(s3.x == s1.x || s3.x == s2.x);\n'[39m +
        [32m'   | \t\t^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m'  --> test:12:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'12 | \t\tassert(s4.x == s1.x || s4.x == s2.x);\n'[39m +
        [32m'   | \t\t^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m'  --> test:15:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'15 | \t\tassert(s1.x == 44 || s2.x == 44);\n'[39m +
        [32m'   | \t\t^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### ... with solver Spacer Quant
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'8115'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet support the type of this variable.\n'[39m +
        [32m' --> test:6:2:\n'[39m +
        [32m'  |\n'[39m +
        [32m'6 | \tS s1;\n'[39m +
        [32m'  | \t^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet support the type of this variable.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'8115'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet support the type of this variable.\n'[39m +
        [32m' --> test:7:2:\n'[39m +
        [32m'  |\n'[39m +
        [32m'7 | \tS s2;\n'[39m +
        [32m'  | \t^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet support the type of this variable.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'8115'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet support the type of this variable.\n'[39m +
        [32m' --> test:9:3:\n'[39m +
        [32m'  |\n'[39m +
        [32m'9 | \t\tS storage s3 = b1 ? s1 : s2;\n'[39m +
        [32m'  | \t\t^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet support the type of this variable.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'8115'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet support the type of this variable.\n'[39m +
        [32m'  --> test:10:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'10 | \t\tS storage s4 = b2 ? s1 : s2;\n'[39m +
        [32m'   | \t\t^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet support the type of this variable.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'8364'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet implement type struct C.S storage ref\n'[39m +
        [32m' --> test:9:23:\n'[39m +
        [32m'  |\n'[39m +
        [32m'9 | \t\tS storage s3 = b1 ? s1 : s2;\n'[39m +
        [32m'  | \t\t                    ^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet implement type struct C.S storage ref'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'8364'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet implement type struct C.S storage ref\n'[39m +
        [32m' --> test:9:28:\n'[39m +
        [32m'  |\n'[39m +
        [32m'9 | \t\tS storage s3 = b1 ? s1 : s2;\n'[39m +
        [32m'  | \t\t                         ^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet implement type struct C.S storage ref'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'8364'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet implement type struct C.S storage pointer\n'[39m +
        [32m' --> test:9:18:\n'[39m +
        [32m'  |\n'[39m +
        [32m'9 | \t\tS storage s3 = b1 ? s1 : s2;\n'[39m +
        [32m'  | \t\t               ^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet implement type struct C.S storage pointer'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'8364'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet implement type struct C.S storage ref\n'[39m +
        [32m'  --> test:10:23:\n'[39m +
        [32m'   |\n'[39m +
        [32m'10 | \t\tS storage s4 = b2 ? s1 : s2;\n'[39m +
        [32m'   | \t\t                    ^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet implement type struct C.S storage ref'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'8364'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet implement type struct C.S storage ref\n'[39m +
        [32m'  --> test:10:28:\n'[39m +
        [32m'   |\n'[39m +
        [32m'10 | \t\tS storage s4 = b2 ? s1 : s2;\n'[39m +
        [32m'   | \t\t                         ^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet implement type struct C.S storage ref'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'8364'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet implement type struct C.S storage pointer\n'[39m +
        [32m'  --> test:10:18:\n'[39m +
        [32m'   |\n'[39m +
        [32m'10 | \t\tS storage s4 = b2 ? s1 : s2;\n'[39m +
        [32m'   | \t\t               ^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet implement type struct C.S storage pointer'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'7650'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet support this expression.\n'[39m +
        [32m'  --> test:11:10:\n'[39m +
        [32m'   |\n'[39m +
        [32m'11 | \t\tassert(s3.x == s1.x || s3.x == s2.x);\n'[39m +
        [32m'   | \t\t       ^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet support this expression.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'8364'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet implement type struct C.S storage pointer\n'[39m +
        [32m'  --> test:11:10:\n'[39m +
        [32m'   |\n'[39m +
        [32m'11 | \t\tassert(s3.x == s1.x || s3.x == s2.x);\n'[39m +
        [32m'   | \t\t       ^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet implement type struct C.S storage pointer'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'7650'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet support this expression.\n'[39m +
        [32m'  --> test:11:18:\n'[39m +
        [32m'   |\n'[39m +
        [32m'11 | \t\tassert(s3.x == s1.x || s3.x == s2.x);\n'[39m +
        [32m'   | \t\t               ^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet support this expression.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'8364'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet implement type struct C.S storage ref\n'[39m +
        [32m'  --> test:11:18:\n'[39m +
        [32m'   |\n'[39m +
        [32m'11 | \t\tassert(s3.x == s1.x || s3.x == s2.x);\n'[39m +
        [32m'   | \t\t               ^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet implement type struct C.S storage ref'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'7650'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet support this expression.\n'[39m +
        [32m'  --> test:11:26:\n'[39m +
        [32m'   |\n'[39m +
        [32m'11 | \t\tassert(s3.x == s1.x || s3.x == s2.x);\n'[39m +
        [32m'   | \t\t                       ^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet support this expression.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'8364'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet implement type struct C.S storage pointer\n'[39m +
        [32m'  --> test:11:26:\n'[39m +
        [32m'   |\n'[39m +
        [32m'11 | \t\tassert(s3.x == s1.x || s3.x == s2.x);\n'[39m +
        [32m'   | \t\t                       ^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet implement type struct C.S storage pointer'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'7650'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet support this expression.\n'[39m +
        [32m'  --> test:11:34:\n'[39m +
        [32m'   |\n'[39m +
        [32m'11 | \t\tassert(s3.x == s1.x || s3.x == s2.x);\n'[39m +
        [32m'   | \t\t                               ^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet support this expression.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'8364'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet implement type struct C.S storage ref\n'[39m +
        [32m'  --> test:11:34:\n'[39m +
        [32m'   |\n'[39m +
        [32m'11 | \t\tassert(s3.x == s1.x || s3.x == s2.x);\n'[39m +
        [32m'   | \t\t                               ^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet implement type struct C.S storage ref'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'7650'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet support this expression.\n'[39m +
        [32m'  --> test:12:10:\n'[39m +
        [32m'   |\n'[39m +
        [32m'12 | \t\tassert(s4.x == s1.x || s4.x == s2.x);\n'[39m +
        [32m'   | \t\t       ^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet support this expression.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'8364'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet implement type struct C.S storage pointer\n'[39m +
        [32m'  --> test:12:10:\n'[39m +
        [32m'   |\n'[39m +
        [32m'12 | \t\tassert(s4.x == s1.x || s4.x == s2.x);\n'[39m +
        [32m'   | \t\t       ^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet implement type struct C.S storage pointer'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'7650'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet support this expression.\n'[39m +
        [32m'  --> test:12:18:\n'[39m +
        [32m'   |\n'[39m +
        [32m'12 | \t\tassert(s4.x == s1.x || s4.x == s2.x);\n'[39m +
        [32m'   | \t\t               ^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet support this expression.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'8364'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet implement type struct C.S storage ref\n'[39m +
        [32m'  --> test:12:18:\n'[39m +
        [32m'   |\n'[39m +
        [32m'12 | \t\tassert(s4.x == s1.x || s4.x == s2.x);\n'[39m +
        [32m'   | \t\t               ^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet implement type struct C.S storage ref'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'7650'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet support this expression.\n'[39m +
        [32m'  --> test:12:26:\n'[39m +
        [32m'   |\n'[39m +
        [32m'12 | \t\tassert(s4.x == s1.x || s4.x == s2.x);\n'[39m +
        [32m'   | \t\t                       ^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet support this expression.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'8364'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet implement type struct C.S storage pointer\n'[39m +
        [32m'  --> test:12:26:\n'[39m +
        [32m'   |\n'[39m +
        [32m'12 | \t\tassert(s4.x == s1.x || s4.x == s2.x);\n'[39m +
        [32m'   | \t\t                       ^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet implement type struct C.S storage pointer'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'7650'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet support this expression.\n'[39m +
        [32m'  --> test:12:34:\n'[39m +
        [32m'   |\n'[39m +
        [32m'12 | \t\tassert(s4.x == s1.x || s4.x == s2.x);\n'[39m +
        [32m'   | \t\t                               ^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet support this expression.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'8364'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet implement type struct C.S storage ref\n'[39m +
        [32m'  --> test:12:34:\n'[39m +
        [32m'   |\n'[39m +
        [32m'12 | \t\tassert(s4.x == s1.x || s4.x == s2.x);\n'[39m +
        [32m'   | \t\t                               ^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet implement type struct C.S storage ref'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'7650'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet support this expression.\n'[39m +
        [32m'  --> test:13:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'13 | \t\ts3.x = 44;\n'[39m +
        [32m'   | \t\t^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet support this expression.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'8364'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet implement type struct C.S storage pointer\n'[39m +
        [32m'  --> test:13:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'13 | \t\ts3.x = 44;\n'[39m +
        [32m'   | \t\t^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet implement type struct C.S storage pointer'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'4375'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not support recursive structs.\n'[39m +
        [32m'  --> test:13:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'13 | \t\ts3.x = 44;\n'[39m +
        [32m'   | \t\t^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not support recursive structs.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'7650'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet support this expression.\n'[39m +
        [32m'  --> test:15:10:\n'[39m +
        [32m'   |\n'[39m +
        [32m'15 | \t\tassert(s1.x == 44 || s2.x == 44);\n'[39m +
        [32m'   | \t\t       ^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet support this expression.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'8364'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet implement type struct C.S storage ref\n'[39m +
        [32m'  --> test:15:10:\n'[39m +
        [32m'   |\n'[39m +
        [32m'15 | \t\tassert(s1.x == 44 || s2.x == 44);\n'[39m +
        [32m'   | \t\t       ^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet implement type struct C.S storage ref'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'7650'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet support this expression.\n'[39m +
        [32m'  --> test:15:24:\n'[39m +
        [32m'   |\n'[39m +
        [32m'15 | \t\tassert(s1.x == 44 || s2.x == 44);\n'[39m +
        [32m'   | \t\t                     ^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet support this expression.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'8364'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet implement type struct C.S storage ref\n'[39m +
        [32m'  --> test:15:24:\n'[39m +
        [32m'   |\n'[39m +
        [32m'15 | \t\tassert(s1.x == 44 || s2.x == 44);\n'[39m +
        [32m'   | \t\t                     ^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet implement type struct C.S storage ref'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m'  --> test:11:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'11 | \t\tassert(s3.x == s1.x || s3.x == s2.x);\n'[39m +
        [32m'   | \t\t^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m'  --> test:12:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'12 | \t\tassert(s4.x == s1.x || s4.x == s2.x);\n'[39m +
        [32m'   | \t\t^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m'  --> test:15:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'15 | \t\tassert(s1.x == 44 || s2.x == 44);\n'[39m +
        [32m'   | \t\t^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### Running /home/solc-js/regression/types/struct/struct_recursive_5.sol ...
### ... with solver Eldarica Vanilla
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'8364'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet implement type struct C.S storage ref\n'[39m +
        [32m' --> test:9:3:\n'[39m +
        [32m'  |\n'[39m +
        [32m'9 | \t\tsa.push();\n'[39m +
        [32m'  | \t\t^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet implement type struct C.S storage ref'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'8364'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet implement type struct C.S storage ref\n'[39m +
        [32m'  --> test:11:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'11 | \t\tsa2[0].push();\n'[39m +
        [32m'   | \t\t^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet implement type struct C.S storage ref'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'7650'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet support this expression.\n'[39m +
        [32m'  --> test:12:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'12 | \t\tsa2[0][0].a.push();\n'[39m +
        [32m'   | \t\t^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet support this expression.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'8364'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet implement type struct C.S storage ref\n'[39m +
        [32m'  --> test:12:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'12 | \t\tsa2[0][0].a.push();\n'[39m +
        [32m'   | \t\t^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet implement type struct C.S storage ref'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'8364'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet implement type struct C.S storage ref\n'[39m +
        [32m'  --> test:12:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'12 | \t\tsa2[0][0].a.push();\n'[39m +
        [32m'   | \t\t^^^^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet implement type struct C.S storage ref'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'4375'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not support recursive structs.\n'[39m +
        [32m'  --> test:12:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'12 | \t\tsa2[0][0].a.push();\n'[39m +
        [32m'   | \t\t^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not support recursive structs.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'7650'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet support this expression.\n'[39m +
        [32m'  --> test:13:10:\n'[39m +
        [32m'   |\n'[39m +
        [32m'13 | \t\tassert(sa2[0][0].a.length == sa[0].a.length);\n'[39m +
        [32m'   | \t\t       ^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet support this expression.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'8364'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet implement type struct C.S storage ref\n'[39m +
        [32m'  --> test:13:10:\n'[39m +
        [32m'   |\n'[39m +
        [32m'13 | \t\tassert(sa2[0][0].a.length == sa[0].a.length);\n'[39m +
        [32m'   | \t\t       ^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet implement type struct C.S storage ref'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'7650'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet support this expression.\n'[39m +
        [32m'  --> test:13:32:\n'[39m +
        [32m'   |\n'[39m +
        [32m'13 | \t\tassert(sa2[0][0].a.length == sa[0].a.length);\n'[39m +
        [32m'   | \t\t                             ^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet support this expression.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'8364'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet implement type struct C.S storage ref\n'[39m +
        [32m'  --> test:13:32:\n'[39m +
        [32m'   |\n'[39m +
        [32m'13 | \t\tassert(sa2[0][0].a.length == sa[0].a.length);\n'[39m +
        [32m'   | \t\t                             ^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet implement type struct C.S storage ref'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m'  --> test:13:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'13 | \t\tassert(sa2[0][0].a.length == sa[0].a.length);\n'[39m +
        [32m'   | \t\t^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### ... with solver Spacer Quant
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'8364'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet implement type struct C.S storage ref\n'[39m +
        [32m' --> test:9:3:\n'[39m +
        [32m'  |\n'[39m +
        [32m'9 | \t\tsa.push();\n'[39m +
        [32m'  | \t\t^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet implement type struct C.S storage ref'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'8364'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet implement type struct C.S storage ref\n'[39m +
        [32m'  --> test:11:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'11 | \t\tsa2[0].push();\n'[39m +
        [32m'   | \t\t^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet implement type struct C.S storage ref'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'7650'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet support this expression.\n'[39m +
        [32m'  --> test:12:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'12 | \t\tsa2[0][0].a.push();\n'[39m +
        [32m'   | \t\t^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet support this expression.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'8364'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet implement type struct C.S storage ref\n'[39m +
        [32m'  --> test:12:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'12 | \t\tsa2[0][0].a.push();\n'[39m +
        [32m'   | \t\t^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet implement type struct C.S storage ref'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'8364'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet implement type struct C.S storage ref\n'[39m +
        [32m'  --> test:12:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'12 | \t\tsa2[0][0].a.push();\n'[39m +
        [32m'   | \t\t^^^^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet implement type struct C.S storage ref'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'4375'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not support recursive structs.\n'[39m +
        [32m'  --> test:12:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'12 | \t\tsa2[0][0].a.push();\n'[39m +
        [32m'   | \t\t^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not support recursive structs.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'7650'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet support this expression.\n'[39m +
        [32m'  --> test:13:10:\n'[39m +
        [32m'   |\n'[39m +
        [32m'13 | \t\tassert(sa2[0][0].a.length == sa[0].a.length);\n'[39m +
        [32m'   | \t\t       ^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet support this expression.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'8364'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet implement type struct C.S storage ref\n'[39m +
        [32m'  --> test:13:10:\n'[39m +
        [32m'   |\n'[39m +
        [32m'13 | \t\tassert(sa2[0][0].a.length == sa[0].a.length);\n'[39m +
        [32m'   | \t\t       ^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet implement type struct C.S storage ref'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'7650'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet support this expression.\n'[39m +
        [32m'  --> test:13:32:\n'[39m +
        [32m'   |\n'[39m +
        [32m'13 | \t\tassert(sa2[0][0].a.length == sa[0].a.length);\n'[39m +
        [32m'   | \t\t                             ^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet support this expression.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'8364'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet implement type struct C.S storage ref\n'[39m +
        [32m'  --> test:13:32:\n'[39m +
        [32m'   |\n'[39m +
        [32m'13 | \t\tassert(sa2[0][0].a.length == sa[0].a.length);\n'[39m +
        [32m'   | \t\t                             ^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet implement type struct C.S storage ref'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m'  --> test:13:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'13 | \t\tassert(sa2[0][0].a.length == sa[0].a.length);\n'[39m +
        [32m'   | \t\t^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### Running /home/solc-js/regression/types/struct/struct_recursive_6.sol ...
### ... with solver Eldarica Vanilla
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'8115'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet support the type of this variable.\n'[39m +
        [32m' --> test:6:2:\n'[39m +
        [32m'  |\n'[39m +
        [32m'6 | \tS s1;\n'[39m +
        [32m'  | \t^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet support the type of this variable.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'8115'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet support the type of this variable.\n'[39m +
        [32m' --> test:7:2:\n'[39m +
        [32m'  |\n'[39m +
        [32m'7 | \tS s2;\n'[39m +
        [32m'  | \t^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet support the type of this variable.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'7650'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet support this expression.\n'[39m +
        [32m' --> test:9:3:\n'[39m +
        [32m'  |\n'[39m +
        [32m'9 | \t\ts1.x = 10;\n'[39m +
        [32m'  | \t\t^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet support this expression.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'8364'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet implement type struct C.S storage ref\n'[39m +
        [32m' --> test:9:3:\n'[39m +
        [32m'  |\n'[39m +
        [32m'9 | \t\ts1.x = 10;\n'[39m +
        [32m'  | \t\t^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet implement type struct C.S storage ref'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'4375'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not support recursive structs.\n'[39m +
        [32m' --> test:9:3:\n'[39m +
        [32m'  |\n'[39m +
        [32m'9 | \t\ts1.x = 10;\n'[39m +
        [32m'  | \t\t^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not support recursive structs.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'7650'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet support this expression.\n'[39m +
        [32m'  --> test:10:5:\n'[39m +
        [32m'   |\n'[39m +
        [32m'10 | \t\t++s1.x;\n'[39m +
        [32m'   | \t\t  ^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet support this expression.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'8364'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet implement type struct C.S storage ref\n'[39m +
        [32m'  --> test:10:5:\n'[39m +
        [32m'   |\n'[39m +
        [32m'10 | \t\t++s1.x;\n'[39m +
        [32m'   | \t\t  ^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet implement type struct C.S storage ref'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'4375'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not support recursive structs.\n'[39m +
        [32m'  --> test:10:5:\n'[39m +
        [32m'   |\n'[39m +
        [32m'10 | \t\t++s1.x;\n'[39m +
        [32m'   | \t\t  ^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not support recursive structs.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'7650'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet support this expression.\n'[39m +
        [32m'  --> test:11:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'11 | \t\ts1.x++;\n'[39m +
        [32m'   | \t\t^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet support this expression.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'8364'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet implement type struct C.S storage ref\n'[39m +
        [32m'  --> test:11:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'11 | \t\ts1.x++;\n'[39m +
        [32m'   | \t\t^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet implement type struct C.S storage ref'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'4375'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not support recursive structs.\n'[39m +
        [32m'  --> test:11:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'11 | \t\ts1.x++;\n'[39m +
        [32m'   | \t\t^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not support recursive structs.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'7650'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet support this expression.\n'[39m +
        [32m'  --> test:12:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'12 | \t\ts2.x = 20;\n'[39m +
        [32m'   | \t\t^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet support this expression.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'8364'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet implement type struct C.S storage ref\n'[39m +
        [32m'  --> test:12:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'12 | \t\ts2.x = 20;\n'[39m +
        [32m'   | \t\t^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet implement type struct C.S storage ref'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'4375'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not support recursive structs.\n'[39m +
        [32m'  --> test:12:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'12 | \t\ts2.x = 20;\n'[39m +
        [32m'   | \t\t^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not support recursive structs.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'7650'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet support this expression.\n'[39m +
        [32m'  --> test:13:5:\n'[39m +
        [32m'   |\n'[39m +
        [32m'13 | \t\t--s2.x;\n'[39m +
        [32m'   | \t\t  ^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet support this expression.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'8364'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet implement type struct C.S storage ref\n'[39m +
        [32m'  --> test:13:5:\n'[39m +
        [32m'   |\n'[39m +
        [32m'13 | \t\t--s2.x;\n'[39m +
        [32m'   | \t\t  ^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet implement type struct C.S storage ref'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'4375'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not support recursive structs.\n'[39m +
        [32m'  --> test:13:5:\n'[39m +
        [32m'   |\n'[39m +
        [32m'13 | \t\t--s2.x;\n'[39m +
        [32m'   | \t\t  ^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not support recursive structs.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'7650'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet support this expression.\n'[39m +
        [32m'  --> test:14:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'14 | \t\ts2.x--;\n'[39m +
        [32m'   | \t\t^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet support this expression.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'8364'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet implement type struct C.S storage ref\n'[39m +
        [32m'  --> test:14:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'14 | \t\ts2.x--;\n'[39m +
        [32m'   | \t\t^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet implement type struct C.S storage ref'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'4375'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not support recursive structs.\n'[39m +
        [32m'  --> test:14:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'14 | \t\ts2.x--;\n'[39m +
        [32m'   | \t\t^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not support recursive structs.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'7650'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet support this expression.\n'[39m +
        [32m'  --> test:15:10:\n'[39m +
        [32m'   |\n'[39m +
        [32m'15 | \t\tassert(s1.x == s2.x + 6);\n'[39m +
        [32m'   | \t\t       ^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet support this expression.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'8364'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet implement type struct C.S storage ref\n'[39m +
        [32m'  --> test:15:10:\n'[39m +
        [32m'   |\n'[39m +
        [32m'15 | \t\tassert(s1.x == s2.x + 6);\n'[39m +
        [32m'   | \t\t       ^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet implement type struct C.S storage ref'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'7650'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet support this expression.\n'[39m +
        [32m'  --> test:15:18:\n'[39m +
        [32m'   |\n'[39m +
        [32m'15 | \t\tassert(s1.x == s2.x + 6);\n'[39m +
        [32m'   | \t\t               ^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet support this expression.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'8364'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet implement type struct C.S storage ref\n'[39m +
        [32m'  --> test:15:18:\n'[39m +
        [32m'   |\n'[39m +
        [32m'15 | \t\tassert(s1.x == s2.x + 6);\n'[39m +
        [32m'   | \t\t               ^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet implement type struct C.S storage ref'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'7650'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet support this expression.\n'[39m +
        [32m'  --> test:16:10:\n'[39m +
        [32m'   |\n'[39m +
        [32m'16 | \t\tassert(s1.a.length == s2.a.length);\n'[39m +
        [32m'   | \t\t       ^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet support this expression.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'8364'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet implement type struct C.S storage ref\n'[39m +
        [32m'  --> test:16:10:\n'[39m +
        [32m'   |\n'[39m +
        [32m'16 | \t\tassert(s1.a.length == s2.a.length);\n'[39m +
        [32m'   | \t\t       ^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet implement type struct C.S storage ref'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'7650'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet support this expression.\n'[39m +
        [32m'  --> test:16:25:\n'[39m +
        [32m'   |\n'[39m +
        [32m'16 | \t\tassert(s1.a.length == s2.a.length);\n'[39m +
        [32m'   | \t\t                      ^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet support this expression.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'8364'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet implement type struct C.S storage ref\n'[39m +
        [32m'  --> test:16:25:\n'[39m +
        [32m'   |\n'[39m +
        [32m'16 | \t\tassert(s1.a.length == s2.a.length);\n'[39m +
        [32m'   | \t\t                      ^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet implement type struct C.S storage ref'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'8364'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet implement type struct C.S storage ref\n'[39m +
        [32m'  --> test:17:10:\n'[39m +
        [32m'   |\n'[39m +
        [32m'17 | \t\tdelete s1;\n'[39m +
        [32m'   | \t\t       ^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet implement type struct C.S storage ref'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'7650'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet support this expression.\n'[39m +
        [32m'  --> test:18:10:\n'[39m +
        [32m'   |\n'[39m +
        [32m'18 | \t\tassert(s1.x == 0);\n'[39m +
        [32m'   | \t\t       ^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet support this expression.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'8364'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet implement type struct C.S storage ref\n'[39m +
        [32m'  --> test:18:10:\n'[39m +
        [32m'   |\n'[39m +
        [32m'18 | \t\tassert(s1.x == 0);\n'[39m +
        [32m'   | \t\t       ^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet implement type struct C.S storage ref'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m'  --> test:15:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'15 | \t\tassert(s1.x == s2.x + 6);\n'[39m +
        [32m'   | \t\t^^^^^^^^^^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m'  --> test:16:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'16 | \t\tassert(s1.a.length == s2.a.length);\n'[39m +
        [32m'   | \t\t^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m'  --> test:18:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'18 | \t\tassert(s1.x == 0);\n'[39m +
        [32m'   | \t\t^^^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### ... with solver Spacer Quant
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'8115'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet support the type of this variable.\n'[39m +
        [32m' --> test:6:2:\n'[39m +
        [32m'  |\n'[39m +
        [32m'6 | \tS s1;\n'[39m +
        [32m'  | \t^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet support the type of this variable.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'8115'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet support the type of this variable.\n'[39m +
        [32m' --> test:7:2:\n'[39m +
        [32m'  |\n'[39m +
        [32m'7 | \tS s2;\n'[39m +
        [32m'  | \t^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet support the type of this variable.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'7650'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet support this expression.\n'[39m +
        [32m' --> test:9:3:\n'[39m +
        [32m'  |\n'[39m +
        [32m'9 | \t\ts1.x = 10;\n'[39m +
        [32m'  | \t\t^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet support this expression.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'8364'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet implement type struct C.S storage ref\n'[39m +
        [32m' --> test:9:3:\n'[39m +
        [32m'  |\n'[39m +
        [32m'9 | \t\ts1.x = 10;\n'[39m +
        [32m'  | \t\t^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet implement type struct C.S storage ref'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'4375'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not support recursive structs.\n'[39m +
        [32m' --> test:9:3:\n'[39m +
        [32m'  |\n'[39m +
        [32m'9 | \t\ts1.x = 10;\n'[39m +
        [32m'  | \t\t^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not support recursive structs.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'7650'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet support this expression.\n'[39m +
        [32m'  --> test:10:5:\n'[39m +
        [32m'   |\n'[39m +
        [32m'10 | \t\t++s1.x;\n'[39m +
        [32m'   | \t\t  ^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet support this expression.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'8364'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet implement type struct C.S storage ref\n'[39m +
        [32m'  --> test:10:5:\n'[39m +
        [32m'   |\n'[39m +
        [32m'10 | \t\t++s1.x;\n'[39m +
        [32m'   | \t\t  ^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet implement type struct C.S storage ref'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'4375'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not support recursive structs.\n'[39m +
        [32m'  --> test:10:5:\n'[39m +
        [32m'   |\n'[39m +
        [32m'10 | \t\t++s1.x;\n'[39m +
        [32m'   | \t\t  ^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not support recursive structs.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'7650'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet support this expression.\n'[39m +
        [32m'  --> test:11:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'11 | \t\ts1.x++;\n'[39m +
        [32m'   | \t\t^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet support this expression.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'8364'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet implement type struct C.S storage ref\n'[39m +
        [32m'  --> test:11:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'11 | \t\ts1.x++;\n'[39m +
        [32m'   | \t\t^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet implement type struct C.S storage ref'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'4375'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not support recursive structs.\n'[39m +
        [32m'  --> test:11:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'11 | \t\ts1.x++;\n'[39m +
        [32m'   | \t\t^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not support recursive structs.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'7650'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet support this expression.\n'[39m +
        [32m'  --> test:12:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'12 | \t\ts2.x = 20;\n'[39m +
        [32m'   | \t\t^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet support this expression.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'8364'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet implement type struct C.S storage ref\n'[39m +
        [32m'  --> test:12:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'12 | \t\ts2.x = 20;\n'[39m +
        [32m'   | \t\t^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet implement type struct C.S storage ref'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'4375'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not support recursive structs.\n'[39m +
        [32m'  --> test:12:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'12 | \t\ts2.x = 20;\n'[39m +
        [32m'   | \t\t^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not support recursive structs.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'7650'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet support this expression.\n'[39m +
        [32m'  --> test:13:5:\n'[39m +
        [32m'   |\n'[39m +
        [32m'13 | \t\t--s2.x;\n'[39m +
        [32m'   | \t\t  ^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet support this expression.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'8364'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet implement type struct C.S storage ref\n'[39m +
        [32m'  --> test:13:5:\n'[39m +
        [32m'   |\n'[39m +
        [32m'13 | \t\t--s2.x;\n'[39m +
        [32m'   | \t\t  ^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet implement type struct C.S storage ref'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'4375'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not support recursive structs.\n'[39m +
        [32m'  --> test:13:5:\n'[39m +
        [32m'   |\n'[39m +
        [32m'13 | \t\t--s2.x;\n'[39m +
        [32m'   | \t\t  ^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not support recursive structs.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'7650'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet support this expression.\n'[39m +
        [32m'  --> test:14:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'14 | \t\ts2.x--;\n'[39m +
        [32m'   | \t\t^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet support this expression.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'8364'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet implement type struct C.S storage ref\n'[39m +
        [32m'  --> test:14:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'14 | \t\ts2.x--;\n'[39m +
        [32m'   | \t\t^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet implement type struct C.S storage ref'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'4375'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not support recursive structs.\n'[39m +
        [32m'  --> test:14:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'14 | \t\ts2.x--;\n'[39m +
        [32m'   | \t\t^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not support recursive structs.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'7650'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet support this expression.\n'[39m +
        [32m'  --> test:15:10:\n'[39m +
        [32m'   |\n'[39m +
        [32m'15 | \t\tassert(s1.x == s2.x + 6);\n'[39m +
        [32m'   | \t\t       ^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet support this expression.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'8364'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet implement type struct C.S storage ref\n'[39m +
        [32m'  --> test:15:10:\n'[39m +
        [32m'   |\n'[39m +
        [32m'15 | \t\tassert(s1.x == s2.x + 6);\n'[39m +
        [32m'   | \t\t       ^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet implement type struct C.S storage ref'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'7650'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet support this expression.\n'[39m +
        [32m'  --> test:15:18:\n'[39m +
        [32m'   |\n'[39m +
        [32m'15 | \t\tassert(s1.x == s2.x + 6);\n'[39m +
        [32m'   | \t\t               ^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet support this expression.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'8364'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet implement type struct C.S storage ref\n'[39m +
        [32m'  --> test:15:18:\n'[39m +
        [32m'   |\n'[39m +
        [32m'15 | \t\tassert(s1.x == s2.x + 6);\n'[39m +
        [32m'   | \t\t               ^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet implement type struct C.S storage ref'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'7650'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet support this expression.\n'[39m +
        [32m'  --> test:16:10:\n'[39m +
        [32m'   |\n'[39m +
        [32m'16 | \t\tassert(s1.a.length == s2.a.length);\n'[39m +
        [32m'   | \t\t       ^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet support this expression.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'8364'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet implement type struct C.S storage ref\n'[39m +
        [32m'  --> test:16:10:\n'[39m +
        [32m'   |\n'[39m +
        [32m'16 | \t\tassert(s1.a.length == s2.a.length);\n'[39m +
        [32m'   | \t\t       ^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet implement type struct C.S storage ref'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'7650'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet support this expression.\n'[39m +
        [32m'  --> test:16:25:\n'[39m +
        [32m'   |\n'[39m +
        [32m'16 | \t\tassert(s1.a.length == s2.a.length);\n'[39m +
        [32m'   | \t\t                      ^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet support this expression.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'8364'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet implement type struct C.S storage ref\n'[39m +
        [32m'  --> test:16:25:\n'[39m +
        [32m'   |\n'[39m +
        [32m'16 | \t\tassert(s1.a.length == s2.a.length);\n'[39m +
        [32m'   | \t\t                      ^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet implement type struct C.S storage ref'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'8364'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet implement type struct C.S storage ref\n'[39m +
        [32m'  --> test:17:10:\n'[39m +
        [32m'   |\n'[39m +
        [32m'17 | \t\tdelete s1;\n'[39m +
        [32m'   | \t\t       ^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet implement type struct C.S storage ref'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'7650'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet support this expression.\n'[39m +
        [32m'  --> test:18:10:\n'[39m +
        [32m'   |\n'[39m +
        [32m'18 | \t\tassert(s1.x == 0);\n'[39m +
        [32m'   | \t\t       ^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet support this expression.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'8364'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet implement type struct C.S storage ref\n'[39m +
        [32m'  --> test:18:10:\n'[39m +
        [32m'   |\n'[39m +
        [32m'18 | \t\tassert(s1.x == 0);\n'[39m +
        [32m'   | \t\t       ^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet implement type struct C.S storage ref'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m'  --> test:15:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'15 | \t\tassert(s1.x == s2.x + 6);\n'[39m +
        [32m'   | \t\t^^^^^^^^^^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m'  --> test:16:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'16 | \t\tassert(s1.a.length == s2.a.length);\n'[39m +
        [32m'   | \t\t^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m'  --> test:18:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'18 | \t\tassert(s1.x == 0);\n'[39m +
        [32m'   | \t\t^^^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### Running /home/solc-js/regression/types/struct/struct_recursive_indirect_1.sol ...
### ... with solver Eldarica Vanilla
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'8115'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet support the type of this variable.\n'[39m +
        [32m'  --> test:10:2:\n'[39m +
        [32m'   |\n'[39m +
        [32m'10 | \tS s1;\n'[39m +
        [32m'   | \t^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet support the type of this variable.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'8115'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet support the type of this variable.\n'[39m +
        [32m'  --> test:11:2:\n'[39m +
        [32m'   |\n'[39m +
        [32m'11 | \tS s2;\n'[39m +
        [32m'   | \t^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet support the type of this variable.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'7650'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet support this expression.\n'[39m +
        [32m'  --> test:13:10:\n'[39m +
        [32m'   |\n'[39m +
        [32m'13 | \t\tassert(s1.x == s2.x);\n'[39m +
        [32m'   | \t\t       ^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet support this expression.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'8364'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet implement type struct C.S storage ref\n'[39m +
        [32m'  --> test:13:10:\n'[39m +
        [32m'   |\n'[39m +
        [32m'13 | \t\tassert(s1.x == s2.x);\n'[39m +
        [32m'   | \t\t       ^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet implement type struct C.S storage ref'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'7650'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet support this expression.\n'[39m +
        [32m'  --> test:13:18:\n'[39m +
        [32m'   |\n'[39m +
        [32m'13 | \t\tassert(s1.x == s2.x);\n'[39m +
        [32m'   | \t\t               ^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet support this expression.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'8364'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet implement type struct C.S storage ref\n'[39m +
        [32m'  --> test:13:18:\n'[39m +
        [32m'   |\n'[39m +
        [32m'13 | \t\tassert(s1.x == s2.x);\n'[39m +
        [32m'   | \t\t               ^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet implement type struct C.S storage ref'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'7650'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet support this expression.\n'[39m +
        [32m'  --> test:14:10:\n'[39m +
        [32m'   |\n'[39m +
        [32m'14 | \t\tassert(s1.a.length == s2.a.length);\n'[39m +
        [32m'   | \t\t       ^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet support this expression.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'8364'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet implement type struct C.S storage ref\n'[39m +
        [32m'  --> test:14:10:\n'[39m +
        [32m'   |\n'[39m +
        [32m'14 | \t\tassert(s1.a.length == s2.a.length);\n'[39m +
        [32m'   | \t\t       ^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet implement type struct C.S storage ref'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'7650'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet support this expression.\n'[39m +
        [32m'  --> test:14:25:\n'[39m +
        [32m'   |\n'[39m +
        [32m'14 | \t\tassert(s1.a.length == s2.a.length);\n'[39m +
        [32m'   | \t\t                      ^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet support this expression.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'8364'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet implement type struct C.S storage ref\n'[39m +
        [32m'  --> test:14:25:\n'[39m +
        [32m'   |\n'[39m +
        [32m'14 | \t\tassert(s1.a.length == s2.a.length);\n'[39m +
        [32m'   | \t\t                      ^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet implement type struct C.S storage ref'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m'  --> test:13:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'13 | \t\tassert(s1.x == s2.x);\n'[39m +
        [32m'   | \t\t^^^^^^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m'  --> test:14:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'14 | \t\tassert(s1.a.length == s2.a.length);\n'[39m +
        [32m'   | \t\t^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### ... with solver Spacer Quant
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'8115'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet support the type of this variable.\n'[39m +
        [32m'  --> test:10:2:\n'[39m +
        [32m'   |\n'[39m +
        [32m'10 | \tS s1;\n'[39m +
        [32m'   | \t^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet support the type of this variable.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'8115'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet support the type of this variable.\n'[39m +
        [32m'  --> test:11:2:\n'[39m +
        [32m'   |\n'[39m +
        [32m'11 | \tS s2;\n'[39m +
        [32m'   | \t^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet support the type of this variable.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'7650'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet support this expression.\n'[39m +
        [32m'  --> test:13:10:\n'[39m +
        [32m'   |\n'[39m +
        [32m'13 | \t\tassert(s1.x == s2.x);\n'[39m +
        [32m'   | \t\t       ^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet support this expression.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'8364'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet implement type struct C.S storage ref\n'[39m +
        [32m'  --> test:13:10:\n'[39m +
        [32m'   |\n'[39m +
        [32m'13 | \t\tassert(s1.x == s2.x);\n'[39m +
        [32m'   | \t\t       ^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet implement type struct C.S storage ref'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'7650'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet support this expression.\n'[39m +
        [32m'  --> test:13:18:\n'[39m +
        [32m'   |\n'[39m +
        [32m'13 | \t\tassert(s1.x == s2.x);\n'[39m +
        [32m'   | \t\t               ^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet support this expression.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'8364'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet implement type struct C.S storage ref\n'[39m +
        [32m'  --> test:13:18:\n'[39m +
        [32m'   |\n'[39m +
        [32m'13 | \t\tassert(s1.x == s2.x);\n'[39m +
        [32m'   | \t\t               ^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet implement type struct C.S storage ref'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'7650'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet support this expression.\n'[39m +
        [32m'  --> test:14:10:\n'[39m +
        [32m'   |\n'[39m +
        [32m'14 | \t\tassert(s1.a.length == s2.a.length);\n'[39m +
        [32m'   | \t\t       ^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet support this expression.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'8364'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet implement type struct C.S storage ref\n'[39m +
        [32m'  --> test:14:10:\n'[39m +
        [32m'   |\n'[39m +
        [32m'14 | \t\tassert(s1.a.length == s2.a.length);\n'[39m +
        [32m'   | \t\t       ^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet implement type struct C.S storage ref'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'7650'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet support this expression.\n'[39m +
        [32m'  --> test:14:25:\n'[39m +
        [32m'   |\n'[39m +
        [32m'14 | \t\tassert(s1.a.length == s2.a.length);\n'[39m +
        [32m'   | \t\t                      ^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet support this expression.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'8364'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet implement type struct C.S storage ref\n'[39m +
        [32m'  --> test:14:25:\n'[39m +
        [32m'   |\n'[39m +
        [32m'14 | \t\tassert(s1.a.length == s2.a.length);\n'[39m +
        [32m'   | \t\t                      ^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet implement type struct C.S storage ref'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m'  --> test:13:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'13 | \t\tassert(s1.x == s2.x);\n'[39m +
        [32m'   | \t\t^^^^^^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m'  --> test:14:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'14 | \t\tassert(s1.a.length == s2.a.length);\n'[39m +
        [32m'   | \t\t^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### Running /home/solc-js/regression/types/struct/struct_recursive_indirect_2.sol ...
### ... with solver Eldarica Vanilla
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'8115'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet support the type of this variable.\n'[39m +
        [32m'  --> test:10:2:\n'[39m +
        [32m'   |\n'[39m +
        [32m'10 | \tS s1;\n'[39m +
        [32m'   | \t^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet support the type of this variable.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'8115'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet support the type of this variable.\n'[39m +
        [32m'  --> test:11:2:\n'[39m +
        [32m'   |\n'[39m +
        [32m'11 | \tS s2;\n'[39m +
        [32m'   | \t^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet support the type of this variable.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'7650'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet support this expression.\n'[39m +
        [32m'  --> test:13:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'13 | \t\ts1.a.push();\n'[39m +
        [32m'   | \t\t^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet support this expression.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'8364'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet implement type struct C.S storage ref\n'[39m +
        [32m'  --> test:13:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'13 | \t\ts1.a.push();\n'[39m +
        [32m'   | \t\t^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet implement type struct C.S storage ref'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'8364'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet implement type struct C.T storage ref\n'[39m +
        [32m'  --> test:13:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'13 | \t\ts1.a.push();\n'[39m +
        [32m'   | \t\t^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet implement type struct C.T storage ref'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'4375'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not support recursive structs.\n'[39m +
        [32m'  --> test:13:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'13 | \t\ts1.a.push();\n'[39m +
        [32m'   | \t\t^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not support recursive structs.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'7650'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet support this expression.\n'[39m +
        [32m'  --> test:14:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'14 | \t\ts2.a.push();\n'[39m +
        [32m'   | \t\t^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet support this expression.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'8364'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet implement type struct C.S storage ref\n'[39m +
        [32m'  --> test:14:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'14 | \t\ts2.a.push();\n'[39m +
        [32m'   | \t\t^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet implement type struct C.S storage ref'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'8364'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet implement type struct C.T storage ref\n'[39m +
        [32m'  --> test:14:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'14 | \t\ts2.a.push();\n'[39m +
        [32m'   | \t\t^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet implement type struct C.T storage ref'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'4375'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not support recursive structs.\n'[39m +
        [32m'  --> test:14:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'14 | \t\ts2.a.push();\n'[39m +
        [32m'   | \t\t^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not support recursive structs.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'7650'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet support this expression.\n'[39m +
        [32m'  --> test:15:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'15 | \t\ts1.a[0].a.push();\n'[39m +
        [32m'   | \t\t^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet support this expression.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'7650'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet support this expression.\n'[39m +
        [32m'  --> test:15:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'15 | \t\ts1.a[0].a.push();\n'[39m +
        [32m'   | \t\t^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet support this expression.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'8364'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet implement type struct C.S storage ref\n'[39m +
        [32m'  --> test:15:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'15 | \t\ts1.a[0].a.push();\n'[39m +
        [32m'   | \t\t^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet implement type struct C.S storage ref'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'8364'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet implement type struct C.T storage ref\n'[39m +
        [32m'  --> test:15:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'15 | \t\ts1.a[0].a.push();\n'[39m +
        [32m'   | \t\t^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet implement type struct C.T storage ref'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'8364'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet implement type struct C.S storage ref\n'[39m +
        [32m'  --> test:15:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'15 | \t\ts1.a[0].a.push();\n'[39m +
        [32m'   | \t\t^^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet implement type struct C.S storage ref'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'4375'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not support recursive structs.\n'[39m +
        [32m'  --> test:15:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'15 | \t\ts1.a[0].a.push();\n'[39m +
        [32m'   | \t\t^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not support recursive structs.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'7650'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet support this expression.\n'[39m +
        [32m'  --> test:16:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'16 | \t\ts2.a[0].a.push();\n'[39m +
        [32m'   | \t\t^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet support this expression.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'7650'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet support this expression.\n'[39m +
        [32m'  --> test:16:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'16 | \t\ts2.a[0].a.push();\n'[39m +
        [32m'   | \t\t^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet support this expression.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'8364'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet implement type struct C.S storage ref\n'[39m +
        [32m'  --> test:16:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'16 | \t\ts2.a[0].a.push();\n'[39m +
        [32m'   | \t\t^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet implement type struct C.S storage ref'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'8364'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet implement type struct C.T storage ref\n'[39m +
        [32m'  --> test:16:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'16 | \t\ts2.a[0].a.push();\n'[39m +
        [32m'   | \t\t^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet implement type struct C.T storage ref'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'8364'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet implement type struct C.S storage ref\n'[39m +
        [32m'  --> test:16:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'16 | \t\ts2.a[0].a.push();\n'[39m +
        [32m'   | \t\t^^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet implement type struct C.S storage ref'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'4375'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not support recursive structs.\n'[39m +
        [32m'  --> test:16:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'16 | \t\ts2.a[0].a.push();\n'[39m +
        [32m'   | \t\t^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not support recursive structs.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'7650'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet support this expression.\n'[39m +
        [32m'  --> test:17:10:\n'[39m +
        [32m'   |\n'[39m +
        [32m'17 | \t\tassert(s1.a[0].a[0].x == s2.a[0].a[0].x);\n'[39m +
        [32m'   | \t\t       ^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet support this expression.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'7650'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet support this expression.\n'[39m +
        [32m'  --> test:17:10:\n'[39m +
        [32m'   |\n'[39m +
        [32m'17 | \t\tassert(s1.a[0].a[0].x == s2.a[0].a[0].x);\n'[39m +
        [32m'   | \t\t       ^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet support this expression.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'7650'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet support this expression.\n'[39m +
        [32m'  --> test:17:10:\n'[39m +
        [32m'   |\n'[39m +
        [32m'17 | \t\tassert(s1.a[0].a[0].x == s2.a[0].a[0].x);\n'[39m +
        [32m'   | \t\t       ^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet support this expression.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'8364'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet implement type struct C.S storage ref\n'[39m +
        [32m'  --> test:17:10:\n'[39m +
        [32m'   |\n'[39m +
        [32m'17 | \t\tassert(s1.a[0].a[0].x == s2.a[0].a[0].x);\n'[39m +
        [32m'   | \t\t       ^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet implement type struct C.S storage ref'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'8364'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet implement type struct C.T storage ref\n'[39m +
        [32m'  --> test:17:10:\n'[39m +
        [32m'   |\n'[39m +
        [32m'17 | \t\tassert(s1.a[0].a[0].x == s2.a[0].a[0].x);\n'[39m +
        [32m'   | \t\t       ^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet implement type struct C.T storage ref'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'8364'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet implement type struct C.S storage ref\n'[39m +
        [32m'  --> test:17:10:\n'[39m +
        [32m'   |\n'[39m +
        [32m'17 | \t\tassert(s1.a[0].a[0].x == s2.a[0].a[0].x);\n'[39m +
        [32m'   | \t\t       ^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet implement type struct C.S storage ref'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'7650'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet support this expression.\n'[39m +
        [32m'  --> test:17:28:\n'[39m +
        [32m'   |\n'[39m +
        [32m'17 | \t\tassert(s1.a[0].a[0].x == s2.a[0].a[0].x);\n'[39m +
        [32m'   | \t\t                         ^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet support this expression.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'7650'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet support this expression.\n'[39m +
        [32m'  --> test:17:28:\n'[39m +
        [32m'   |\n'[39m +
        [32m'17 | \t\tassert(s1.a[0].a[0].x == s2.a[0].a[0].x);\n'[39m +
        [32m'   | \t\t                         ^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet support this expression.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'7650'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet support this expression.\n'[39m +
        [32m'  --> test:17:28:\n'[39m +
        [32m'   |\n'[39m +
        [32m'17 | \t\tassert(s1.a[0].a[0].x == s2.a[0].a[0].x);\n'[39m +
        [32m'   | \t\t                         ^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet support this expression.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'8364'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet implement type struct C.S storage ref\n'[39m +
        [32m'  --> test:17:28:\n'[39m +
        [32m'   |\n'[39m +
        [32m'17 | \t\tassert(s1.a[0].a[0].x == s2.a[0].a[0].x);\n'[39m +
        [32m'   | \t\t                         ^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet implement type struct C.S storage ref'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'8364'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet implement type struct C.T storage ref\n'[39m +
        [32m'  --> test:17:28:\n'[39m +
        [32m'   |\n'[39m +
        [32m'17 | \t\tassert(s1.a[0].a[0].x == s2.a[0].a[0].x);\n'[39m +
        [32m'   | \t\t                         ^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet implement type struct C.T storage ref'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'8364'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet implement type struct C.S storage ref\n'[39m +
        [32m'  --> test:17:28:\n'[39m +
        [32m'   |\n'[39m +
        [32m'17 | \t\tassert(s1.a[0].a[0].x == s2.a[0].a[0].x);\n'[39m +
        [32m'   | \t\t                         ^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet implement type struct C.S storage ref'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m'  --> test:17:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'17 | \t\tassert(s1.a[0].a[0].x == s2.a[0].a[0].x);\n'[39m +
        [32m'   | \t\t^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### ... with solver Spacer Quant
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'8115'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet support the type of this variable.\n'[39m +
        [32m'  --> test:10:2:\n'[39m +
        [32m'   |\n'[39m +
        [32m'10 | \tS s1;\n'[39m +
        [32m'   | \t^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet support the type of this variable.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'8115'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet support the type of this variable.\n'[39m +
        [32m'  --> test:11:2:\n'[39m +
        [32m'   |\n'[39m +
        [32m'11 | \tS s2;\n'[39m +
        [32m'   | \t^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet support the type of this variable.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'7650'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet support this expression.\n'[39m +
        [32m'  --> test:13:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'13 | \t\ts1.a.push();\n'[39m +
        [32m'   | \t\t^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet support this expression.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'8364'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet implement type struct C.S storage ref\n'[39m +
        [32m'  --> test:13:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'13 | \t\ts1.a.push();\n'[39m +
        [32m'   | \t\t^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet implement type struct C.S storage ref'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'8364'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet implement type struct C.T storage ref\n'[39m +
        [32m'  --> test:13:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'13 | \t\ts1.a.push();\n'[39m +
        [32m'   | \t\t^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet implement type struct C.T storage ref'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'4375'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not support recursive structs.\n'[39m +
        [32m'  --> test:13:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'13 | \t\ts1.a.push();\n'[39m +
        [32m'   | \t\t^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not support recursive structs.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'7650'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet support this expression.\n'[39m +
        [32m'  --> test:14:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'14 | \t\ts2.a.push();\n'[39m +
        [32m'   | \t\t^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet support this expression.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'8364'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet implement type struct C.S storage ref\n'[39m +
        [32m'  --> test:14:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'14 | \t\ts2.a.push();\n'[39m +
        [32m'   | \t\t^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet implement type struct C.S storage ref'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'8364'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet implement type struct C.T storage ref\n'[39m +
        [32m'  --> test:14:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'14 | \t\ts2.a.push();\n'[39m +
        [32m'   | \t\t^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet implement type struct C.T storage ref'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'4375'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not support recursive structs.\n'[39m +
        [32m'  --> test:14:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'14 | \t\ts2.a.push();\n'[39m +
        [32m'   | \t\t^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not support recursive structs.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'7650'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet support this expression.\n'[39m +
        [32m'  --> test:15:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'15 | \t\ts1.a[0].a.push();\n'[39m +
        [32m'   | \t\t^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet support this expression.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'7650'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet support this expression.\n'[39m +
        [32m'  --> test:15:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'15 | \t\ts1.a[0].a.push();\n'[39m +
        [32m'   | \t\t^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet support this expression.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'8364'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet implement type struct C.S storage ref\n'[39m +
        [32m'  --> test:15:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'15 | \t\ts1.a[0].a.push();\n'[39m +
        [32m'   | \t\t^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet implement type struct C.S storage ref'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'8364'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet implement type struct C.T storage ref\n'[39m +
        [32m'  --> test:15:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'15 | \t\ts1.a[0].a.push();\n'[39m +
        [32m'   | \t\t^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet implement type struct C.T storage ref'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'8364'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet implement type struct C.S storage ref\n'[39m +
        [32m'  --> test:15:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'15 | \t\ts1.a[0].a.push();\n'[39m +
        [32m'   | \t\t^^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet implement type struct C.S storage ref'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'4375'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not support recursive structs.\n'[39m +
        [32m'  --> test:15:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'15 | \t\ts1.a[0].a.push();\n'[39m +
        [32m'   | \t\t^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not support recursive structs.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'7650'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet support this expression.\n'[39m +
        [32m'  --> test:16:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'16 | \t\ts2.a[0].a.push();\n'[39m +
        [32m'   | \t\t^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet support this expression.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'7650'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet support this expression.\n'[39m +
        [32m'  --> test:16:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'16 | \t\ts2.a[0].a.push();\n'[39m +
        [32m'   | \t\t^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet support this expression.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'8364'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet implement type struct C.S storage ref\n'[39m +
        [32m'  --> test:16:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'16 | \t\ts2.a[0].a.push();\n'[39m +
        [32m'   | \t\t^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet implement type struct C.S storage ref'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'8364'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet implement type struct C.T storage ref\n'[39m +
        [32m'  --> test:16:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'16 | \t\ts2.a[0].a.push();\n'[39m +
        [32m'   | \t\t^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet implement type struct C.T storage ref'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'8364'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet implement type struct C.S storage ref\n'[39m +
        [32m'  --> test:16:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'16 | \t\ts2.a[0].a.push();\n'[39m +
        [32m'   | \t\t^^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet implement type struct C.S storage ref'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'4375'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not support recursive structs.\n'[39m +
        [32m'  --> test:16:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'16 | \t\ts2.a[0].a.push();\n'[39m +
        [32m'   | \t\t^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not support recursive structs.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'7650'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet support this expression.\n'[39m +
        [32m'  --> test:17:10:\n'[39m +
        [32m'   |\n'[39m +
        [32m'17 | \t\tassert(s1.a[0].a[0].x == s2.a[0].a[0].x);\n'[39m +
        [32m'   | \t\t       ^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet support this expression.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'7650'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet support this expression.\n'[39m +
        [32m'  --> test:17:10:\n'[39m +
        [32m'   |\n'[39m +
        [32m'17 | \t\tassert(s1.a[0].a[0].x == s2.a[0].a[0].x);\n'[39m +
        [32m'   | \t\t       ^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet support this expression.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'7650'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet support this expression.\n'[39m +
        [32m'  --> test:17:10:\n'[39m +
        [32m'   |\n'[39m +
        [32m'17 | \t\tassert(s1.a[0].a[0].x == s2.a[0].a[0].x);\n'[39m +
        [32m'   | \t\t       ^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet support this expression.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'8364'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet implement type struct C.S storage ref\n'[39m +
        [32m'  --> test:17:10:\n'[39m +
        [32m'   |\n'[39m +
        [32m'17 | \t\tassert(s1.a[0].a[0].x == s2.a[0].a[0].x);\n'[39m +
        [32m'   | \t\t       ^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet implement type struct C.S storage ref'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'8364'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet implement type struct C.T storage ref\n'[39m +
        [32m'  --> test:17:10:\n'[39m +
        [32m'   |\n'[39m +
        [32m'17 | \t\tassert(s1.a[0].a[0].x == s2.a[0].a[0].x);\n'[39m +
        [32m'   | \t\t       ^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet implement type struct C.T storage ref'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'8364'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet implement type struct C.S storage ref\n'[39m +
        [32m'  --> test:17:10:\n'[39m +
        [32m'   |\n'[39m +
        [32m'17 | \t\tassert(s1.a[0].a[0].x == s2.a[0].a[0].x);\n'[39m +
        [32m'   | \t\t       ^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet implement type struct C.S storage ref'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'7650'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet support this expression.\n'[39m +
        [32m'  --> test:17:28:\n'[39m +
        [32m'   |\n'[39m +
        [32m'17 | \t\tassert(s1.a[0].a[0].x == s2.a[0].a[0].x);\n'[39m +
        [32m'   | \t\t                         ^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet support this expression.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'7650'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet support this expression.\n'[39m +
        [32m'  --> test:17:28:\n'[39m +
        [32m'   |\n'[39m +
        [32m'17 | \t\tassert(s1.a[0].a[0].x == s2.a[0].a[0].x);\n'[39m +
        [32m'   | \t\t                         ^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet support this expression.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'7650'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet support this expression.\n'[39m +
        [32m'  --> test:17:28:\n'[39m +
        [32m'   |\n'[39m +
        [32m'17 | \t\tassert(s1.a[0].a[0].x == s2.a[0].a[0].x);\n'[39m +
        [32m'   | \t\t                         ^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet support this expression.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'8364'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet implement type struct C.S storage ref\n'[39m +
        [32m'  --> test:17:28:\n'[39m +
        [32m'   |\n'[39m +
        [32m'17 | \t\tassert(s1.a[0].a[0].x == s2.a[0].a[0].x);\n'[39m +
        [32m'   | \t\t                         ^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet implement type struct C.S storage ref'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'8364'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet implement type struct C.T storage ref\n'[39m +
        [32m'  --> test:17:28:\n'[39m +
        [32m'   |\n'[39m +
        [32m'17 | \t\tassert(s1.a[0].a[0].x == s2.a[0].a[0].x);\n'[39m +
        [32m'   | \t\t                         ^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet implement type struct C.T storage ref'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'8364'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet implement type struct C.S storage ref\n'[39m +
        [32m'  --> test:17:28:\n'[39m +
        [32m'   |\n'[39m +
        [32m'17 | \t\tassert(s1.a[0].a[0].x == s2.a[0].a[0].x);\n'[39m +
        [32m'   | \t\t                         ^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet implement type struct C.S storage ref'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m'  --> test:17:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'17 | \t\tassert(s1.a[0].a[0].x == s2.a[0].a[0].x);\n'[39m +
        [32m'   | \t\t^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### Running /home/solc-js/regression/types/struct/struct_return.sol ...
### ... with solver Eldarica Vanilla
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m'  --> test:15:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'15 | \t\tassert(s2.a[3] == 43);\n'[39m +
        [32m'   | \t\t^^^^^^^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### ... with solver Spacer Quant
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m'  --> test:15:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'15 | \t\tassert(s2.a[3] == 43);\n'[39m +
        [32m'   | \t\t^^^^^^^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### Running /home/solc-js/regression/types/struct/struct_state_constructor.sol ...
### ... with solver Eldarica Vanilla
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### ... with solver Spacer Quant
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### Running /home/solc-js/regression/types/struct/struct_state_var.sol ...
### ... with solver Eldarica Vanilla
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m'  --> test:12:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'12 | \t\tassert(s.a[1] == s.a[0]);\n'[39m +
        [32m'   | \t\t^^^^^^^^^^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### ... with solver Spacer Quant
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m'  --> test:12:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'12 | \t\tassert(s.a[1] == s.a[0]);\n'[39m +
        [32m'   | \t\t^^^^^^^^^^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### Running /home/solc-js/regression/types/struct/struct_state_var_array_pop_1.sol ...
### ... with solver Eldarica Vanilla
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m'  --> test:16:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'16 | \t\tassert(s.a[1] == s.a[0]);\n'[39m +
        [32m'   | \t\t^^^^^^^^^^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### ... with solver Spacer Quant
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m'  --> test:16:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'16 | \t\tassert(s.a[1] == s.a[0]);\n'[39m +
        [32m'   | \t\t^^^^^^^^^^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### Running /home/solc-js/regression/types/struct/struct_state_var_array_pop_2.sol ...
### ... with solver Eldarica Vanilla
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m'  --> test:13:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'13 | \t\tassert(s.a[1] == s.a[0]);\n'[39m +
        [32m'   | \t\t^^^^^^^^^^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### ... with solver Spacer Quant
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m'  --> test:13:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'13 | \t\tassert(s.a[1] == s.a[0]);\n'[39m +
        [32m'   | \t\t^^^^^^^^^^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### Running /home/solc-js/regression/types/struct/struct_temporary.sol ...
### ... with solver Eldarica Vanilla
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### ... with solver Spacer Quant
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### Running /home/solc-js/regression/types/struct/struct_unary_add.sol ...
### ... with solver Eldarica Vanilla
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m'  --> test:13:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'13 | \t\tassert(s1.x == s2.x);\n'[39m +
        [32m'   | \t\t^^^^^^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### ... with solver Spacer Quant
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m'  --> test:13:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'13 | \t\tassert(s1.x == s2.x);\n'[39m +
        [32m'   | \t\t^^^^^^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### Running /home/solc-js/regression/types/struct/struct_unary_sub.sol ...
### ... with solver Eldarica Vanilla
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m'  --> test:14:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'14 | \t\tassert(s1.x == s2.x);\n'[39m +
        [32m'   | \t\t^^^^^^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### ... with solver Spacer Quant
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m'  --> test:14:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'14 | \t\tassert(s1.x == s2.x);\n'[39m +
        [32m'   | \t\t^^^^^^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
{"/home/solc-js/regression/types/abi_type_type_1.sol":[{"notProved":0,"unsafe":1,"safe":0,"winner":true},{"notProved":0,"unsafe":1,"safe":0,"winner":true}],"/home/solc-js/regression/types/abi_type_type_2.sol":[{"notProved":0,"unsafe":1,"safe":0,"winner":true},{"notProved":0,"unsafe":1,"safe":0,"winner":true}],"/home/solc-js/regression/types/address_balance.sol":[{"notProved":0,"unsafe":1,"safe":0,"winner":true},{"notProved":0,"unsafe":1,"safe":0,"winner":true}],"/home/solc-js/regression/types/address_call.sol":[{"notProved":0,"unsafe":1,"safe":0,"winner":true},{"notProved":0,"unsafe":1,"safe":0,"winner":true}],"/home/solc-js/regression/types/address_delegatecall.sol":[{"notProved":0,"unsafe":4,"safe":0,"winner":true},{"notProved":0,"unsafe":4,"safe":0,"winner":true}],"/home/solc-js/regression/types/address_staticcall.sol":[{"notProved":0,"unsafe":1,"safe":0,"winner":true},{"notProved":0,"unsafe":1,"safe":0,"winner":true}],"/home/solc-js/regression/types/address_transfer.sol":[{"notProved":0,"unsafe":1,"safe":0,"winner":true},{"notProved":0,"unsafe":1,"safe":0,"winner":true}],"/home/solc-js/regression/types/address_transfer_2.sol":[{"notProved":0,"unsafe":1,"safe":0,"winner":true},{"notProved":0,"unsafe":1,"safe":0,"winner":true}],"/home/solc-js/regression/types/address_transfer_3.sol":[{"notProved":0,"unsafe":0,"safe":0,"winner":true},{"notProved":0,"unsafe":0,"safe":0,"winner":true}],"/home/solc-js/regression/types/address_transfer_insufficient.sol":[{"notProved":0,"unsafe":1,"safe":0,"winner":true},{"notProved":0,"unsafe":1,"safe":0,"winner":true}],"/home/solc-js/regression/types/array_aliasing_memory_1.sol":[{"notProved":0,"unsafe":1,"safe":0,"winner":true},{"notProved":0,"unsafe":1,"safe":0,"winner":true}],"/home/solc-js/regression/types/array_aliasing_memory_2.sol":[{"notProved":0,"unsafe":1,"safe":0,"winner":true},{"notProved":0,"unsafe":1,"safe":0,"winner":true}],"/home/solc-js/regression/types/array_aliasing_memory_3.sol":[{"notProved":0,"unsafe":1,"safe":0,"winner":true},{"notProved":0,"unsafe":1,"safe":0,"winner":true}],"/home/solc-js/regression/types/array_aliasing_storage_1.sol":[{"notProved":0,"unsafe":0,"safe":0,"winner":true},{"notProved":0,"unsafe":0,"safe":0,"winner":true}],"/home/solc-js/regression/types/array_aliasing_storage_2.sol":[{"notProved":0,"unsafe":1,"safe":0,"winner":true},{"notProved":0,"unsafe":1,"safe":0,"winner":true}],"/home/solc-js/regression/types/array_aliasing_storage_3.sol":[{"notProved":0,"unsafe":2,"safe":0,"winner":true},{"notProved":0,"unsafe":2,"safe":0,"winner":true}],"/home/solc-js/regression/types/array_aliasing_storage_4.sol":[{"notProved":0,"unsafe":0,"safe":0,"winner":true},{"notProved":0,"unsafe":0,"safe":0,"winner":true}],"/home/solc-js/regression/types/array_aliasing_storage_5.sol":[{"notProved":0,"unsafe":0,"safe":0,"winner":true},{"notProved":0,"unsafe":0,"safe":0,"winner":true}],"/home/solc-js/regression/types/array_branch_1d.sol":[{"notProved":0,"unsafe":1,"safe":0,"winner":true},{"notProved":0,"unsafe":1,"safe":0,"winner":true}],"/home/solc-js/regression/types/array_branch_2d.sol":[{"notProved":0,"unsafe":1,"safe":0,"winner":true},{"notProved":0,"unsafe":1,"safe":0,"winner":true}],"/home/solc-js/regression/types/array_branch_3d.sol":[{"notProved":0,"unsafe":1,"safe":0,"winner":true},{"notProved":0,"unsafe":1,"safe":0,"winner":true}],"/home/solc-js/regression/types/array_branches_1d.sol":[{"notProved":0,"unsafe":0,"safe":0,"winner":true},{"notProved":0,"unsafe":0,"safe":0,"winner":true}],"/home/solc-js/regression/types/array_branches_2d.sol":[{"notProved":0,"unsafe":0,"safe":0,"winner":true},{"notProved":0,"unsafe":0,"safe":0,"winner":true}],"/home/solc-js/regression/types/array_branches_3d.sol":[{"notProved":0,"unsafe":0,"safe":0,"winner":true},{"notProved":0,"unsafe":0,"safe":0,"winner":true}],"/home/solc-js/regression/types/array_branches_3d_show_unproved.sol":[{"notProved":0,"unsafe":0,"safe":0,"winner":true},{"notProved":0,"unsafe":0,"safe":0,"winner":true}],"/home/solc-js/regression/types/array_dynamic_1.sol":[{"notProved":0,"unsafe":0,"safe":0,"winner":true},{"notProved":0,"unsafe":0,"safe":0,"winner":true}],"/home/solc-js/regression/types/array_dynamic_1_fail.sol":[{"notProved":0,"unsafe":1,"safe":0,"winner":true},{"notProved":0,"unsafe":1,"safe":0,"winner":true}],"/home/solc-js/regression/types/array_dynamic_2.sol":[{"notProved":0,"unsafe":0,"safe":0,"winner":true},{"notProved":0,"unsafe":0,"safe":0,"winner":true}],"/home/solc-js/regression/types/array_dynamic_2_fail.sol":[{"notProved":0,"unsafe":1,"safe":0,"winner":true},{"notProved":0,"unsafe":1,"safe":0,"winner":true}],"/home/solc-js/regression/types/array_dynamic_3.sol":[{"notProved":0,"unsafe":0,"safe":0,"winner":true},{"notProved":0,"unsafe":0,"safe":0,"winner":true}],"/home/solc-js/regression/types/array_dynamic_3_fail.sol":[{"notProved":0,"unsafe":1,"safe":0,"winner":true},{"notProved":0,"unsafe":1,"safe":0,"winner":true}],"/home/solc-js/regression/types/array_dynamic_parameter_1.sol":[{"notProved":0,"unsafe":0,"safe":0,"winner":true},{"notProved":0,"unsafe":0,"safe":0,"winner":true}],"/home/solc-js/regression/types/array_dynamic_parameter_1_fail.sol":[{"notProved":0,"unsafe":1,"safe":0,"winner":true},{"notProved":0,"unsafe":1,"safe":0,"winner":true}],"/home/solc-js/regression/types/array_literal_1.sol":[{"notProved":0,"unsafe":0,"safe":0,"winner":true},{"notProved":0,"unsafe":0,"safe":0,"winner":true}],"/home/solc-js/regression/types/array_literal_2.sol":[{"notProved":0,"unsafe":1,"safe":0,"winner":true},{"notProved":0,"unsafe":1,"safe":0,"winner":true}],"/home/solc-js/regression/types/array_literal_3.sol":[{"notProved":0,"unsafe":1,"safe":0,"winner":true},{"notProved":0,"unsafe":1,"safe":0,"winner":true}],"/home/solc-js/regression/types/array_literal_4.sol":[{"notProved":0,"unsafe":0,"safe":0,"winner":true},{"notProved":0,"unsafe":0,"safe":0,"winner":true}],"/home/solc-js/regression/types/array_literal_5.sol":[{"notProved":0,"unsafe":1,"safe":0,"winner":true},{"notProved":0,"unsafe":1,"safe":0,"winner":true}],"/home/solc-js/regression/types/array_literal_6.sol":[{"notProved":0,"unsafe":2,"safe":0,"winner":true},{"notProved":0,"unsafe":2,"safe":0,"winner":true}],"/home/solc-js/regression/types/array_literal_7.sol":[{"notProved":0,"unsafe":2,"safe":0,"winner":true},{"notProved":0,"unsafe":2,"safe":0,"winner":true}],"/home/solc-js/regression/types/array_mapping_aliasing_1.sol":[{"notProved":0,"unsafe":2,"safe":0,"winner":true},{"notProved":0,"unsafe":2,"safe":0,"winner":true}],"/home/solc-js/regression/types/array_mapping_aliasing_2.sol":[{"notProved":0,"unsafe":1,"safe":0,"winner":true},{"notProved":0,"unsafe":1,"safe":0,"winner":true}],"/home/solc-js/regression/types/array_static_1.sol":[{"notProved":0,"unsafe":0,"safe":0,"winner":true},{"notProved":0,"unsafe":0,"safe":0,"winner":true}],"/home/solc-js/regression/types/array_static_1_fail.sol":[{"notProved":0,"unsafe":1,"safe":0,"winner":true},{"notProved":0,"unsafe":1,"safe":0,"winner":true}],"/home/solc-js/regression/types/array_static_2.sol":[{"notProved":0,"unsafe":0,"safe":0,"winner":true},{"notProved":0,"unsafe":0,"safe":0,"winner":true}],"/home/solc-js/regression/types/array_static_2_fail.sol":[{"notProved":0,"unsafe":1,"safe":0,"winner":true},{"notProved":0,"unsafe":1,"safe":0,"winner":true}],"/home/solc-js/regression/types/array_static_3.sol":[{"notProved":0,"unsafe":0,"safe":0,"winner":true},{"notProved":0,"unsafe":0,"safe":0,"winner":true}],"/home/solc-js/regression/types/array_static_3_fail.sol":[{"notProved":0,"unsafe":1,"safe":0,"winner":true},{"notProved":0,"unsafe":1,"safe":0,"winner":true}],"/home/solc-js/regression/types/array_static_aliasing_memory_5.sol":[{"notProved":0,"unsafe":2,"safe":0,"winner":true},{"notProved":0,"unsafe":2,"safe":0,"winner":true}],"/home/solc-js/regression/types/array_static_aliasing_storage_5.sol":[{"notProved":0,"unsafe":1,"safe":0,"winner":true},{"notProved":0,"unsafe":1,"safe":0,"winner":true}],"/home/solc-js/regression/types/array_static_mapping_aliasing_1.sol":[{"notProved":0,"unsafe":2,"safe":0,"winner":true},{"notProved":0,"unsafe":2,"safe":0,"winner":true}],"/home/solc-js/regression/types/array_static_mapping_aliasing_2.sol":[{"notProved":0,"unsafe":1,"safe":0,"winner":true},{"notProved":0,"unsafe":1,"safe":0,"winner":true}],"/home/solc-js/regression/types/array_struct_array_branches_2d.sol":[{"notProved":0,"unsafe":0,"safe":1,"winner":true},{"notProved":1,"unsafe":0,"safe":0,"winner":false}],"/home/solc-js/regression/types/bool_int_mixed_1.sol":[{"notProved":0,"unsafe":0,"safe":0,"winner":true},{"notProved":0,"unsafe":0,"safe":0,"winner":true}],"/home/solc-js/regression/types/bool_int_mixed_2.sol":[{"notProved":0,"unsafe":0,"safe":0,"winner":true},{"notProved":0,"unsafe":0,"safe":0,"winner":true}],"/home/solc-js/regression/types/bool_int_mixed_3.sol":[{"notProved":0,"unsafe":0,"safe":0,"winner":true},{"notProved":0,"unsafe":0,"safe":0,"winner":true}],"/home/solc-js/regression/types/bool_simple_1.sol":[{"notProved":0,"unsafe":1,"safe":0,"winner":true},{"notProved":0,"unsafe":1,"safe":0,"winner":true}],"/home/solc-js/regression/types/bool_simple_2.sol":[{"notProved":0,"unsafe":1,"safe":0,"winner":true},{"notProved":0,"unsafe":1,"safe":0,"winner":true}],"/home/solc-js/regression/types/bool_simple_3.sol":[{"notProved":0,"unsafe":0,"safe":0,"winner":true},{"notProved":0,"unsafe":0,"safe":0,"winner":true}],"/home/solc-js/regression/types/bool_simple_4.sol":[{"notProved":0,"unsafe":0,"safe":0,"winner":true},{"notProved":0,"unsafe":0,"safe":0,"winner":true}],"/home/solc-js/regression/types/bool_simple_5.sol":[{"notProved":0,"unsafe":0,"safe":0,"winner":true},{"notProved":0,"unsafe":0,"safe":0,"winner":true}],"/home/solc-js/regression/types/bool_simple_6.sol":[{"notProved":0,"unsafe":0,"safe":0,"winner":true},{"notProved":0,"unsafe":0,"safe":0,"winner":true}],"/home/solc-js/regression/types/bytes_1.sol":[{"notProved":0,"unsafe":0,"safe":0,"winner":true},{"notProved":0,"unsafe":0,"safe":0,"winner":true}],"/home/solc-js/regression/types/bytes_2.sol":[{"notProved":0,"unsafe":1,"safe":0,"winner":true},{"notProved":0,"unsafe":1,"safe":0,"winner":true}],"/home/solc-js/regression/types/bytes_2_fail.sol":[{"notProved":0,"unsafe":1,"safe":0,"winner":true},{"notProved":0,"unsafe":1,"safe":0,"winner":true}],"/home/solc-js/regression/types/bytes_length.sol":[{"notProved":0,"unsafe":0,"safe":0,"winner":true},{"notProved":0,"unsafe":0,"safe":0,"winner":true}],"/home/solc-js/regression/types/contract.sol":[{"notProved":0,"unsafe":1,"safe":0,"winner":true},{"notProved":0,"unsafe":1,"safe":0,"winner":true}],"/home/solc-js/regression/types/contract_2.sol":[{"notProved":0,"unsafe":1,"safe":0,"winner":true},{"notProved":0,"unsafe":1,"safe":0,"winner":true}],"/home/solc-js/regression/types/contract_3.sol":[{"notProved":0,"unsafe":0,"safe":0,"winner":true},{"notProved":0,"unsafe":0,"safe":0,"winner":true}],"/home/solc-js/regression/types/contract_address_conversion.sol":[{"notProved":0,"unsafe":1,"safe":0,"winner":true},{"notProved":0,"unsafe":1,"safe":0,"winner":true}],"/home/solc-js/regression/types/contract_address_conversion_2.sol":[{"notProved":0,"unsafe":0,"safe":0,"winner":true},{"notProved":0,"unsafe":0,"safe":0,"winner":true}],"/home/solc-js/regression/types/data_location_in_function_type.sol":[{"notProved":0,"unsafe":0,"safe":0,"winner":true},{"notProved":0,"unsafe":0,"safe":0,"winner":true}],"/home/solc-js/regression/types/enum_explicit_values.sol":[{"notProved":0,"unsafe":0,"safe":0,"winner":true},{"notProved":0,"unsafe":0,"safe":0,"winner":true}],"/home/solc-js/regression/types/enum_explicit_values_2.sol":[{"notProved":0,"unsafe":1,"safe":0,"winner":true},{"notProved":0,"unsafe":1,"safe":0,"winner":true}],"/home/solc-js/regression/types/enum_in_library.sol":[{"notProved":0,"unsafe":0,"safe":0,"winner":true},{"notProved":0,"unsafe":0,"safe":0,"winner":true}],"/home/solc-js/regression/types/enum_in_library_2.sol":[{"notProved":0,"unsafe":1,"safe":0,"winner":true},{"notProved":0,"unsafe":1,"safe":0,"winner":true}],"/home/solc-js/regression/types/enum_in_struct.sol":[{"notProved":0,"unsafe":0,"safe":0,"winner":true},{"notProved":0,"unsafe":0,"safe":0,"winner":true}],"/home/solc-js/regression/types/enum_range.sol":[{"notProved":0,"unsafe":0,"safe":0,"winner":true},{"notProved":0,"unsafe":0,"safe":0,"winner":true}],"/home/solc-js/regression/types/enum_storage_eq.sol":[{"notProved":0,"unsafe":1,"safe":0,"winner":true},{"notProved":0,"unsafe":1,"safe":0,"winner":true}],"/home/solc-js/regression/types/enum_transitivity.sol":[{"notProved":0,"unsafe":0,"safe":0,"winner":true},{"notProved":0,"unsafe":0,"safe":0,"winner":true}],"/home/solc-js/regression/types/event_with_rational_size_array.sol":[{"notProved":0,"unsafe":0,"safe":0,"winner":true},{"notProved":0,"unsafe":0,"safe":0,"winner":true}],"/home/solc-js/regression/types/fixed_bytes_1.sol":[{"notProved":0,"unsafe":2,"safe":0,"winner":true},{"notProved":0,"unsafe":2,"safe":0,"winner":true}],"/home/solc-js/regression/types/fixed_bytes_2.sol":[{"notProved":0,"unsafe":1,"safe":0,"winner":true},{"notProved":0,"unsafe":1,"safe":0,"winner":true}],"/home/solc-js/regression/types/fixed_bytes_access_1.sol":[{"notProved":0,"unsafe":0,"safe":0,"winner":true},{"notProved":0,"unsafe":0,"safe":0,"winner":true}],"/home/solc-js/regression/types/fixed_bytes_access_2.sol":[{"notProved":0,"unsafe":0,"safe":0,"winner":true},{"notProved":0,"unsafe":0,"safe":0,"winner":true}],"/home/solc-js/regression/types/fixed_bytes_access_3.sol":[{"notProved":0,"unsafe":0,"safe":0,"winner":true},{"notProved":0,"unsafe":0,"safe":0,"winner":true}],"/home/solc-js/regression/types/fixed_bytes_access_4.sol":[{"notProved":0,"unsafe":1,"safe":0,"winner":true},{"notProved":0,"unsafe":1,"safe":0,"winner":true}],"/home/solc-js/regression/types/fixed_bytes_access_5.sol":[{"notProved":0,"unsafe":3,"safe":0,"winner":true},{"notProved":0,"unsafe":3,"safe":0,"winner":true}],"/home/solc-js/regression/types/fixed_bytes_access_6.sol":[{"notProved":0,"unsafe":0,"safe":0,"winner":true},{"notProved":0,"unsafe":0,"safe":0,"winner":true}],"/home/solc-js/regression/types/fixed_bytes_access_7.sol":[{"notProved":0,"unsafe":1,"safe":0,"winner":true},{"notProved":0,"unsafe":1,"safe":0,"winner":true}],"/home/solc-js/regression/types/fixed_bytes_range.sol":[{"notProved":0,"unsafe":0,"safe":0,"winner":true},{"notProved":0,"unsafe":0,"safe":0,"winner":true}],"/home/solc-js/regression/types/function_in_tuple_1.sol":[{"notProved":0,"unsafe":0,"safe":0,"winner":true},{"notProved":0,"unsafe":0,"safe":0,"winner":true}],"/home/solc-js/regression/types/function_in_tuple_2.sol":[{"notProved":0,"unsafe":0,"safe":0,"winner":true},{"notProved":0,"unsafe":0,"safe":0,"winner":true}],"/home/solc-js/regression/types/function_type_array_as_reference_type.sol":[{"notProved":0,"unsafe":0,"safe":0,"winner":true},{"notProved":0,"unsafe":0,"safe":0,"winner":true}],"/home/solc-js/regression/types/function_type_arrays.sol":[{"notProved":0,"unsafe":0,"safe":0,"winner":true},{"notProved":0,"unsafe":0,"safe":0,"winner":true}],"/home/solc-js/regression/types/function_type_as_argument.sol":[{"notProved":0,"unsafe":0,"safe":0,"winner":true},{"notProved":0,"unsafe":0,"safe":0,"winner":true}],"/home/solc-js/regression/types/function_type_call.sol":[{"notProved":0,"unsafe":0,"safe":0,"winner":true},{"notProved":0,"unsafe":0,"safe":0,"winner":true}],"/home/solc-js/regression/types/function_type_external_address.sol":[{"notProved":0,"unsafe":0,"safe":0,"winner":true},{"notProved":0,"unsafe":0,"safe":0,"winner":true}],"/home/solc-js/regression/types/function_type_members.sol":[{"notProved":0,"unsafe":0,"safe":0,"winner":true},{"notProved":0,"unsafe":0,"safe":0,"winner":true}],"/home/solc-js/regression/types/function_type_nested.sol":[{"notProved":0,"unsafe":0,"safe":0,"winner":true},{"notProved":0,"unsafe":0,"safe":0,"winner":true}],"/home/solc-js/regression/types/function_type_nested_return.sol":[{"notProved":0,"unsafe":0,"safe":0,"winner":true},{"notProved":0,"unsafe":0,"safe":0,"winner":true}],"/home/solc-js/regression/types/mapping_1.sol":[{"notProved":0,"unsafe":0,"safe":0,"winner":true},{"notProved":0,"unsafe":0,"safe":0,"winner":true}],"/home/solc-js/regression/types/mapping_1_fail.sol":[{"notProved":0,"unsafe":1,"safe":0,"winner":true},{"notProved":0,"unsafe":1,"safe":0,"winner":true}],"/home/solc-js/regression/types/mapping_2.sol":[{"notProved":0,"unsafe":1,"safe":0,"winner":true},{"notProved":0,"unsafe":1,"safe":0,"winner":true}],"/home/solc-js/regression/types/mapping_2d_1.sol":[{"notProved":0,"unsafe":0,"safe":0,"winner":true},{"notProved":0,"unsafe":0,"safe":0,"winner":true}],"/home/solc-js/regression/types/mapping_2d_1_fail.sol":[{"notProved":0,"unsafe":1,"safe":0,"winner":true},{"notProved":0,"unsafe":1,"safe":0,"winner":true}],"/home/solc-js/regression/types/mapping_3.sol":[{"notProved":0,"unsafe":0,"safe":0,"winner":true},{"notProved":0,"unsafe":0,"safe":0,"winner":true}],"/home/solc-js/regression/types/mapping_3d_1.sol":[{"notProved":0,"unsafe":0,"safe":0,"winner":true},{"notProved":0,"unsafe":0,"safe":0,"winner":true}],"/home/solc-js/regression/types/mapping_3d_1_fail.sol":[{"notProved":0,"unsafe":1,"safe":0,"winner":true},{"notProved":0,"unsafe":1,"safe":0,"winner":true}],"/home/solc-js/regression/types/mapping_4.sol":[{"notProved":0,"unsafe":0,"safe":0,"winner":true},{"notProved":0,"unsafe":0,"safe":0,"winner":true}],"/home/solc-js/regression/types/mapping_5.sol":[{"notProved":0,"unsafe":1,"safe":0,"winner":true},{"notProved":0,"unsafe":1,"safe":0,"winner":true}],"/home/solc-js/regression/types/mapping_aliasing_1.sol":[{"notProved":0,"unsafe":1,"safe":0,"winner":true},{"notProved":0,"unsafe":1,"safe":0,"winner":true}],"/home/solc-js/regression/types/mapping_aliasing_2.sol":[{"notProved":0,"unsafe":3,"safe":0,"winner":true},{"notProved":0,"unsafe":3,"safe":0,"winner":true}],"/home/solc-js/regression/types/mapping_and_array_of_functions.sol":[{"notProved":0,"unsafe":0,"safe":0,"winner":true},{"notProved":0,"unsafe":0,"safe":0,"winner":true}],"/home/solc-js/regression/types/mapping_as_local_var_1.sol":[{"notProved":0,"unsafe":2,"safe":0,"winner":true},{"notProved":0,"unsafe":2,"safe":0,"winner":true}],"/home/solc-js/regression/types/mapping_as_parameter_1.sol":[{"notProved":0,"unsafe":1,"safe":0,"winner":true},{"notProved":0,"unsafe":1,"safe":0,"winner":true}],"/home/solc-js/regression/types/mapping_equal_keys_1.sol":[{"notProved":0,"unsafe":0,"safe":0,"winner":true},{"notProved":0,"unsafe":0,"safe":0,"winner":true}],"/home/solc-js/regression/types/mapping_equal_keys_2.sol":[{"notProved":1,"unsafe":1,"safe":0,"winner":false},{"notProved":0,"unsafe":1,"safe":1,"winner":true}],"/home/solc-js/regression/types/mapping_struct_assignment.sol":[{"notProved":0,"unsafe":0,"safe":0,"winner":true},{"notProved":0,"unsafe":0,"safe":0,"winner":true}],"/home/solc-js/regression/types/mapping_unsupported_key_type_1.sol":[{"notProved":0,"unsafe":0,"safe":0,"winner":true},{"notProved":0,"unsafe":0,"safe":0,"winner":true}],"/home/solc-js/regression/types/no_effect_statements.sol":[{"notProved":0,"unsafe":0,"safe":0,"winner":true},{"notProved":0,"unsafe":0,"safe":0,"winner":true}],"/home/solc-js/regression/types/rational_large_1.sol":[{"notProved":0,"unsafe":1,"safe":0,"winner":true},{"notProved":0,"unsafe":1,"safe":0,"winner":true}],"/home/solc-js/regression/types/static_array_implicit_push_1.sol":[{"notProved":0,"unsafe":0,"safe":0,"winner":true},{"notProved":0,"unsafe":0,"safe":0,"winner":true}],"/home/solc-js/regression/types/static_array_implicit_push_2.sol":[{"notProved":0,"unsafe":0,"safe":0,"winner":true},{"notProved":0,"unsafe":0,"safe":0,"winner":true}],"/home/solc-js/regression/types/static_array_implicit_push_3.sol":[{"notProved":0,"unsafe":0,"safe":0,"winner":true},{"notProved":0,"unsafe":0,"safe":0,"winner":true}],"/home/solc-js/regression/types/static_array_implicit_push_4.sol":[{"notProved":0,"unsafe":0,"safe":0,"winner":true},{"notProved":0,"unsafe":0,"safe":0,"winner":true}],"/home/solc-js/regression/types/static_array_length_1.sol":[{"notProved":0,"unsafe":2,"safe":0,"winner":true},{"notProved":0,"unsafe":2,"safe":0,"winner":true}],"/home/solc-js/regression/types/static_array_length_2.sol":[{"notProved":0,"unsafe":2,"safe":0,"winner":true},{"notProved":0,"unsafe":2,"safe":0,"winner":true}],"/home/solc-js/regression/types/static_array_length_3.sol":[{"notProved":0,"unsafe":2,"safe":0,"winner":true},{"notProved":0,"unsafe":2,"safe":0,"winner":true}],"/home/solc-js/regression/types/static_array_length_4.sol":[{"notProved":0,"unsafe":4,"safe":0,"winner":true},{"notProved":0,"unsafe":4,"safe":0,"winner":true}],"/home/solc-js/regression/types/static_array_length_5.sol":[{"notProved":0,"unsafe":2,"safe":0,"winner":true},{"notProved":0,"unsafe":2,"safe":0,"winner":true}],"/home/solc-js/regression/types/storage_value_vars_1.sol":[{"notProved":0,"unsafe":1,"safe":0,"winner":true},{"notProved":0,"unsafe":1,"safe":0,"winner":true}],"/home/solc-js/regression/types/storage_value_vars_2.sol":[{"notProved":0,"unsafe":1,"safe":0,"winner":true},{"notProved":0,"unsafe":1,"safe":0,"winner":true}],"/home/solc-js/regression/types/storage_value_vars_3.sol":[{"notProved":0,"unsafe":0,"safe":0,"winner":true},{"notProved":0,"unsafe":0,"safe":0,"winner":true}],"/home/solc-js/regression/types/storage_value_vars_4.sol":[{"notProved":0,"unsafe":1,"safe":0,"winner":true},{"notProved":0,"unsafe":1,"safe":0,"winner":true}],"/home/solc-js/regression/types/string_1.sol":[{"notProved":0,"unsafe":1,"safe":0,"winner":true},{"notProved":0,"unsafe":1,"safe":0,"winner":true}],"/home/solc-js/regression/types/string_2.sol":[{"notProved":0,"unsafe":0,"safe":0,"winner":true},{"notProved":0,"unsafe":0,"safe":0,"winner":true}],"/home/solc-js/regression/types/string_length.sol":[{"notProved":0,"unsafe":0,"safe":0,"winner":true},{"notProved":0,"unsafe":0,"safe":0,"winner":true}],"/home/solc-js/regression/types/string_literal_assignment_1.sol":[{"notProved":0,"unsafe":1,"safe":0,"winner":true},{"notProved":0,"unsafe":1,"safe":0,"winner":true}],"/home/solc-js/regression/types/string_literal_assignment_2.sol":[{"notProved":0,"unsafe":1,"safe":0,"winner":true},{"notProved":0,"unsafe":1,"safe":0,"winner":true}],"/home/solc-js/regression/types/string_literal_assignment_3.sol":[{"notProved":0,"unsafe":1,"safe":0,"winner":true},{"notProved":0,"unsafe":1,"safe":0,"winner":true}],"/home/solc-js/regression/types/string_literal_assignment_4.sol":[{"notProved":0,"unsafe":1,"safe":0,"winner":true},{"notProved":0,"unsafe":1,"safe":0,"winner":true}],"/home/solc-js/regression/types/string_literal_assignment_5.sol":[{"notProved":0,"unsafe":1,"safe":0,"winner":true},{"notProved":0,"unsafe":1,"safe":0,"winner":true}],"/home/solc-js/regression/types/string_literal_comparison_1.sol":[{"notProved":0,"unsafe":1,"safe":0,"winner":true},{"notProved":0,"unsafe":1,"safe":0,"winner":true}],"/home/solc-js/regression/types/string_literal_comparison_2.sol":[{"notProved":0,"unsafe":2,"safe":0,"winner":true},{"notProved":0,"unsafe":2,"safe":0,"winner":true}],"/home/solc-js/regression/types/struct_1.sol":[{"notProved":0,"unsafe":0,"safe":0,"winner":true},{"notProved":0,"unsafe":0,"safe":0,"winner":true}],"/home/solc-js/regression/types/struct_array_branches_1d.sol":[{"notProved":0,"unsafe":0,"safe":0,"winner":true},{"notProved":0,"unsafe":0,"safe":0,"winner":true}],"/home/solc-js/regression/types/struct_array_branches_2d.sol":[{"notProved":0,"unsafe":0,"safe":0,"winner":true},{"notProved":0,"unsafe":0,"safe":0,"winner":true}],"/home/solc-js/regression/types/struct_array_branches_3d.sol":[{"notProved":0,"unsafe":0,"safe":1,"winner":true},{"notProved":1,"unsafe":0,"safe":0,"winner":false}],"/home/solc-js/regression/types/tuple_1_chain_1.sol":[{"notProved":0,"unsafe":0,"safe":0,"winner":true},{"notProved":0,"unsafe":0,"safe":0,"winner":true}],"/home/solc-js/regression/types/tuple_1_chain_2.sol":[{"notProved":0,"unsafe":0,"safe":0,"winner":true},{"notProved":0,"unsafe":0,"safe":0,"winner":true}],"/home/solc-js/regression/types/tuple_1_chain_n.sol":[{"notProved":0,"unsafe":0,"safe":0,"winner":true},{"notProved":0,"unsafe":0,"safe":0,"winner":true}],"/home/solc-js/regression/types/tuple_array_pop_1.sol":[{"notProved":0,"unsafe":0,"safe":0,"winner":true},{"notProved":0,"unsafe":0,"safe":0,"winner":true}],"/home/solc-js/regression/types/tuple_array_pop_2.sol":[{"notProved":0,"unsafe":0,"safe":0,"winner":true},{"notProved":0,"unsafe":0,"safe":0,"winner":true}],"/home/solc-js/regression/types/tuple_assignment.sol":[{"notProved":0,"unsafe":0,"safe":0,"winner":true},{"notProved":0,"unsafe":0,"safe":0,"winner":true}],"/home/solc-js/regression/types/tuple_assignment_array.sol":[{"notProved":0,"unsafe":0,"safe":0,"winner":true},{"notProved":0,"unsafe":0,"safe":0,"winner":true}],"/home/solc-js/regression/types/tuple_assignment_array_empty.sol":[{"notProved":0,"unsafe":1,"safe":0,"winner":true},{"notProved":0,"unsafe":1,"safe":0,"winner":true}],"/home/solc-js/regression/types/tuple_assignment_compound.sol":[{"notProved":0,"unsafe":1,"safe":0,"winner":true},{"notProved":0,"unsafe":1,"safe":0,"winner":true}],"/home/solc-js/regression/types/tuple_assignment_empty.sol":[{"notProved":0,"unsafe":1,"safe":0,"winner":true},{"notProved":0,"unsafe":1,"safe":0,"winner":true}],"/home/solc-js/regression/types/tuple_assignment_multiple_calls.sol":[{"notProved":0,"unsafe":0,"safe":0,"winner":true},{"notProved":0,"unsafe":0,"safe":0,"winner":true}],"/home/solc-js/regression/types/tuple_declarations.sol":[{"notProved":0,"unsafe":0,"safe":0,"winner":true},{"notProved":0,"unsafe":0,"safe":0,"winner":true}],"/home/solc-js/regression/types/tuple_declarations_empty.sol":[{"notProved":0,"unsafe":0,"safe":0,"winner":true},{"notProved":0,"unsafe":0,"safe":0,"winner":true}],"/home/solc-js/regression/types/tuple_declarations_function.sol":[{"notProved":0,"unsafe":0,"safe":0,"winner":true},{"notProved":0,"unsafe":0,"safe":0,"winner":true}],"/home/solc-js/regression/types/tuple_declarations_function_2.sol":[{"notProved":0,"unsafe":0,"safe":0,"winner":true},{"notProved":0,"unsafe":0,"safe":0,"winner":true}],"/home/solc-js/regression/types/tuple_declarations_function_empty.sol":[{"notProved":0,"unsafe":1,"safe":0,"winner":true},{"notProved":0,"unsafe":1,"safe":0,"winner":true}],"/home/solc-js/regression/types/tuple_different_count_assignment_1.sol":[{"notProved":0,"unsafe":1,"safe":0,"winner":true},{"notProved":0,"unsafe":1,"safe":0,"winner":true}],"/home/solc-js/regression/types/tuple_different_count_assignment_2.sol":[{"notProved":0,"unsafe":1,"safe":0,"winner":true},{"notProved":0,"unsafe":1,"safe":0,"winner":true}],"/home/solc-js/regression/types/tuple_extra_parens_1.sol":[{"notProved":0,"unsafe":0,"safe":0,"winner":true},{"notProved":0,"unsafe":0,"safe":0,"winner":true}],"/home/solc-js/regression/types/tuple_extra_parens_2.sol":[{"notProved":0,"unsafe":0,"safe":0,"winner":true},{"notProved":0,"unsafe":0,"safe":0,"winner":true}],"/home/solc-js/regression/types/tuple_extra_parens_3.sol":[{"notProved":0,"unsafe":0,"safe":0,"winner":true},{"notProved":0,"unsafe":0,"safe":0,"winner":true}],"/home/solc-js/regression/types/tuple_extra_parens_4.sol":[{"notProved":0,"unsafe":0,"safe":0,"winner":true},{"notProved":0,"unsafe":0,"safe":0,"winner":true}],"/home/solc-js/regression/types/tuple_extra_parens_5.sol":[{"notProved":0,"unsafe":0,"safe":0,"winner":true},{"notProved":0,"unsafe":0,"safe":0,"winner":true}],"/home/solc-js/regression/types/tuple_extra_parens_6.sol":[{"notProved":0,"unsafe":0,"safe":0,"winner":true},{"notProved":0,"unsafe":0,"safe":0,"winner":true}],"/home/solc-js/regression/types/tuple_extra_parens_7.sol":[{"notProved":0,"unsafe":0,"safe":0,"winner":true},{"notProved":0,"unsafe":0,"safe":0,"winner":true}],"/home/solc-js/regression/types/tuple_function.sol":[{"notProved":0,"unsafe":2,"safe":0,"winner":true},{"notProved":0,"unsafe":2,"safe":0,"winner":true}],"/home/solc-js/regression/types/tuple_function_2.sol":[{"notProved":0,"unsafe":1,"safe":0,"winner":true},{"notProved":0,"unsafe":1,"safe":0,"winner":true}],"/home/solc-js/regression/types/tuple_function_3.sol":[{"notProved":0,"unsafe":2,"safe":0,"winner":true},{"notProved":0,"unsafe":2,"safe":0,"winner":true}],"/home/solc-js/regression/types/tuple_return_branch.sol":[{"notProved":0,"unsafe":0,"safe":0,"winner":true},{"notProved":0,"unsafe":0,"safe":0,"winner":true}],"/home/solc-js/regression/types/tuple_single_element_1.sol":[{"notProved":0,"unsafe":0,"safe":0,"winner":true},{"notProved":0,"unsafe":0,"safe":0,"winner":true}],"/home/solc-js/regression/types/tuple_single_element_2.sol":[{"notProved":0,"unsafe":0,"safe":0,"winner":true},{"notProved":0,"unsafe":0,"safe":0,"winner":true}],"/home/solc-js/regression/types/tuple_single_non_tuple_element.sol":[{"notProved":0,"unsafe":0,"safe":0,"winner":true},{"notProved":0,"unsafe":0,"safe":0,"winner":true}],"/home/solc-js/regression/types/tuple_tuple.sol":[{"notProved":0,"unsafe":0,"safe":0,"winner":true},{"notProved":0,"unsafe":0,"safe":0,"winner":true}],"/home/solc-js/regression/types/type_expression_array_2d.sol":[{"notProved":0,"unsafe":0,"safe":0,"winner":true},{"notProved":0,"unsafe":0,"safe":0,"winner":true}],"/home/solc-js/regression/types/type_expression_array_3d.sol":[{"notProved":0,"unsafe":0,"safe":0,"winner":true},{"notProved":0,"unsafe":0,"safe":0,"winner":true}],"/home/solc-js/regression/types/type_expression_tuple_array_2d.sol":[{"notProved":0,"unsafe":0,"safe":0,"winner":true},{"notProved":0,"unsafe":0,"safe":0,"winner":true}],"/home/solc-js/regression/types/type_expression_tuple_array_3d.sol":[{"notProved":0,"unsafe":0,"safe":0,"winner":true},{"notProved":0,"unsafe":0,"safe":0,"winner":true}],"/home/solc-js/regression/types/type_interfaceid.sol":[{"notProved":0,"unsafe":2,"safe":0,"winner":true},{"notProved":0,"unsafe":2,"safe":0,"winner":true}],"/home/solc-js/regression/types/type_meta_unsupported.sol":[{"notProved":0,"unsafe":3,"safe":0,"winner":true},{"notProved":0,"unsafe":3,"safe":0,"winner":true}],"/home/solc-js/regression/types/type_minmax.sol":[{"notProved":0,"unsafe":1,"safe":0,"winner":true},{"notProved":0,"unsafe":1,"safe":0,"winner":true}],"/home/solc-js/regression/types/unused_mapping.sol":[{"notProved":0,"unsafe":0,"safe":0,"winner":true},{"notProved":0,"unsafe":0,"safe":0,"winner":true}],"/home/solc-js/regression/types/struct/array_struct_array_struct_memory_safe.sol":[{"notProved":0,"unsafe":0,"safe":0,"winner":true},{"notProved":0,"unsafe":0,"safe":0,"winner":true}],"/home/solc-js/regression/types/struct/array_struct_array_struct_memory_unsafe.sol":[{"notProved":0,"unsafe":4,"safe":0,"winner":true},{"notProved":0,"unsafe":4,"safe":0,"winner":true}],"/home/solc-js/regression/types/struct/array_struct_array_struct_storage_safe.sol":[{"notProved":1,"unsafe":0,"safe":0,"winner":false},{"notProved":0,"unsafe":0,"safe":1,"winner":true}],"/home/solc-js/regression/types/struct/struct_aliasing_memory.sol":[{"notProved":0,"unsafe":3,"safe":0,"winner":true},{"notProved":0,"unsafe":3,"safe":0,"winner":true}],"/home/solc-js/regression/types/struct/struct_aliasing_storage.sol":[{"notProved":0,"unsafe":3,"safe":0,"winner":true},{"notProved":0,"unsafe":3,"safe":0,"winner":true}],"/home/solc-js/regression/types/struct/struct_array_struct_array_memory_safe.sol":[{"notProved":0,"unsafe":0,"safe":0,"winner":true},{"notProved":0,"unsafe":0,"safe":0,"winner":true}],"/home/solc-js/regression/types/struct/struct_array_struct_array_memory_unsafe_1.sol":[{"notProved":0,"unsafe":5,"safe":0,"winner":true},{"notProved":0,"unsafe":5,"safe":0,"winner":true}],"/home/solc-js/regression/types/struct/struct_array_struct_array_memory_unsafe_2.sol":[{"notProved":0,"unsafe":5,"safe":0,"winner":true},{"notProved":0,"unsafe":5,"safe":0,"winner":true}],"/home/solc-js/regression/types/struct/struct_array_struct_array_storage_safe.sol":[{"notProved":0,"unsafe":0,"safe":0,"winner":true},{"notProved":0,"unsafe":0,"safe":0,"winner":true}],"/home/solc-js/regression/types/struct/struct_array_struct_array_storage_unsafe_1.sol":[{"notProved":0,"unsafe":5,"safe":0,"winner":true},{"notProved":0,"unsafe":5,"safe":0,"winner":true}],"/home/solc-js/regression/types/struct/struct_constructor_fixed_bytes_from_string_1.sol":[{"notProved":0,"unsafe":1,"safe":0,"winner":true},{"notProved":0,"unsafe":1,"safe":0,"winner":true}],"/home/solc-js/regression/types/struct/struct_constructor_named_args.sol":[{"notProved":0,"unsafe":1,"safe":0,"winner":true},{"notProved":0,"unsafe":1,"safe":0,"winner":true}],"/home/solc-js/regression/types/struct/struct_constructor_named_args_2.sol":[{"notProved":0,"unsafe":1,"safe":0,"winner":true},{"notProved":0,"unsafe":1,"safe":0,"winner":true}],"/home/solc-js/regression/types/struct/struct_constructor_recursive_1.sol":[{"notProved":0,"unsafe":0,"safe":0,"winner":true},{"notProved":0,"unsafe":0,"safe":0,"winner":true}],"/home/solc-js/regression/types/struct/struct_constructor_recursive_2.sol":[{"notProved":0,"unsafe":1,"safe":0,"winner":true},{"notProved":0,"unsafe":1,"safe":0,"winner":true}],"/home/solc-js/regression/types/struct/struct_delete_memory.sol":[{"notProved":0,"unsafe":2,"safe":0,"winner":true},{"notProved":0,"unsafe":2,"safe":0,"winner":true}],"/home/solc-js/regression/types/struct/struct_delete_storage.sol":[{"notProved":0,"unsafe":2,"safe":0,"winner":true},{"notProved":0,"unsafe":2,"safe":0,"winner":true}],"/home/solc-js/regression/types/struct/struct_mapping.sol":[{"notProved":0,"unsafe":1,"safe":0,"winner":true},{"notProved":0,"unsafe":1,"safe":0,"winner":true}],"/home/solc-js/regression/types/struct/struct_nested_constructor.sol":[{"notProved":0,"unsafe":1,"safe":0,"winner":true},{"notProved":0,"unsafe":1,"safe":0,"winner":true}],"/home/solc-js/regression/types/struct/struct_nested_constructor_named_args.sol":[{"notProved":0,"unsafe":0,"safe":0,"winner":true},{"notProved":0,"unsafe":0,"safe":0,"winner":true}],"/home/solc-js/regression/types/struct/struct_nested_temporary.sol":[{"notProved":0,"unsafe":0,"safe":0,"winner":true},{"notProved":0,"unsafe":0,"safe":0,"winner":true}],"/home/solc-js/regression/types/struct/struct_recursive_1.sol":[{"notProved":0,"unsafe":2,"safe":0,"winner":true},{"notProved":0,"unsafe":2,"safe":0,"winner":true}],"/home/solc-js/regression/types/struct/struct_recursive_2.sol":[{"notProved":0,"unsafe":3,"safe":0,"winner":true},{"notProved":0,"unsafe":3,"safe":0,"winner":true}],"/home/solc-js/regression/types/struct/struct_recursive_3.sol":[{"notProved":0,"unsafe":5,"safe":0,"winner":true},{"notProved":0,"unsafe":5,"safe":0,"winner":true}],"/home/solc-js/regression/types/struct/struct_recursive_4.sol":[{"notProved":0,"unsafe":3,"safe":0,"winner":true},{"notProved":0,"unsafe":3,"safe":0,"winner":true}],"/home/solc-js/regression/types/struct/struct_recursive_5.sol":[{"notProved":0,"unsafe":1,"safe":0,"winner":true},{"notProved":0,"unsafe":1,"safe":0,"winner":true}],"/home/solc-js/regression/types/struct/struct_recursive_6.sol":[{"notProved":0,"unsafe":3,"safe":0,"winner":true},{"notProved":0,"unsafe":3,"safe":0,"winner":true}],"/home/solc-js/regression/types/struct/struct_recursive_indirect_1.sol":[{"notProved":0,"unsafe":2,"safe":0,"winner":true},{"notProved":0,"unsafe":2,"safe":0,"winner":true}],"/home/solc-js/regression/types/struct/struct_recursive_indirect_2.sol":[{"notProved":0,"unsafe":1,"safe":0,"winner":true},{"notProved":0,"unsafe":1,"safe":0,"winner":true}],"/home/solc-js/regression/types/struct/struct_return.sol":[{"notProved":0,"unsafe":1,"safe":0,"winner":true},{"notProved":0,"unsafe":1,"safe":0,"winner":true}],"/home/solc-js/regression/types/struct/struct_state_constructor.sol":[{"notProved":0,"unsafe":0,"safe":0,"winner":true},{"notProved":0,"unsafe":0,"safe":0,"winner":true}],"/home/solc-js/regression/types/struct/struct_state_var.sol":[{"notProved":0,"unsafe":1,"safe":0,"winner":true},{"notProved":0,"unsafe":1,"safe":0,"winner":true}],"/home/solc-js/regression/types/struct/struct_state_var_array_pop_1.sol":[{"notProved":0,"unsafe":1,"safe":0,"winner":true},{"notProved":0,"unsafe":1,"safe":0,"winner":true}],"/home/solc-js/regression/types/struct/struct_state_var_array_pop_2.sol":[{"notProved":0,"unsafe":1,"safe":0,"winner":true},{"notProved":0,"unsafe":1,"safe":0,"winner":true}],"/home/solc-js/regression/types/struct/struct_temporary.sol":[{"notProved":0,"unsafe":0,"safe":0,"winner":true},{"notProved":0,"unsafe":0,"safe":0,"winner":true}],"/home/solc-js/regression/types/struct/struct_unary_add.sol":[{"notProved":0,"unsafe":1,"safe":0,"winner":true},{"notProved":0,"unsafe":1,"safe":0,"winner":true}],"/home/solc-js/regression/types/struct/struct_unary_sub.sol":[{"notProved":0,"unsafe":1,"safe":0,"winner":true},{"notProved":0,"unsafe":1,"safe":0,"winner":true}]}
