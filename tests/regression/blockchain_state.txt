[ '/home/solc-js', 'blockchain_state', '10' ]
/home/solc-js/regression/blockchain_state
### Running /home/solc-js/regression/blockchain_state/balance_non_zero.sol ...
### ... with solver Eldarica Vanilla
### Entire output:
{
  errors: [
    {
      component: 'general',
      errorCode: '3805',
      formattedMessage: 'Warning: This is a pre-release compiler version, please do not use it in production.\n' +
        '\n',
      message: 'This is a pre-release compiler version, please do not use it in production.',
      severity: 'warning',
      type: 'Warning'
    },
    {
      component: 'general',
      errorCode: '1878',
      formattedMessage: 'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n' +
        '--> test\n' +
        '\n',
      message: 'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.',
      severity: 'warning',
      sourceLocation: [Object],
      type: 'Warning'
    },
    {
      component: 'general',
      errorCode: '3420',
      formattedMessage: 'Warning: Source file does not specify required compiler version!\n' +
        '--> test\n' +
        '\n',
      message: 'Source file does not specify required compiler version!',
      severity: 'warning',
      sourceLocation: [Object],
      type: 'Warning'
    },
    {
      component: 'general',
      errorCode: '6328',
      formattedMessage: 'Warning: CHC: Assertion violation happens here.\n' +
        ' --> test:3:3:\n' +
        '  |\n' +
        '3 | \t\tassert(address(this).balance == 0); // should fail\n' +
        '  | \t\t^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n' +
        '\n',
      message: 'CHC: Assertion violation happens here.',
      severity: 'warning',
      sourceLocation: [Object],
      type: 'Warning'
    },
    {
      component: 'general',
      errorCode: '6328',
      formattedMessage: 'Warning: CHC: Assertion violation happens here.\n' +
        ' --> test:4:3:\n' +
        '  |\n' +
        '4 | \t\tassert(address(this).balance > 0); // should fail\n' +
        '  | \t\t^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n' +
        '\n',
      message: 'CHC: Assertion violation happens here.',
      severity: 'warning',
      sourceLocation: [Object],
      type: 'Warning'
    }
  ],
  sources: { test: { id: 0 } }
}
### End output
### ... with solver Spacer Quant
### Entire output:
{
  errors: [
    {
      component: 'general',
      errorCode: '3805',
      formattedMessage: 'Warning: This is a pre-release compiler version, please do not use it in production.\n' +
        '\n',
      message: 'This is a pre-release compiler version, please do not use it in production.',
      severity: 'warning',
      type: 'Warning'
    },
    {
      component: 'general',
      errorCode: '1878',
      formattedMessage: 'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n' +
        '--> test\n' +
        '\n',
      message: 'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.',
      severity: 'warning',
      sourceLocation: [Object],
      type: 'Warning'
    },
    {
      component: 'general',
      errorCode: '3420',
      formattedMessage: 'Warning: Source file does not specify required compiler version!\n' +
        '--> test\n' +
        '\n',
      message: 'Source file does not specify required compiler version!',
      severity: 'warning',
      sourceLocation: [Object],
      type: 'Warning'
    },
    {
      component: 'general',
      errorCode: '6328',
      formattedMessage: 'Warning: CHC: Assertion violation happens here.\n' +
        ' --> test:3:3:\n' +
        '  |\n' +
        '3 | \t\tassert(address(this).balance == 0); // should fail\n' +
        '  | \t\t^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n' +
        '\n',
      message: 'CHC: Assertion violation happens here.',
      severity: 'warning',
      sourceLocation: [Object],
      type: 'Warning'
    },
    {
      component: 'general',
      errorCode: '6328',
      formattedMessage: 'Warning: CHC: Assertion violation happens here.\n' +
        ' --> test:4:3:\n' +
        '  |\n' +
        '4 | \t\tassert(address(this).balance > 0); // should fail\n' +
        '  | \t\t^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n' +
        '\n',
      message: 'CHC: Assertion violation happens here.',
      severity: 'warning',
      sourceLocation: [Object],
      type: 'Warning'
    }
  ],
  sources: { test: { id: 0 } }
}
### End output
### Running /home/solc-js/regression/blockchain_state/balance_non_zero_2.sol ...
### ... with solver Eldarica Vanilla
### Entire output:
{
  errors: [
    {
      component: 'general',
      errorCode: '3805',
      formattedMessage: 'Warning: This is a pre-release compiler version, please do not use it in production.\n' +
        '\n',
      message: 'This is a pre-release compiler version, please do not use it in production.',
      severity: 'warning',
      type: 'Warning'
    },
    {
      component: 'general',
      errorCode: '1878',
      formattedMessage: 'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n' +
        '--> test\n' +
        '\n',
      message: 'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.',
      severity: 'warning',
      sourceLocation: [Object],
      type: 'Warning'
    },
    {
      component: 'general',
      errorCode: '3420',
      formattedMessage: 'Warning: Source file does not specify required compiler version!\n' +
        '--> test\n' +
        '\n',
      message: 'Source file does not specify required compiler version!',
      severity: 'warning',
      sourceLocation: [Object],
      type: 'Warning'
    },
    {
      component: 'general',
      errorCode: '6328',
      formattedMessage: 'Warning: CHC: Assertion violation happens here.\n' +
        ' --> test:7:3:\n' +
        '  |\n' +
        '7 | \t\tassert(address(this).balance > 200); // should fail\n' +
        '  | \t\t^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n' +
        '\n',
      message: 'CHC: Assertion violation happens here.',
      severity: 'warning',
      sourceLocation: [Object],
      type: 'Warning'
    }
  ],
  sources: { test: { id: 0 } }
}
### End output
### ... with solver Spacer Quant
### Entire output:
{
  errors: [
    {
      component: 'general',
      errorCode: '3805',
      formattedMessage: 'Warning: This is a pre-release compiler version, please do not use it in production.\n' +
        '\n',
      message: 'This is a pre-release compiler version, please do not use it in production.',
      severity: 'warning',
      type: 'Warning'
    },
    {
      component: 'general',
      errorCode: '1878',
      formattedMessage: 'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n' +
        '--> test\n' +
        '\n',
      message: 'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.',
      severity: 'warning',
      sourceLocation: [Object],
      type: 'Warning'
    },
    {
      component: 'general',
      errorCode: '3420',
      formattedMessage: 'Warning: Source file does not specify required compiler version!\n' +
        '--> test\n' +
        '\n',
      message: 'Source file does not specify required compiler version!',
      severity: 'warning',
      sourceLocation: [Object],
      type: 'Warning'
    },
    {
      component: 'general',
      errorCode: '6328',
      formattedMessage: 'Warning: CHC: Assertion violation happens here.\n' +
        ' --> test:7:3:\n' +
        '  |\n' +
        '7 | \t\tassert(address(this).balance > 200); // should fail\n' +
        '  | \t\t^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n' +
        '\n',
      message: 'CHC: Assertion violation happens here.',
      severity: 'warning',
      sourceLocation: [Object],
      type: 'Warning'
    }
  ],
  sources: { test: { id: 0 } }
}
### End output
### Running /home/solc-js/regression/blockchain_state/balance_receive.sol ...
### ... with solver Eldarica Vanilla
### Entire output:
{
  errors: [
    {
      component: 'general',
      errorCode: '3805',
      formattedMessage: 'Warning: This is a pre-release compiler version, please do not use it in production.\n' +
        '\n',
      message: 'This is a pre-release compiler version, please do not use it in production.',
      severity: 'warning',
      type: 'Warning'
    },
    {
      component: 'general',
      errorCode: '1878',
      formattedMessage: 'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n' +
        '--> test\n' +
        '\n',
      message: 'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.',
      severity: 'warning',
      sourceLocation: [Object],
      type: 'Warning'
    },
    {
      component: 'general',
      errorCode: '3420',
      formattedMessage: 'Warning: Source file does not specify required compiler version!\n' +
        '--> test\n' +
        '\n',
      message: 'Source file does not specify required compiler version!',
      severity: 'warning',
      sourceLocation: [Object],
      type: 'Warning'
    },
    {
      component: 'general',
      errorCode: '6328',
      formattedMessage: 'Warning: CHC: Assertion violation happens here.\n' +
        ' --> test:7:3:\n' +
        '  |\n' +
        '7 | \t\tassert(address(this).balance == prevBalance + msg.value); // should fail because there might be funds from selfdestruct/block.coinbase\n' +
        '  | \t\t^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n' +
        '\n',
      message: 'CHC: Assertion violation happens here.',
      severity: 'warning',
      sourceLocation: [Object],
      type: 'Warning'
    },
    {
      component: 'general',
      errorCode: '6328',
      formattedMessage: 'Warning: CHC: Assertion violation happens here.\n' +
        ' --> test:8:3:\n' +
        '  |\n' +
        '8 | \t\tassert(address(this).balance < prevBalance + msg.value); // should fail\n' +
        '  | \t\t^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n' +
        '\n',
      message: 'CHC: Assertion violation happens here.',
      severity: 'warning',
      sourceLocation: [Object],
      type: 'Warning'
    }
  ],
  sources: { test: { id: 0 } }
}
### End output
### ... with solver Spacer Quant
### Entire output:
{
  errors: [
    {
      component: 'general',
      errorCode: '3805',
      formattedMessage: 'Warning: This is a pre-release compiler version, please do not use it in production.\n' +
        '\n',
      message: 'This is a pre-release compiler version, please do not use it in production.',
      severity: 'warning',
      type: 'Warning'
    },
    {
      component: 'general',
      errorCode: '1878',
      formattedMessage: 'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n' +
        '--> test\n' +
        '\n',
      message: 'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.',
      severity: 'warning',
      sourceLocation: [Object],
      type: 'Warning'
    },
    {
      component: 'general',
      errorCode: '3420',
      formattedMessage: 'Warning: Source file does not specify required compiler version!\n' +
        '--> test\n' +
        '\n',
      message: 'Source file does not specify required compiler version!',
      severity: 'warning',
      sourceLocation: [Object],
      type: 'Warning'
    },
    {
      component: 'general',
      errorCode: '6328',
      formattedMessage: 'Warning: CHC: Assertion violation happens here.\n' +
        ' --> test:7:3:\n' +
        '  |\n' +
        '7 | \t\tassert(address(this).balance == prevBalance + msg.value); // should fail because there might be funds from selfdestruct/block.coinbase\n' +
        '  | \t\t^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n' +
        '\n',
      message: 'CHC: Assertion violation happens here.',
      severity: 'warning',
      sourceLocation: [Object],
      type: 'Warning'
    },
    {
      component: 'general',
      errorCode: '6328',
      formattedMessage: 'Warning: CHC: Assertion violation happens here.\n' +
        ' --> test:8:3:\n' +
        '  |\n' +
        '8 | \t\tassert(address(this).balance < prevBalance + msg.value); // should fail\n' +
        '  | \t\t^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n' +
        '\n',
      message: 'CHC: Assertion violation happens here.',
      severity: 'warning',
      sourceLocation: [Object],
      type: 'Warning'
    }
  ],
  sources: { test: { id: 0 } }
}
### End output
### Running /home/solc-js/regression/blockchain_state/balance_receive_2.sol ...
### ... with solver Eldarica Vanilla
### Entire output:
{
  errors: [
    {
      component: 'general',
      errorCode: '3805',
      formattedMessage: 'Warning: This is a pre-release compiler version, please do not use it in production.\n' +
        '\n',
      message: 'This is a pre-release compiler version, please do not use it in production.',
      severity: 'warning',
      type: 'Warning'
    },
    {
      component: 'general',
      errorCode: '1878',
      formattedMessage: 'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n' +
        '--> test\n' +
        '\n',
      message: 'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.',
      severity: 'warning',
      sourceLocation: [Object],
      type: 'Warning'
    },
    {
      component: 'general',
      errorCode: '3420',
      formattedMessage: 'Warning: Source file does not specify required compiler version!\n' +
        '--> test\n' +
        '\n',
      message: 'Source file does not specify required compiler version!',
      severity: 'warning',
      sourceLocation: [Object],
      type: 'Warning'
    },
    {
      component: 'general',
      errorCode: '6328',
      formattedMessage: 'Warning: CHC: Assertion violation happens here.\n' +
        '  --> test:12:3:\n' +
        '   |\n' +
        '12 | \t\tassert(address(this).balance > x + 10); // should fail\n' +
        '   | \t\t^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n' +
        '\n',
      message: 'CHC: Assertion violation happens here.',
      severity: 'warning',
      sourceLocation: [Object],
      type: 'Warning'
    }
  ],
  sources: { test: { id: 0 } }
}
### End output
### ... with solver Spacer Quant
### Entire output:
{
  errors: [
    {
      component: 'general',
      errorCode: '3805',
      formattedMessage: 'Warning: This is a pre-release compiler version, please do not use it in production.\n' +
        '\n',
      message: 'This is a pre-release compiler version, please do not use it in production.',
      severity: 'warning',
      type: 'Warning'
    },
    {
      component: 'general',
      errorCode: '1878',
      formattedMessage: 'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n' +
        '--> test\n' +
        '\n',
      message: 'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.',
      severity: 'warning',
      sourceLocation: [Object],
      type: 'Warning'
    },
    {
      component: 'general',
      errorCode: '3420',
      formattedMessage: 'Warning: Source file does not specify required compiler version!\n' +
        '--> test\n' +
        '\n',
      message: 'Source file does not specify required compiler version!',
      severity: 'warning',
      sourceLocation: [Object],
      type: 'Warning'
    },
    {
      component: 'general',
      errorCode: '6328',
      formattedMessage: 'Warning: CHC: Assertion violation happens here.\n' +
        '  --> test:12:3:\n' +
        '   |\n' +
        '12 | \t\tassert(address(this).balance > x + 10); // should fail\n' +
        '   | \t\t^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n' +
        '\n',
      message: 'CHC: Assertion violation happens here.',
      severity: 'warning',
      sourceLocation: [Object],
      type: 'Warning'
    }
  ],
  sources: { test: { id: 0 } }
}
### End output
### Running /home/solc-js/regression/blockchain_state/balance_receive_3.sol ...
### ... with solver Eldarica Vanilla
### Entire output:
{
  errors: [
    {
      component: 'general',
      errorCode: '3805',
      formattedMessage: 'Warning: This is a pre-release compiler version, please do not use it in production.\n' +
        '\n',
      message: 'This is a pre-release compiler version, please do not use it in production.',
      severity: 'warning',
      type: 'Warning'
    },
    {
      component: 'general',
      errorCode: '1878',
      formattedMessage: 'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n' +
        '--> test\n' +
        '\n',
      message: 'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.',
      severity: 'warning',
      sourceLocation: [Object],
      type: 'Warning'
    },
    {
      component: 'general',
      errorCode: '3420',
      formattedMessage: 'Warning: Source file does not specify required compiler version!\n' +
        '--> test\n' +
        '\n',
      message: 'Source file does not specify required compiler version!',
      severity: 'warning',
      sourceLocation: [Object],
      type: 'Warning'
    },
    {
      component: 'general',
      errorCode: '6328',
      formattedMessage: 'Warning: CHC: Assertion violation happens here.\n' +
        ' --> test:3:3:\n' +
        '  |\n' +
        '3 | \t\tassert(address(this).balance == msg.value); // should fail because there might be funds from before deployment\n' +
        '  | \t\t^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n' +
        '\n',
      message: 'CHC: Assertion violation happens here.',
      severity: 'warning',
      sourceLocation: [Object],
      type: 'Warning'
    }
  ],
  sources: { test: { id: 0 } }
}
### End output
### ... with solver Spacer Quant
### Entire output:
{
  errors: [
    {
      component: 'general',
      errorCode: '3805',
      formattedMessage: 'Warning: This is a pre-release compiler version, please do not use it in production.\n' +
        '\n',
      message: 'This is a pre-release compiler version, please do not use it in production.',
      severity: 'warning',
      type: 'Warning'
    },
    {
      component: 'general',
      errorCode: '1878',
      formattedMessage: 'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n' +
        '--> test\n' +
        '\n',
      message: 'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.',
      severity: 'warning',
      sourceLocation: [Object],
      type: 'Warning'
    },
    {
      component: 'general',
      errorCode: '3420',
      formattedMessage: 'Warning: Source file does not specify required compiler version!\n' +
        '--> test\n' +
        '\n',
      message: 'Source file does not specify required compiler version!',
      severity: 'warning',
      sourceLocation: [Object],
      type: 'Warning'
    },
    {
      component: 'general',
      errorCode: '6328',
      formattedMessage: 'Warning: CHC: Assertion violation happens here.\n' +
        ' --> test:3:3:\n' +
        '  |\n' +
        '3 | \t\tassert(address(this).balance == msg.value); // should fail because there might be funds from before deployment\n' +
        '  | \t\t^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n' +
        '\n',
      message: 'CHC: Assertion violation happens here.',
      severity: 'warning',
      sourceLocation: [Object],
      type: 'Warning'
    }
  ],
  sources: { test: { id: 0 } }
}
### End output
### Running /home/solc-js/regression/blockchain_state/balance_receive_4.sol ...
### ... with solver Eldarica Vanilla
### Entire output:
{
  errors: [
    {
      component: 'general',
      errorCode: '3805',
      formattedMessage: 'Warning: This is a pre-release compiler version, please do not use it in production.\n' +
        '\n',
      message: 'This is a pre-release compiler version, please do not use it in production.',
      severity: 'warning',
      type: 'Warning'
    },
    {
      component: 'general',
      errorCode: '1878',
      formattedMessage: 'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n' +
        '--> test\n' +
        '\n',
      message: 'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.',
      severity: 'warning',
      sourceLocation: [Object],
      type: 'Warning'
    },
    {
      component: 'general',
      errorCode: '3420',
      formattedMessage: 'Warning: Source file does not specify required compiler version!\n' +
        '--> test\n' +
        '\n',
      message: 'Source file does not specify required compiler version!',
      severity: 'warning',
      sourceLocation: [Object],
      type: 'Warning'
    },
    {
      component: 'general',
      errorCode: '6328',
      formattedMessage: 'Warning: CHC: Assertion violation happens here.\n' +
        ' --> test:9:3:\n' +
        '  |\n' +
        '9 | \t\tassert(address(this).balance >= c * 12); // should fail\n' +
        '  | \t\t^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n' +
        '\n',
      message: 'CHC: Assertion violation happens here.',
      severity: 'warning',
      sourceLocation: [Object],
      type: 'Warning'
    }
  ],
  sources: { test: { id: 0 } }
}
### End output
### ... with solver Spacer Quant
### Entire output:
{
  errors: [
    {
      component: 'general',
      errorCode: '3805',
      formattedMessage: 'Warning: This is a pre-release compiler version, please do not use it in production.\n' +
        '\n',
      message: 'This is a pre-release compiler version, please do not use it in production.',
      severity: 'warning',
      type: 'Warning'
    },
    {
      component: 'general',
      errorCode: '1878',
      formattedMessage: 'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n' +
        '--> test\n' +
        '\n',
      message: 'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.',
      severity: 'warning',
      sourceLocation: [Object],
      type: 'Warning'
    },
    {
      component: 'general',
      errorCode: '3420',
      formattedMessage: 'Warning: Source file does not specify required compiler version!\n' +
        '--> test\n' +
        '\n',
      message: 'Source file does not specify required compiler version!',
      severity: 'warning',
      sourceLocation: [Object],
      type: 'Warning'
    },
    {
      component: 'general',
      errorCode: '6328',
      formattedMessage: 'Warning: CHC: Assertion violation happens here.\n' +
        ' --> test:9:3:\n' +
        '  |\n' +
        '9 | \t\tassert(address(this).balance >= c * 12); // should fail\n' +
        '  | \t\t^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n' +
        '\n',
      message: 'CHC: Assertion violation happens here.',
      severity: 'warning',
      sourceLocation: [Object],
      type: 'Warning'
    }
  ],
  sources: { test: { id: 0 } }
}
### End output
### Running /home/solc-js/regression/blockchain_state/balance_receive_5.sol ...
### ... with solver Eldarica Vanilla
### Entire output:
{
  errors: [
    {
      component: 'general',
      errorCode: '3805',
      formattedMessage: 'Warning: This is a pre-release compiler version, please do not use it in production.\n' +
        '\n',
      message: 'This is a pre-release compiler version, please do not use it in production.',
      severity: 'warning',
      type: 'Warning'
    },
    {
      component: 'general',
      errorCode: '1878',
      formattedMessage: 'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n' +
        '--> test\n' +
        '\n',
      message: 'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.',
      severity: 'warning',
      sourceLocation: [Object],
      type: 'Warning'
    },
    {
      component: 'general',
      errorCode: '3420',
      formattedMessage: 'Warning: Source file does not specify required compiler version!\n' +
        '--> test\n' +
        '\n',
      message: 'Source file does not specify required compiler version!',
      severity: 'warning',
      sourceLocation: [Object],
      type: 'Warning'
    },
    {
      component: 'general',
      errorCode: '6328',
      formattedMessage: 'Warning: CHC: Assertion violation happens here.\n' +
        ' --> test:7:3:\n' +
        '  |\n' +
        '7 | \t\tassert(address(this).balance == sum); // should fail\n' +
        '  | \t\t^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n' +
        '\n',
      message: 'CHC: Assertion violation happens here.',
      severity: 'warning',
      sourceLocation: [Object],
      type: 'Warning'
    }
  ],
  sources: { test: { id: 0 } }
}
### End output
### ... with solver Spacer Quant
### Entire output:
{
  errors: [
    {
      component: 'general',
      errorCode: '3805',
      formattedMessage: 'Warning: This is a pre-release compiler version, please do not use it in production.\n' +
        '\n',
      message: 'This is a pre-release compiler version, please do not use it in production.',
      severity: 'warning',
      type: 'Warning'
    },
    {
      component: 'general',
      errorCode: '1878',
      formattedMessage: 'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n' +
        '--> test\n' +
        '\n',
      message: 'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.',
      severity: 'warning',
      sourceLocation: [Object],
      type: 'Warning'
    },
    {
      component: 'general',
      errorCode: '3420',
      formattedMessage: 'Warning: Source file does not specify required compiler version!\n' +
        '--> test\n' +
        '\n',
      message: 'Source file does not specify required compiler version!',
      severity: 'warning',
      sourceLocation: [Object],
      type: 'Warning'
    },
    {
      component: 'general',
      errorCode: '6328',
      formattedMessage: 'Warning: CHC: Assertion violation happens here.\n' +
        ' --> test:7:3:\n' +
        '  |\n' +
        '7 | \t\tassert(address(this).balance == sum); // should fail\n' +
        '  | \t\t^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n' +
        '\n',
      message: 'CHC: Assertion violation happens here.',
      severity: 'warning',
      sourceLocation: [Object],
      type: 'Warning'
    }
  ],
  sources: { test: { id: 0 } }
}
### End output
### Running /home/solc-js/regression/blockchain_state/balance_receive_calls.sol ...
### ... with solver Eldarica Vanilla
### Entire output:
{
  errors: [
    {
      component: 'general',
      errorCode: '3805',
      formattedMessage: 'Warning: This is a pre-release compiler version, please do not use it in production.\n' +
        '\n',
      message: 'This is a pre-release compiler version, please do not use it in production.',
      severity: 'warning',
      type: 'Warning'
    },
    {
      component: 'general',
      errorCode: '1878',
      formattedMessage: 'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n' +
        '--> test\n' +
        '\n',
      message: 'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.',
      severity: 'warning',
      sourceLocation: [Object],
      type: 'Warning'
    },
    {
      component: 'general',
      errorCode: '3420',
      formattedMessage: 'Warning: Source file does not specify required compiler version!\n' +
        '--> test\n' +
        '\n',
      message: 'Source file does not specify required compiler version!',
      severity: 'warning',
      sourceLocation: [Object],
      type: 'Warning'
    },
    {
      component: 'general',
      errorCode: '6328',
      formattedMessage: 'Warning: CHC: Assertion violation happens here.\n' +
        ' --> test:8:3:\n' +
        '  |\n' +
        '8 | \t\tassert(address(this).balance >= 20); // should fail\n' +
        '  | \t\t^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n' +
        '\n',
      message: 'CHC: Assertion violation happens here.',
      severity: 'warning',
      sourceLocation: [Object],
      type: 'Warning'
    },
    {
      component: 'general',
      errorCode: '6328',
      formattedMessage: 'Warning: CHC: Assertion violation happens here.\n' +
        '  --> test:13:3:\n' +
        '   |\n' +
        '13 | \t\tassert(address(this).balance >= 20); // should fail\n' +
        '   | \t\t^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n' +
        '\n',
      message: 'CHC: Assertion violation happens here.',
      severity: 'warning',
      sourceLocation: [Object],
      type: 'Warning'
    },
    {
      component: 'general',
      errorCode: '6328',
      formattedMessage: 'Warning: CHC: Assertion violation happens here.\n' +
        '  --> test:18:3:\n' +
        '   |\n' +
        '18 | \t\tassert(address(this).balance >= 20); // should fail\n' +
        '   | \t\t^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n' +
        '\n',
      message: 'CHC: Assertion violation happens here.',
      severity: 'warning',
      sourceLocation: [Object],
      type: 'Warning'
    }
  ],
  sources: { test: { id: 0 } }
}
### End output
### ... with solver Spacer Quant
### Entire output:
{
  errors: [
    {
      component: 'general',
      errorCode: '3805',
      formattedMessage: 'Warning: This is a pre-release compiler version, please do not use it in production.\n' +
        '\n',
      message: 'This is a pre-release compiler version, please do not use it in production.',
      severity: 'warning',
      type: 'Warning'
    },
    {
      component: 'general',
      errorCode: '1878',
      formattedMessage: 'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n' +
        '--> test\n' +
        '\n',
      message: 'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.',
      severity: 'warning',
      sourceLocation: [Object],
      type: 'Warning'
    },
    {
      component: 'general',
      errorCode: '3420',
      formattedMessage: 'Warning: Source file does not specify required compiler version!\n' +
        '--> test\n' +
        '\n',
      message: 'Source file does not specify required compiler version!',
      severity: 'warning',
      sourceLocation: [Object],
      type: 'Warning'
    },
    {
      component: 'general',
      errorCode: '6328',
      formattedMessage: 'Warning: CHC: Assertion violation happens here.\n' +
        ' --> test:8:3:\n' +
        '  |\n' +
        '8 | \t\tassert(address(this).balance >= 20); // should fail\n' +
        '  | \t\t^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n' +
        '\n',
      message: 'CHC: Assertion violation happens here.',
      severity: 'warning',
      sourceLocation: [Object],
      type: 'Warning'
    },
    {
      component: 'general',
      errorCode: '6328',
      formattedMessage: 'Warning: CHC: Assertion violation happens here.\n' +
        '  --> test:13:3:\n' +
        '   |\n' +
        '13 | \t\tassert(address(this).balance >= 20); // should fail\n' +
        '   | \t\t^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n' +
        '\n',
      message: 'CHC: Assertion violation happens here.',
      severity: 'warning',
      sourceLocation: [Object],
      type: 'Warning'
    },
    {
      component: 'general',
      errorCode: '6328',
      formattedMessage: 'Warning: CHC: Assertion violation happens here.\n' +
        '  --> test:18:3:\n' +
        '   |\n' +
        '18 | \t\tassert(address(this).balance >= 20); // should fail\n' +
        '   | \t\t^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n' +
        '\n',
      message: 'CHC: Assertion violation happens here.',
      severity: 'warning',
      sourceLocation: [Object],
      type: 'Warning'
    }
  ],
  sources: { test: { id: 0 } }
}
### End output
### Running /home/solc-js/regression/blockchain_state/balance_receive_ext_calls.sol ...
### ... with solver Eldarica Vanilla
### Entire output:
{
  errors: [
    {
      component: 'general',
      errorCode: '3805',
      formattedMessage: 'Warning: This is a pre-release compiler version, please do not use it in production.\n' +
        '\n',
      message: 'This is a pre-release compiler version, please do not use it in production.',
      severity: 'warning',
      type: 'Warning'
    },
    {
      component: 'general',
      errorCode: '1878',
      formattedMessage: 'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n' +
        '--> test\n' +
        '\n',
      message: 'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.',
      severity: 'warning',
      sourceLocation: [Object],
      type: 'Warning'
    },
    {
      component: 'general',
      errorCode: '3420',
      formattedMessage: 'Warning: Source file does not specify required compiler version!\n' +
        '--> test\n' +
        '\n',
      message: 'Source file does not specify required compiler version!',
      severity: 'warning',
      sourceLocation: [Object],
      type: 'Warning'
    },
    {
      component: 'general',
      errorCode: '1218',
      formattedMessage: 'Warning: CHC: Error trying to invoke SMT solver.\n' +
        '  --> test:10:3:\n' +
        '   |\n' +
        '10 | \t\tassert(address(this).balance >= x); // should hold\n' +
        '   | \t\t^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n' +
        '\n',
      message: 'CHC: Error trying to invoke SMT solver.',
      severity: 'warning',
      sourceLocation: [Object],
      type: 'Warning'
    },
    {
      component: 'general',
      errorCode: '6328',
      formattedMessage: 'Warning: CHC: Assertion violation happens here.\n' +
        ' --> test:9:3:\n' +
        '  |\n' +
        '9 | \t\tassert(address(this).balance == x); // should fail\n' +
        '  | \t\t^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n' +
        '\n',
      message: 'CHC: Assertion violation happens here.',
      severity: 'warning',
      sourceLocation: [Object],
      type: 'Warning'
    },
    {
      component: 'general',
      errorCode: '5840',
      formattedMessage: 'Warning: CHC: 1 verification condition(s) could not be proved. Enable the model checker option "show unproved" to see all of them. Consider choosing a specific contract to be verified in order to reduce the solving problems. Consider increasing the timeout per query.\n' +
        '\n',
      message: 'CHC: 1 verification condition(s) could not be proved. Enable the model checker option "show unproved" to see all of them. Consider choosing a specific contract to be verified in order to reduce the solving problems. Consider increasing the timeout per query.',
      severity: 'warning',
      type: 'Warning'
    }
  ],
  sources: { test: { id: 0 } }
}
### End output
### ... with solver Spacer Quant
### Entire output:
{
  errors: [
    {
      component: 'general',
      errorCode: '3805',
      formattedMessage: 'Warning: This is a pre-release compiler version, please do not use it in production.\n' +
        '\n',
      message: 'This is a pre-release compiler version, please do not use it in production.',
      severity: 'warning',
      type: 'Warning'
    },
    {
      component: 'general',
      errorCode: '1878',
      formattedMessage: 'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n' +
        '--> test\n' +
        '\n',
      message: 'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.',
      severity: 'warning',
      sourceLocation: [Object],
      type: 'Warning'
    },
    {
      component: 'general',
      errorCode: '3420',
      formattedMessage: 'Warning: Source file does not specify required compiler version!\n' +
        '--> test\n' +
        '\n',
      message: 'Source file does not specify required compiler version!',
      severity: 'warning',
      sourceLocation: [Object],
      type: 'Warning'
    },
    {
      component: 'general',
      errorCode: '6328',
      formattedMessage: 'Warning: CHC: Assertion violation happens here.\n' +
        ' --> test:9:3:\n' +
        '  |\n' +
        '9 | \t\tassert(address(this).balance == x); // should fail\n' +
        '  | \t\t^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n' +
        '\n',
      message: 'CHC: Assertion violation happens here.',
      severity: 'warning',
      sourceLocation: [Object],
      type: 'Warning'
    }
  ],
  sources: { test: { id: 0 } }
}
### End output
### Running /home/solc-js/regression/blockchain_state/balance_receive_ext_calls_2.sol ...
### ... with solver Eldarica Vanilla
### Entire output:
{
  errors: [
    {
      component: 'general',
      errorCode: '3805',
      formattedMessage: 'Warning: This is a pre-release compiler version, please do not use it in production.\n' +
        '\n',
      message: 'This is a pre-release compiler version, please do not use it in production.',
      severity: 'warning',
      type: 'Warning'
    },
    {
      component: 'general',
      errorCode: '1878',
      formattedMessage: 'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n' +
        '--> test\n' +
        '\n',
      message: 'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.',
      severity: 'warning',
      sourceLocation: [Object],
      type: 'Warning'
    },
    {
      component: 'general',
      errorCode: '3420',
      formattedMessage: 'Warning: Source file does not specify required compiler version!\n' +
        '--> test\n' +
        '\n',
      message: 'Source file does not specify required compiler version!',
      severity: 'warning',
      sourceLocation: [Object],
      type: 'Warning'
    },
    {
      component: 'general',
      errorCode: '9302',
      formattedMessage: 'Warning: Return value of low-level calls not used.\n' +
        ' --> test:4:3:\n' +
        '  |\n' +
        '4 | \t\t_a.call("");\n' +
        '  | \t\t^^^^^^^^^^^\n' +
        '\n',
      message: 'Return value of low-level calls not used.',
      severity: 'warning',
      sourceLocation: [Object],
      type: 'Warning'
    },
    {
      component: 'general',
      errorCode: '6328',
      formattedMessage: 'Warning: CHC: Assertion violation happens here.\n' +
        ' --> test:5:3:\n' +
        '  |\n' +
        '5 | \t\tassert(address(this).balance == x); // should fail\n' +
        '  | \t\t^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n' +
        '\n',
      message: 'CHC: Assertion violation happens here.',
      severity: 'warning',
      sourceLocation: [Object],
      type: 'Warning'
    },
    {
      component: 'general',
      errorCode: '5840',
      formattedMessage: 'Warning: CHC: 1 verification condition(s) could not be proved. Enable the model checker option "show unproved" to see all of them. Consider choosing a specific contract to be verified in order to reduce the solving problems. Consider increasing the timeout per query.\n' +
        '\n',
      message: 'CHC: 1 verification condition(s) could not be proved. Enable the model checker option "show unproved" to see all of them. Consider choosing a specific contract to be verified in order to reduce the solving problems. Consider increasing the timeout per query.',
      severity: 'warning',
      type: 'Warning'
    }
  ],
  sources: { test: { id: 0 } }
}
### End output
### ... with solver Spacer Quant
### Entire output:
{
  errors: [
    {
      component: 'general',
      errorCode: '3805',
      formattedMessage: 'Warning: This is a pre-release compiler version, please do not use it in production.\n' +
        '\n',
      message: 'This is a pre-release compiler version, please do not use it in production.',
      severity: 'warning',
      type: 'Warning'
    },
    {
      component: 'general',
      errorCode: '1878',
      formattedMessage: 'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n' +
        '--> test\n' +
        '\n',
      message: 'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.',
      severity: 'warning',
      sourceLocation: [Object],
      type: 'Warning'
    },
    {
      component: 'general',
      errorCode: '3420',
      formattedMessage: 'Warning: Source file does not specify required compiler version!\n' +
        '--> test\n' +
        '\n',
      message: 'Source file does not specify required compiler version!',
      severity: 'warning',
      sourceLocation: [Object],
      type: 'Warning'
    },
    {
      component: 'general',
      errorCode: '9302',
      formattedMessage: 'Warning: Return value of low-level calls not used.\n' +
        ' --> test:4:3:\n' +
        '  |\n' +
        '4 | \t\t_a.call("");\n' +
        '  | \t\t^^^^^^^^^^^\n' +
        '\n',
      message: 'Return value of low-level calls not used.',
      severity: 'warning',
      sourceLocation: [Object],
      type: 'Warning'
    },
    {
      component: 'general',
      errorCode: '6328',
      formattedMessage: 'Warning: CHC: Assertion violation happens here.\n' +
        ' --> test:5:3:\n' +
        '  |\n' +
        '5 | \t\tassert(address(this).balance == x); // should fail\n' +
        '  | \t\t^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n' +
        '\n',
      message: 'CHC: Assertion violation happens here.',
      severity: 'warning',
      sourceLocation: [Object],
      type: 'Warning'
    }
  ],
  sources: { test: { id: 0 } }
}
### End output
### Running /home/solc-js/regression/blockchain_state/balance_receive_ext_calls_mutex.sol ...
### ... with solver Eldarica Vanilla
### Entire output:
{
  errors: [
    {
      component: 'general',
      errorCode: '3805',
      formattedMessage: 'Warning: This is a pre-release compiler version, please do not use it in production.\n' +
        '\n',
      message: 'This is a pre-release compiler version, please do not use it in production.',
      severity: 'warning',
      type: 'Warning'
    },
    {
      component: 'general',
      errorCode: '1878',
      formattedMessage: 'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n' +
        '--> test\n' +
        '\n',
      message: 'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.',
      severity: 'warning',
      sourceLocation: [Object],
      type: 'Warning'
    },
    {
      component: 'general',
      errorCode: '3420',
      formattedMessage: 'Warning: Source file does not specify required compiler version!\n' +
        '--> test\n' +
        '\n',
      message: 'Source file does not specify required compiler version!',
      severity: 'warning',
      sourceLocation: [Object],
      type: 'Warning'
    },
    {
      component: 'general',
      errorCode: '6328',
      formattedMessage: 'Warning: CHC: Assertion violation happens here.\n' +
        '  --> test:17:3:\n' +
        '   |\n' +
        '17 | \t\tassert(address(this).balance < x); // should fail\n' +
        '   | \t\t^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n' +
        '\n',
      message: 'CHC: Assertion violation happens here.',
      severity: 'warning',
      sourceLocation: [Object],
      type: 'Warning'
    }
  ],
  sources: { test: { id: 0 } }
}
### End output
### ... with solver Spacer Quant
### Entire output:
{
  errors: [
    {
      component: 'general',
      errorCode: '3805',
      formattedMessage: 'Warning: This is a pre-release compiler version, please do not use it in production.\n' +
        '\n',
      message: 'This is a pre-release compiler version, please do not use it in production.',
      severity: 'warning',
      type: 'Warning'
    },
    {
      component: 'general',
      errorCode: '1878',
      formattedMessage: 'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n' +
        '--> test\n' +
        '\n',
      message: 'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.',
      severity: 'warning',
      sourceLocation: [Object],
      type: 'Warning'
    },
    {
      component: 'general',
      errorCode: '3420',
      formattedMessage: 'Warning: Source file does not specify required compiler version!\n' +
        '--> test\n' +
        '\n',
      message: 'Source file does not specify required compiler version!',
      severity: 'warning',
      sourceLocation: [Object],
      type: 'Warning'
    },
    {
      component: 'general',
      errorCode: '6328',
      formattedMessage: 'Warning: CHC: Assertion violation happens here.\n' +
        '  --> test:17:3:\n' +
        '   |\n' +
        '17 | \t\tassert(address(this).balance < x); // should fail\n' +
        '   | \t\t^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n' +
        '\n',
      message: 'CHC: Assertion violation happens here.',
      severity: 'warning',
      sourceLocation: [Object],
      type: 'Warning'
    }
  ],
  sources: { test: { id: 0 } }
}
### End output
### Running /home/solc-js/regression/blockchain_state/balance_spend.sol ...
### ... with solver Eldarica Vanilla
### Entire output:
{
  errors: [
    {
      component: 'general',
      errorCode: '3805',
      formattedMessage: 'Warning: This is a pre-release compiler version, please do not use it in production.\n' +
        '\n',
      message: 'This is a pre-release compiler version, please do not use it in production.',
      severity: 'warning',
      type: 'Warning'
    },
    {
      component: 'general',
      errorCode: '1878',
      formattedMessage: 'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n' +
        '--> test\n' +
        '\n',
      message: 'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.',
      severity: 'warning',
      sourceLocation: [Object],
      type: 'Warning'
    },
    {
      component: 'general',
      errorCode: '3420',
      formattedMessage: 'Warning: Source file does not specify required compiler version!\n' +
        '--> test\n' +
        '\n',
      message: 'Source file does not specify required compiler version!',
      severity: 'warning',
      sourceLocation: [Object],
      type: 'Warning'
    },
    {
      component: 'general',
      errorCode: '6328',
      formattedMessage: 'Warning: CHC: Assertion violation happens here.\n' +
        '  --> test:14:3:\n' +
        '   |\n' +
        '14 | \t\tassert(address(this).balance > 90); // should fail\n' +
        '   | \t\t^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n' +
        '\n',
      message: 'CHC: Assertion violation happens here.',
      severity: 'warning',
      sourceLocation: [Object],
      type: 'Warning'
    }
  ],
  sources: { test: { id: 0 } }
}
### End output
### ... with solver Spacer Quant
### Entire output:
{
  errors: [
    {
      component: 'general',
      errorCode: '3805',
      formattedMessage: 'Warning: This is a pre-release compiler version, please do not use it in production.\n' +
        '\n',
      message: 'This is a pre-release compiler version, please do not use it in production.',
      severity: 'warning',
      type: 'Warning'
    },
    {
      component: 'general',
      errorCode: '1878',
      formattedMessage: 'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n' +
        '--> test\n' +
        '\n',
      message: 'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.',
      severity: 'warning',
      sourceLocation: [Object],
      type: 'Warning'
    },
    {
      component: 'general',
      errorCode: '3420',
      formattedMessage: 'Warning: Source file does not specify required compiler version!\n' +
        '--> test\n' +
        '\n',
      message: 'Source file does not specify required compiler version!',
      severity: 'warning',
      sourceLocation: [Object],
      type: 'Warning'
    },
    {
      component: 'general',
      errorCode: '6328',
      formattedMessage: 'Warning: CHC: Assertion violation happens here.\n' +
        '  --> test:14:3:\n' +
        '   |\n' +
        '14 | \t\tassert(address(this).balance > 90); // should fail\n' +
        '   | \t\t^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n' +
        '\n',
      message: 'CHC: Assertion violation happens here.',
      severity: 'warning',
      sourceLocation: [Object],
      type: 'Warning'
    }
  ],
  sources: { test: { id: 0 } }
}
### End output
### Running /home/solc-js/regression/blockchain_state/balance_spend_2.sol ...
### ... with solver Eldarica Vanilla
### Entire output:
{
  errors: [
    {
      component: 'general',
      errorCode: '3805',
      formattedMessage: 'Warning: This is a pre-release compiler version, please do not use it in production.\n' +
        '\n',
      message: 'This is a pre-release compiler version, please do not use it in production.',
      severity: 'warning',
      type: 'Warning'
    },
    {
      component: 'general',
      errorCode: '1878',
      formattedMessage: 'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n' +
        '--> test\n' +
        '\n',
      message: 'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.',
      severity: 'warning',
      sourceLocation: [Object],
      type: 'Warning'
    },
    {
      component: 'general',
      errorCode: '3420',
      formattedMessage: 'Warning: Source file does not specify required compiler version!\n' +
        '--> test\n' +
        '\n',
      message: 'Source file does not specify required compiler version!',
      severity: 'warning',
      sourceLocation: [Object],
      type: 'Warning'
    },
    {
      component: 'general',
      errorCode: '6328',
      formattedMessage: 'Warning: CHC: Assertion violation happens here.\n' +
        '  --> test:11:3:\n' +
        '   |\n' +
        '11 | \t\tassert(address(this).balance > 80); // should fail\n' +
        '   | \t\t^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n' +
        '\n',
      message: 'CHC: Assertion violation happens here.',
      severity: 'warning',
      sourceLocation: [Object],
      type: 'Warning'
    },
    {
      component: 'general',
      errorCode: '6328',
      formattedMessage: 'Warning: CHC: Assertion violation happens here.\n' +
        '  --> test:12:3:\n' +
        '   |\n' +
        '12 | \t\tassert(address(this).balance > 90); // should fail\n' +
        '   | \t\t^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n' +
        '\n',
      message: 'CHC: Assertion violation happens here.',
      severity: 'warning',
      sourceLocation: [Object],
      type: 'Warning'
    },
    {
      component: 'general',
      errorCode: '5840',
      formattedMessage: 'Warning: CHC: 1 verification condition(s) could not be proved. Enable the model checker option "show unproved" to see all of them. Consider choosing a specific contract to be verified in order to reduce the solving problems. Consider increasing the timeout per query.\n' +
        '\n',
      message: 'CHC: 1 verification condition(s) could not be proved. Enable the model checker option "show unproved" to see all of them. Consider choosing a specific contract to be verified in order to reduce the solving problems. Consider increasing the timeout per query.',
      severity: 'warning',
      type: 'Warning'
    }
  ],
  sources: { test: { id: 0 } }
}
### End output
### ... with solver Spacer Quant
### Entire output:
{
  errors: [
    {
      component: 'general',
      errorCode: '3805',
      formattedMessage: 'Warning: This is a pre-release compiler version, please do not use it in production.\n' +
        '\n',
      message: 'This is a pre-release compiler version, please do not use it in production.',
      severity: 'warning',
      type: 'Warning'
    },
    {
      component: 'general',
      errorCode: '1878',
      formattedMessage: 'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n' +
        '--> test\n' +
        '\n',
      message: 'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.',
      severity: 'warning',
      sourceLocation: [Object],
      type: 'Warning'
    },
    {
      component: 'general',
      errorCode: '3420',
      formattedMessage: 'Warning: Source file does not specify required compiler version!\n' +
        '--> test\n' +
        '\n',
      message: 'Source file does not specify required compiler version!',
      severity: 'warning',
      sourceLocation: [Object],
      type: 'Warning'
    },
    {
      component: 'general',
      errorCode: '6328',
      formattedMessage: 'Warning: CHC: Assertion violation happens here.\n' +
        '  --> test:10:3:\n' +
        '   |\n' +
        '10 | \t\tassert(address(this).balance > 0); // should fail\n' +
        '   | \t\t^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n' +
        '\n',
      message: 'CHC: Assertion violation happens here.',
      severity: 'warning',
      sourceLocation: [Object],
      type: 'Warning'
    },
    {
      component: 'general',
      errorCode: '6328',
      formattedMessage: 'Warning: CHC: Assertion violation happens here.\n' +
        '  --> test:11:3:\n' +
        '   |\n' +
        '11 | \t\tassert(address(this).balance > 80); // should fail\n' +
        '   | \t\t^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n' +
        '\n',
      message: 'CHC: Assertion violation happens here.',
      severity: 'warning',
      sourceLocation: [Object],
      type: 'Warning'
    },
    {
      component: 'general',
      errorCode: '6328',
      formattedMessage: 'Warning: CHC: Assertion violation happens here.\n' +
        '  --> test:12:3:\n' +
        '   |\n' +
        '12 | \t\tassert(address(this).balance > 90); // should fail\n' +
        '   | \t\t^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n' +
        '\n',
      message: 'CHC: Assertion violation happens here.',
      severity: 'warning',
      sourceLocation: [Object],
      type: 'Warning'
    }
  ],
  sources: { test: { id: 0 } }
}
### End output
### Running /home/solc-js/regression/blockchain_state/balance_zero.sol ...
### ... with solver Eldarica Vanilla
### Entire output:
{
  errors: [
    {
      component: 'general',
      errorCode: '3805',
      formattedMessage: 'Warning: This is a pre-release compiler version, please do not use it in production.\n' +
        '\n',
      message: 'This is a pre-release compiler version, please do not use it in production.',
      severity: 'warning',
      type: 'Warning'
    },
    {
      component: 'general',
      errorCode: '1878',
      formattedMessage: 'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n' +
        '--> test\n' +
        '\n',
      message: 'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.',
      severity: 'warning',
      sourceLocation: [Object],
      type: 'Warning'
    },
    {
      component: 'general',
      errorCode: '3420',
      formattedMessage: 'Warning: Source file does not specify required compiler version!\n' +
        '--> test\n' +
        '\n',
      message: 'Source file does not specify required compiler version!',
      severity: 'warning',
      sourceLocation: [Object],
      type: 'Warning'
    },
    {
      component: 'general',
      errorCode: '6328',
      formattedMessage: 'Warning: CHC: Assertion violation happens here.\n' +
        ' --> test:3:3:\n' +
        '  |\n' +
        '3 | \t\tassert(address(this).balance == 0); // should fail because there might be funds from before deployment\n' +
        '  | \t\t^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n' +
        '\n',
      message: 'CHC: Assertion violation happens here.',
      severity: 'warning',
      sourceLocation: [Object],
      type: 'Warning'
    },
    {
      component: 'general',
      errorCode: '6328',
      formattedMessage: 'Warning: CHC: Assertion violation happens here.\n' +
        ' --> test:4:3:\n' +
        '  |\n' +
        '4 | \t\tassert(address(this).balance > 0); // should fail\n' +
        '  | \t\t^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n' +
        '\n',
      message: 'CHC: Assertion violation happens here.',
      severity: 'warning',
      sourceLocation: [Object],
      type: 'Warning'
    }
  ],
  sources: { test: { id: 0 } }
}
### End output
### ... with solver Spacer Quant
### Entire output:
{
  errors: [
    {
      component: 'general',
      errorCode: '3805',
      formattedMessage: 'Warning: This is a pre-release compiler version, please do not use it in production.\n' +
        '\n',
      message: 'This is a pre-release compiler version, please do not use it in production.',
      severity: 'warning',
      type: 'Warning'
    },
    {
      component: 'general',
      errorCode: '1878',
      formattedMessage: 'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n' +
        '--> test\n' +
        '\n',
      message: 'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.',
      severity: 'warning',
      sourceLocation: [Object],
      type: 'Warning'
    },
    {
      component: 'general',
      errorCode: '3420',
      formattedMessage: 'Warning: Source file does not specify required compiler version!\n' +
        '--> test\n' +
        '\n',
      message: 'Source file does not specify required compiler version!',
      severity: 'warning',
      sourceLocation: [Object],
      type: 'Warning'
    },
    {
      component: 'general',
      errorCode: '6328',
      formattedMessage: 'Warning: CHC: Assertion violation happens here.\n' +
        ' --> test:3:3:\n' +
        '  |\n' +
        '3 | \t\tassert(address(this).balance == 0); // should fail because there might be funds from before deployment\n' +
        '  | \t\t^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n' +
        '\n',
      message: 'CHC: Assertion violation happens here.',
      severity: 'warning',
      sourceLocation: [Object],
      type: 'Warning'
    },
    {
      component: 'general',
      errorCode: '6328',
      formattedMessage: 'Warning: CHC: Assertion violation happens here.\n' +
        ' --> test:4:3:\n' +
        '  |\n' +
        '4 | \t\tassert(address(this).balance > 0); // should fail\n' +
        '  | \t\t^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n' +
        '\n',
      message: 'CHC: Assertion violation happens here.',
      severity: 'warning',
      sourceLocation: [Object],
      type: 'Warning'
    }
  ],
  sources: { test: { id: 0 } }
}
### End output
### Running /home/solc-js/regression/blockchain_state/balance_zero_2.sol ...
### ... with solver Eldarica Vanilla
### Entire output:
{
  errors: [
    {
      component: 'general',
      errorCode: '3805',
      formattedMessage: 'Warning: This is a pre-release compiler version, please do not use it in production.\n' +
        '\n',
      message: 'This is a pre-release compiler version, please do not use it in production.',
      severity: 'warning',
      type: 'Warning'
    },
    {
      component: 'general',
      errorCode: '1878',
      formattedMessage: 'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n' +
        '--> test\n' +
        '\n',
      message: 'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.',
      severity: 'warning',
      sourceLocation: [Object],
      type: 'Warning'
    },
    {
      component: 'general',
      errorCode: '3420',
      formattedMessage: 'Warning: Source file does not specify required compiler version!\n' +
        '--> test\n' +
        '\n',
      message: 'Source file does not specify required compiler version!',
      severity: 'warning',
      sourceLocation: [Object],
      type: 'Warning'
    },
    {
      component: 'general',
      errorCode: '6328',
      formattedMessage: 'Warning: CHC: Assertion violation happens here.\n' +
        ' --> test:3:3:\n' +
        '  |\n' +
        '3 | \t\tassert(address(this).balance == 0); // should fail because there might be funds from before deployment\n' +
        '  | \t\t^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n' +
        '\n',
      message: 'CHC: Assertion violation happens here.',
      severity: 'warning',
      sourceLocation: [Object],
      type: 'Warning'
    },
    {
      component: 'general',
      errorCode: '6328',
      formattedMessage: 'Warning: CHC: Assertion violation happens here.\n' +
        ' --> test:4:3:\n' +
        '  |\n' +
        '4 | \t\tassert(address(this).balance > 0); // should fail\n' +
        '  | \t\t^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n' +
        '\n',
      message: 'CHC: Assertion violation happens here.',
      severity: 'warning',
      sourceLocation: [Object],
      type: 'Warning'
    }
  ],
  sources: { test: { id: 0 } }
}
### End output
### ... with solver Spacer Quant
### Entire output:
{
  errors: [
    {
      component: 'general',
      errorCode: '3805',
      formattedMessage: 'Warning: This is a pre-release compiler version, please do not use it in production.\n' +
        '\n',
      message: 'This is a pre-release compiler version, please do not use it in production.',
      severity: 'warning',
      type: 'Warning'
    },
    {
      component: 'general',
      errorCode: '1878',
      formattedMessage: 'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n' +
        '--> test\n' +
        '\n',
      message: 'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.',
      severity: 'warning',
      sourceLocation: [Object],
      type: 'Warning'
    },
    {
      component: 'general',
      errorCode: '3420',
      formattedMessage: 'Warning: Source file does not specify required compiler version!\n' +
        '--> test\n' +
        '\n',
      message: 'Source file does not specify required compiler version!',
      severity: 'warning',
      sourceLocation: [Object],
      type: 'Warning'
    },
    {
      component: 'general',
      errorCode: '6328',
      formattedMessage: 'Warning: CHC: Assertion violation happens here.\n' +
        ' --> test:3:3:\n' +
        '  |\n' +
        '3 | \t\tassert(address(this).balance == 0); // should fail because there might be funds from before deployment\n' +
        '  | \t\t^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n' +
        '\n',
      message: 'CHC: Assertion violation happens here.',
      severity: 'warning',
      sourceLocation: [Object],
      type: 'Warning'
    },
    {
      component: 'general',
      errorCode: '6328',
      formattedMessage: 'Warning: CHC: Assertion violation happens here.\n' +
        ' --> test:4:3:\n' +
        '  |\n' +
        '4 | \t\tassert(address(this).balance > 0); // should fail\n' +
        '  | \t\t^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n' +
        '\n',
      message: 'CHC: Assertion violation happens here.',
      severity: 'warning',
      sourceLocation: [Object],
      type: 'Warning'
    }
  ],
  sources: { test: { id: 0 } }
}
### End output
### Running /home/solc-js/regression/blockchain_state/balance_zero_3.sol ...
### ... with solver Eldarica Vanilla
### Entire output:
{
  errors: [
    {
      component: 'general',
      errorCode: '3805',
      formattedMessage: 'Warning: This is a pre-release compiler version, please do not use it in production.\n' +
        '\n',
      message: 'This is a pre-release compiler version, please do not use it in production.',
      severity: 'warning',
      type: 'Warning'
    },
    {
      component: 'general',
      errorCode: '1878',
      formattedMessage: 'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n' +
        '--> test\n' +
        '\n',
      message: 'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.',
      severity: 'warning',
      sourceLocation: [Object],
      type: 'Warning'
    },
    {
      component: 'general',
      errorCode: '3420',
      formattedMessage: 'Warning: Source file does not specify required compiler version!\n' +
        '--> test\n' +
        '\n',
      message: 'Source file does not specify required compiler version!',
      severity: 'warning',
      sourceLocation: [Object],
      type: 'Warning'
    },
    {
      component: 'general',
      errorCode: '6328',
      formattedMessage: 'Warning: CHC: Assertion violation happens here.\n' +
        ' --> test:4:3:\n' +
        '  |\n' +
        '4 | \t\tassert(x == 0); // should fail because there might be funds from before deployment\n' +
        '  | \t\t^^^^^^^^^^^^^^\n' +
        '\n',
      message: 'CHC: Assertion violation happens here.',
      severity: 'warning',
      sourceLocation: [Object],
      type: 'Warning'
    },
    {
      component: 'general',
      errorCode: '6328',
      formattedMessage: 'Warning: CHC: Assertion violation happens here.\n' +
        ' --> test:5:3:\n' +
        '  |\n' +
        '5 | \t\tassert(x > 0); // should fail\n' +
        '  | \t\t^^^^^^^^^^^^^\n' +
        '\n',
      message: 'CHC: Assertion violation happens here.',
      severity: 'warning',
      sourceLocation: [Object],
      type: 'Warning'
    },
    {
      component: 'general',
      errorCode: '6328',
      formattedMessage: 'Warning: CHC: Assertion violation happens here.\n' +
        ' --> test:8:3:\n' +
        '  |\n' +
        '8 | \t\tassert(x == 0); // should fail because there might be funds from before deployment\n' +
        '  | \t\t^^^^^^^^^^^^^^\n' +
        '\n',
      message: 'CHC: Assertion violation happens here.',
      severity: 'warning',
      sourceLocation: [Object],
      type: 'Warning'
    },
    {
      component: 'general',
      errorCode: '6328',
      formattedMessage: 'Warning: CHC: Assertion violation happens here.\n' +
        ' --> test:9:3:\n' +
        '  |\n' +
        '9 | \t\tassert(x > 0); // should fail\n' +
        '  | \t\t^^^^^^^^^^^^^\n' +
        '\n',
      message: 'CHC: Assertion violation happens here.',
      severity: 'warning',
      sourceLocation: [Object],
      type: 'Warning'
    }
  ],
  sources: { test: { id: 0 } }
}
### End output
### ... with solver Spacer Quant
### Entire output:
{
  errors: [
    {
      component: 'general',
      errorCode: '3805',
      formattedMessage: 'Warning: This is a pre-release compiler version, please do not use it in production.\n' +
        '\n',
      message: 'This is a pre-release compiler version, please do not use it in production.',
      severity: 'warning',
      type: 'Warning'
    },
    {
      component: 'general',
      errorCode: '1878',
      formattedMessage: 'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n' +
        '--> test\n' +
        '\n',
      message: 'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.',
      severity: 'warning',
      sourceLocation: [Object],
      type: 'Warning'
    },
    {
      component: 'general',
      errorCode: '3420',
      formattedMessage: 'Warning: Source file does not specify required compiler version!\n' +
        '--> test\n' +
        '\n',
      message: 'Source file does not specify required compiler version!',
      severity: 'warning',
      sourceLocation: [Object],
      type: 'Warning'
    },
    {
      component: 'general',
      errorCode: '6328',
      formattedMessage: 'Warning: CHC: Assertion violation happens here.\n' +
        ' --> test:4:3:\n' +
        '  |\n' +
        '4 | \t\tassert(x == 0); // should fail because there might be funds from before deployment\n' +
        '  | \t\t^^^^^^^^^^^^^^\n' +
        '\n',
      message: 'CHC: Assertion violation happens here.',
      severity: 'warning',
      sourceLocation: [Object],
      type: 'Warning'
    },
    {
      component: 'general',
      errorCode: '6328',
      formattedMessage: 'Warning: CHC: Assertion violation happens here.\n' +
        ' --> test:5:3:\n' +
        '  |\n' +
        '5 | \t\tassert(x > 0); // should fail\n' +
        '  | \t\t^^^^^^^^^^^^^\n' +
        '\n',
      message: 'CHC: Assertion violation happens here.',
      severity: 'warning',
      sourceLocation: [Object],
      type: 'Warning'
    },
    {
      component: 'general',
      errorCode: '6328',
      formattedMessage: 'Warning: CHC: Assertion violation happens here.\n' +
        ' --> test:8:3:\n' +
        '  |\n' +
        '8 | \t\tassert(x == 0); // should fail because there might be funds from before deployment\n' +
        '  | \t\t^^^^^^^^^^^^^^\n' +
        '\n',
      message: 'CHC: Assertion violation happens here.',
      severity: 'warning',
      sourceLocation: [Object],
      type: 'Warning'
    },
    {
      component: 'general',
      errorCode: '6328',
      formattedMessage: 'Warning: CHC: Assertion violation happens here.\n' +
        ' --> test:9:3:\n' +
        '  |\n' +
        '9 | \t\tassert(x > 0); // should fail\n' +
        '  | \t\t^^^^^^^^^^^^^\n' +
        '\n',
      message: 'CHC: Assertion violation happens here.',
      severity: 'warning',
      sourceLocation: [Object],
      type: 'Warning'
    }
  ],
  sources: { test: { id: 0 } }
}
### End output
### Running /home/solc-js/regression/blockchain_state/balance_zero_4.sol ...
### ... with solver Eldarica Vanilla
### Entire output:
{
  errors: [
    {
      component: 'general',
      errorCode: '3805',
      formattedMessage: 'Warning: This is a pre-release compiler version, please do not use it in production.\n' +
        '\n',
      message: 'This is a pre-release compiler version, please do not use it in production.',
      severity: 'warning',
      type: 'Warning'
    },
    {
      component: 'general',
      errorCode: '1878',
      formattedMessage: 'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n' +
        '--> test\n' +
        '\n',
      message: 'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.',
      severity: 'warning',
      sourceLocation: [Object],
      type: 'Warning'
    },
    {
      component: 'general',
      errorCode: '3420',
      formattedMessage: 'Warning: Source file does not specify required compiler version!\n' +
        '--> test\n' +
        '\n',
      message: 'Source file does not specify required compiler version!',
      severity: 'warning',
      sourceLocation: [Object],
      type: 'Warning'
    },
    {
      component: 'general',
      errorCode: '6328',
      formattedMessage: 'Warning: CHC: Assertion violation happens here.\n' +
        ' --> test:7:3:\n' +
        '  |\n' +
        '7 | \t\tassert(x == 0); // should fail because there might be funds from before deployment\n' +
        '  | \t\t^^^^^^^^^^^^^^\n' +
        '\n',
      message: 'CHC: Assertion violation happens here.',
      severity: 'warning',
      sourceLocation: [Object],
      type: 'Warning'
    },
    {
      component: 'general',
      errorCode: '6328',
      formattedMessage: 'Warning: CHC: Assertion violation happens here.\n' +
        ' --> test:8:3:\n' +
        '  |\n' +
        '8 | \t\tassert(x > 0); // should fail\n' +
        '  | \t\t^^^^^^^^^^^^^\n' +
        '\n',
      message: 'CHC: Assertion violation happens here.',
      severity: 'warning',
      sourceLocation: [Object],
      type: 'Warning'
    },
    {
      component: 'general',
      errorCode: '6328',
      formattedMessage: 'Warning: CHC: Assertion violation happens here.\n' +
        '  --> test:11:3:\n' +
        '   |\n' +
        '11 | \t\tassert(x == 0); // should fail because there might be funds from before deployment\n' +
        '   | \t\t^^^^^^^^^^^^^^\n' +
        '\n',
      message: 'CHC: Assertion violation happens here.',
      severity: 'warning',
      sourceLocation: [Object],
      type: 'Warning'
    },
    {
      component: 'general',
      errorCode: '6328',
      formattedMessage: 'Warning: CHC: Assertion violation happens here.\n' +
        '  --> test:12:3:\n' +
        '   |\n' +
        '12 | \t\tassert(x > 0); // should fail\n' +
        '   | \t\t^^^^^^^^^^^^^\n' +
        '\n',
      message: 'CHC: Assertion violation happens here.',
      severity: 'warning',
      sourceLocation: [Object],
      type: 'Warning'
    }
  ],
  sources: { test: { id: 0 } }
}
### End output
### ... with solver Spacer Quant
### Entire output:
{
  errors: [
    {
      component: 'general',
      errorCode: '3805',
      formattedMessage: 'Warning: This is a pre-release compiler version, please do not use it in production.\n' +
        '\n',
      message: 'This is a pre-release compiler version, please do not use it in production.',
      severity: 'warning',
      type: 'Warning'
    },
    {
      component: 'general',
      errorCode: '1878',
      formattedMessage: 'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n' +
        '--> test\n' +
        '\n',
      message: 'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.',
      severity: 'warning',
      sourceLocation: [Object],
      type: 'Warning'
    },
    {
      component: 'general',
      errorCode: '3420',
      formattedMessage: 'Warning: Source file does not specify required compiler version!\n' +
        '--> test\n' +
        '\n',
      message: 'Source file does not specify required compiler version!',
      severity: 'warning',
      sourceLocation: [Object],
      type: 'Warning'
    },
    {
      component: 'general',
      errorCode: '6328',
      formattedMessage: 'Warning: CHC: Assertion violation happens here.\n' +
        ' --> test:7:3:\n' +
        '  |\n' +
        '7 | \t\tassert(x == 0); // should fail because there might be funds from before deployment\n' +
        '  | \t\t^^^^^^^^^^^^^^\n' +
        '\n',
      message: 'CHC: Assertion violation happens here.',
      severity: 'warning',
      sourceLocation: [Object],
      type: 'Warning'
    },
    {
      component: 'general',
      errorCode: '6328',
      formattedMessage: 'Warning: CHC: Assertion violation happens here.\n' +
        ' --> test:8:3:\n' +
        '  |\n' +
        '8 | \t\tassert(x > 0); // should fail\n' +
        '  | \t\t^^^^^^^^^^^^^\n' +
        '\n',
      message: 'CHC: Assertion violation happens here.',
      severity: 'warning',
      sourceLocation: [Object],
      type: 'Warning'
    },
    {
      component: 'general',
      errorCode: '6328',
      formattedMessage: 'Warning: CHC: Assertion violation happens here.\n' +
        '  --> test:11:3:\n' +
        '   |\n' +
        '11 | \t\tassert(x == 0); // should fail because there might be funds from before deployment\n' +
        '   | \t\t^^^^^^^^^^^^^^\n' +
        '\n',
      message: 'CHC: Assertion violation happens here.',
      severity: 'warning',
      sourceLocation: [Object],
      type: 'Warning'
    },
    {
      component: 'general',
      errorCode: '6328',
      formattedMessage: 'Warning: CHC: Assertion violation happens here.\n' +
        '  --> test:12:3:\n' +
        '   |\n' +
        '12 | \t\tassert(x > 0); // should fail\n' +
        '   | \t\t^^^^^^^^^^^^^\n' +
        '\n',
      message: 'CHC: Assertion violation happens here.',
      severity: 'warning',
      sourceLocation: [Object],
      type: 'Warning'
    }
  ],
  sources: { test: { id: 0 } }
}
### End output
### Running /home/solc-js/regression/blockchain_state/decreasing_balance.sol ...
### ... with solver Eldarica Vanilla
### Entire output:
{
  errors: [
    {
      component: 'general',
      errorCode: '3805',
      formattedMessage: 'Warning: This is a pre-release compiler version, please do not use it in production.\n' +
        '\n',
      message: 'This is a pre-release compiler version, please do not use it in production.',
      severity: 'warning',
      type: 'Warning'
    },
    {
      component: 'general',
      errorCode: '1878',
      formattedMessage: 'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n' +
        '--> test\n' +
        '\n',
      message: 'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.',
      severity: 'warning',
      sourceLocation: [Object],
      type: 'Warning'
    },
    {
      component: 'general',
      errorCode: '3420',
      formattedMessage: 'Warning: Source file does not specify required compiler version!\n' +
        '--> test\n' +
        '\n',
      message: 'Source file does not specify required compiler version!',
      severity: 'warning',
      sourceLocation: [Object],
      type: 'Warning'
    },
    {
      component: 'general',
      errorCode: '6328',
      formattedMessage: 'Warning: CHC: Assertion violation happens here.\n' +
        '  --> test:15:3:\n' +
        '   |\n' +
        '15 | \t\tassert(address(this).balance == t);\n' +
        '   | \t\t^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n' +
        '\n',
      message: 'CHC: Assertion violation happens here.',
      severity: 'warning',
      sourceLocation: [Object],
      type: 'Warning'
    }
  ],
  sources: { test: { id: 0 } }
}
### End output
### ... with solver Spacer Quant
### Entire output:
{
  errors: [
    {
      component: 'general',
      errorCode: '3805',
      formattedMessage: 'Warning: This is a pre-release compiler version, please do not use it in production.\n' +
        '\n',
      message: 'This is a pre-release compiler version, please do not use it in production.',
      severity: 'warning',
      type: 'Warning'
    },
    {
      component: 'general',
      errorCode: '1878',
      formattedMessage: 'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n' +
        '--> test\n' +
        '\n',
      message: 'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.',
      severity: 'warning',
      sourceLocation: [Object],
      type: 'Warning'
    },
    {
      component: 'general',
      errorCode: '3420',
      formattedMessage: 'Warning: Source file does not specify required compiler version!\n' +
        '--> test\n' +
        '\n',
      message: 'Source file does not specify required compiler version!',
      severity: 'warning',
      sourceLocation: [Object],
      type: 'Warning'
    },
    {
      component: 'general',
      errorCode: '6328',
      formattedMessage: 'Warning: CHC: Assertion violation happens here.\n' +
        '  --> test:15:3:\n' +
        '   |\n' +
        '15 | \t\tassert(address(this).balance == t);\n' +
        '   | \t\t^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n' +
        '\n',
      message: 'CHC: Assertion violation happens here.',
      severity: 'warning',
      sourceLocation: [Object],
      type: 'Warning'
    }
  ],
  sources: { test: { id: 0 } }
}
### End output
### Running /home/solc-js/regression/blockchain_state/free_function_1.sol ...
### ... with solver Eldarica Vanilla
### Entire output:
{
  errors: [
    {
      component: 'general',
      errorCode: '3805',
      formattedMessage: 'Warning: This is a pre-release compiler version, please do not use it in production.\n' +
        '\n',
      message: 'This is a pre-release compiler version, please do not use it in production.',
      severity: 'warning',
      type: 'Warning'
    },
    {
      component: 'general',
      errorCode: '1878',
      formattedMessage: 'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n' +
        '--> test\n' +
        '\n',
      message: 'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.',
      severity: 'warning',
      sourceLocation: [Object],
      type: 'Warning'
    },
    {
      component: 'general',
      errorCode: '3420',
      formattedMessage: 'Warning: Source file does not specify required compiler version!\n' +
        '--> test\n' +
        '\n',
      message: 'Source file does not specify required compiler version!',
      severity: 'warning',
      sourceLocation: [Object],
      type: 'Warning'
    }
  ],
  sources: { test: { id: 0 } }
}
### End output
### ... with solver Spacer Quant
### Entire output:
{
  errors: [
    {
      component: 'general',
      errorCode: '3805',
      formattedMessage: 'Warning: This is a pre-release compiler version, please do not use it in production.\n' +
        '\n',
      message: 'This is a pre-release compiler version, please do not use it in production.',
      severity: 'warning',
      type: 'Warning'
    },
    {
      component: 'general',
      errorCode: '1878',
      formattedMessage: 'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n' +
        '--> test\n' +
        '\n',
      message: 'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.',
      severity: 'warning',
      sourceLocation: [Object],
      type: 'Warning'
    },
    {
      component: 'general',
      errorCode: '3420',
      formattedMessage: 'Warning: Source file does not specify required compiler version!\n' +
        '--> test\n' +
        '\n',
      message: 'Source file does not specify required compiler version!',
      severity: 'warning',
      sourceLocation: [Object],
      type: 'Warning'
    }
  ],
  sources: { test: { id: 0 } }
}
### End output
### Running /home/solc-js/regression/blockchain_state/free_function_2.sol ...
### ... with solver Eldarica Vanilla
### Entire output:
{
  errors: [
    {
      component: 'general',
      errorCode: '3805',
      formattedMessage: 'Warning: This is a pre-release compiler version, please do not use it in production.\n' +
        '\n',
      message: 'This is a pre-release compiler version, please do not use it in production.',
      severity: 'warning',
      type: 'Warning'
    },
    {
      component: 'general',
      errorCode: '1878',
      formattedMessage: 'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n' +
        '--> test\n' +
        '\n',
      message: 'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.',
      severity: 'warning',
      sourceLocation: [Object],
      type: 'Warning'
    },
    {
      component: 'general',
      errorCode: '3420',
      formattedMessage: 'Warning: Source file does not specify required compiler version!\n' +
        '--> test\n' +
        '\n',
      message: 'Source file does not specify required compiler version!',
      severity: 'warning',
      sourceLocation: [Object],
      type: 'Warning'
    },
    {
      component: 'general',
      errorCode: '6328',
      formattedMessage: 'Warning: CHC: Assertion violation happens here.\n' +
        '  --> test:13:3:\n' +
        '   |\n' +
        '13 | \t\tassert(b1 == b2); // should fail\n' +
        '   | \t\t^^^^^^^^^^^^^^^^\n' +
        '\n',
      message: 'CHC: Assertion violation happens here.',
      severity: 'warning',
      sourceLocation: [Object],
      type: 'Warning'
    }
  ],
  sources: { test: { id: 0 } }
}
### End output
### ... with solver Spacer Quant
### Entire output:
{
  errors: [
    {
      component: 'general',
      errorCode: '3805',
      formattedMessage: 'Warning: This is a pre-release compiler version, please do not use it in production.\n' +
        '\n',
      message: 'This is a pre-release compiler version, please do not use it in production.',
      severity: 'warning',
      type: 'Warning'
    },
    {
      component: 'general',
      errorCode: '1878',
      formattedMessage: 'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n' +
        '--> test\n' +
        '\n',
      message: 'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.',
      severity: 'warning',
      sourceLocation: [Object],
      type: 'Warning'
    },
    {
      component: 'general',
      errorCode: '3420',
      formattedMessage: 'Warning: Source file does not specify required compiler version!\n' +
        '--> test\n' +
        '\n',
      message: 'Source file does not specify required compiler version!',
      severity: 'warning',
      sourceLocation: [Object],
      type: 'Warning'
    },
    {
      component: 'general',
      errorCode: '6328',
      formattedMessage: 'Warning: CHC: Assertion violation happens here.\n' +
        '  --> test:13:3:\n' +
        '   |\n' +
        '13 | \t\tassert(b1 == b2); // should fail\n' +
        '   | \t\t^^^^^^^^^^^^^^^^\n' +
        '\n',
      message: 'CHC: Assertion violation happens here.',
      severity: 'warning',
      sourceLocation: [Object],
      type: 'Warning'
    }
  ],
  sources: { test: { id: 0 } }
}
### End output
### Running /home/solc-js/regression/blockchain_state/library_internal_1.sol ...
### ... with solver Eldarica Vanilla
### Entire output:
{
  errors: [
    {
      component: 'general',
      errorCode: '3805',
      formattedMessage: 'Warning: This is a pre-release compiler version, please do not use it in production.\n' +
        '\n',
      message: 'This is a pre-release compiler version, please do not use it in production.',
      severity: 'warning',
      type: 'Warning'
    },
    {
      component: 'general',
      errorCode: '1878',
      formattedMessage: 'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n' +
        '--> test\n' +
        '\n',
      message: 'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.',
      severity: 'warning',
      sourceLocation: [Object],
      type: 'Warning'
    },
    {
      component: 'general',
      errorCode: '3420',
      formattedMessage: 'Warning: Source file does not specify required compiler version!\n' +
        '--> test\n' +
        '\n',
      message: 'Source file does not specify required compiler version!',
      severity: 'warning',
      sourceLocation: [Object],
      type: 'Warning'
    }
  ],
  sources: { test: { id: 0 } }
}
### End output
### ... with solver Spacer Quant
### Entire output:
{
  errors: [
    {
      component: 'general',
      errorCode: '3805',
      formattedMessage: 'Warning: This is a pre-release compiler version, please do not use it in production.\n' +
        '\n',
      message: 'This is a pre-release compiler version, please do not use it in production.',
      severity: 'warning',
      type: 'Warning'
    },
    {
      component: 'general',
      errorCode: '1878',
      formattedMessage: 'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n' +
        '--> test\n' +
        '\n',
      message: 'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.',
      severity: 'warning',
      sourceLocation: [Object],
      type: 'Warning'
    },
    {
      component: 'general',
      errorCode: '3420',
      formattedMessage: 'Warning: Source file does not specify required compiler version!\n' +
        '--> test\n' +
        '\n',
      message: 'Source file does not specify required compiler version!',
      severity: 'warning',
      sourceLocation: [Object],
      type: 'Warning'
    }
  ],
  sources: { test: { id: 0 } }
}
### End output
### Running /home/solc-js/regression/blockchain_state/library_internal_2.sol ...
### ... with solver Eldarica Vanilla
### Entire output:
{
  errors: [
    {
      component: 'general',
      errorCode: '3805',
      formattedMessage: 'Warning: This is a pre-release compiler version, please do not use it in production.\n' +
        '\n',
      message: 'This is a pre-release compiler version, please do not use it in production.',
      severity: 'warning',
      type: 'Warning'
    },
    {
      component: 'general',
      errorCode: '1878',
      formattedMessage: 'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n' +
        '--> test\n' +
        '\n',
      message: 'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.',
      severity: 'warning',
      sourceLocation: [Object],
      type: 'Warning'
    },
    {
      component: 'general',
      errorCode: '3420',
      formattedMessage: 'Warning: Source file does not specify required compiler version!\n' +
        '--> test\n' +
        '\n',
      message: 'Source file does not specify required compiler version!',
      severity: 'warning',
      sourceLocation: [Object],
      type: 'Warning'
    },
    {
      component: 'general',
      errorCode: '6328',
      formattedMessage: 'Warning: CHC: Assertion violation happens here.\n' +
        '  --> test:16:3:\n' +
        '   |\n' +
        '16 | \t\tassert(b1 == b2); // should fail\n' +
        '   | \t\t^^^^^^^^^^^^^^^^\n' +
        '\n',
      message: 'CHC: Assertion violation happens here.',
      severity: 'warning',
      sourceLocation: [Object],
      type: 'Warning'
    }
  ],
  sources: { test: { id: 0 } }
}
### End output
### ... with solver Spacer Quant
### Entire output:
{
  errors: [
    {
      component: 'general',
      errorCode: '3805',
      formattedMessage: 'Warning: This is a pre-release compiler version, please do not use it in production.\n' +
        '\n',
      message: 'This is a pre-release compiler version, please do not use it in production.',
      severity: 'warning',
      type: 'Warning'
    },
    {
      component: 'general',
      errorCode: '1878',
      formattedMessage: 'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n' +
        '--> test\n' +
        '\n',
      message: 'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.',
      severity: 'warning',
      sourceLocation: [Object],
      type: 'Warning'
    },
    {
      component: 'general',
      errorCode: '3420',
      formattedMessage: 'Warning: Source file does not specify required compiler version!\n' +
        '--> test\n' +
        '\n',
      message: 'Source file does not specify required compiler version!',
      severity: 'warning',
      sourceLocation: [Object],
      type: 'Warning'
    },
    {
      component: 'general',
      errorCode: '6328',
      formattedMessage: 'Warning: CHC: Assertion violation happens here.\n' +
        '  --> test:16:3:\n' +
        '   |\n' +
        '16 | \t\tassert(b1 == b2); // should fail\n' +
        '   | \t\t^^^^^^^^^^^^^^^^\n' +
        '\n',
      message: 'CHC: Assertion violation happens here.',
      severity: 'warning',
      sourceLocation: [Object],
      type: 'Warning'
    }
  ],
  sources: { test: { id: 0 } }
}
### End output
### Running /home/solc-js/regression/blockchain_state/library_public_1.sol ...
### ... with solver Eldarica Vanilla
### Entire output:
{
  errors: [
    {
      component: 'general',
      errorCode: '3805',
      formattedMessage: 'Warning: This is a pre-release compiler version, please do not use it in production.\n' +
        '\n',
      message: 'This is a pre-release compiler version, please do not use it in production.',
      severity: 'warning',
      type: 'Warning'
    },
    {
      component: 'general',
      errorCode: '1878',
      formattedMessage: 'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n' +
        '--> test\n' +
        '\n',
      message: 'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.',
      severity: 'warning',
      sourceLocation: [Object],
      type: 'Warning'
    },
    {
      component: 'general',
      errorCode: '3420',
      formattedMessage: 'Warning: Source file does not specify required compiler version!\n' +
        '--> test\n' +
        '\n',
      message: 'Source file does not specify required compiler version!',
      severity: 'warning',
      sourceLocation: [Object],
      type: 'Warning'
    },
    {
      component: 'general',
      errorCode: '4588',
      formattedMessage: 'Warning: Assertion checker does not yet implement this type of function call.\n' +
        '  --> test:11:3:\n' +
        '   |\n' +
        '11 | \t\ta.l();\n' +
        '   | \t\t^^^^^\n' +
        '\n',
      message: 'Assertion checker does not yet implement this type of function call.',
      severity: 'warning',
      sourceLocation: [Object],
      type: 'Warning'
    },
    {
      component: 'general',
      errorCode: '6328',
      formattedMessage: 'Warning: CHC: Assertion violation happens here.\n' +
        '  --> test:13:3:\n' +
        '   |\n' +
        '13 | \t\tassert(b1 == b2); // should fail because the called library can transfer with `this`s balance\n' +
        '   | \t\t^^^^^^^^^^^^^^^^\n' +
        '\n',
      message: 'CHC: Assertion violation happens here.',
      severity: 'warning',
      sourceLocation: [Object],
      type: 'Warning'
    },
    {
      component: 'general',
      errorCode: '6328',
      formattedMessage: 'Warning: CHC: Assertion violation happens here.\n' +
        '  --> test:14:3:\n' +
        '   |\n' +
        '14 | \t\tassert(x == 0); // should fail because of `delegatecall`\n' +
        '   | \t\t^^^^^^^^^^^^^^\n' +
        '\n',
      message: 'CHC: Assertion violation happens here.',
      severity: 'warning',
      sourceLocation: [Object],
      type: 'Warning'
    }
  ],
  sources: { test: { id: 0 } }
}
### End output
### ... with solver Spacer Quant
### Entire output:
{
  errors: [
    {
      component: 'general',
      errorCode: '3805',
      formattedMessage: 'Warning: This is a pre-release compiler version, please do not use it in production.\n' +
        '\n',
      message: 'This is a pre-release compiler version, please do not use it in production.',
      severity: 'warning',
      type: 'Warning'
    },
    {
      component: 'general',
      errorCode: '1878',
      formattedMessage: 'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n' +
        '--> test\n' +
        '\n',
      message: 'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.',
      severity: 'warning',
      sourceLocation: [Object],
      type: 'Warning'
    },
    {
      component: 'general',
      errorCode: '3420',
      formattedMessage: 'Warning: Source file does not specify required compiler version!\n' +
        '--> test\n' +
        '\n',
      message: 'Source file does not specify required compiler version!',
      severity: 'warning',
      sourceLocation: [Object],
      type: 'Warning'
    },
    {
      component: 'general',
      errorCode: '4588',
      formattedMessage: 'Warning: Assertion checker does not yet implement this type of function call.\n' +
        '  --> test:11:3:\n' +
        '   |\n' +
        '11 | \t\ta.l();\n' +
        '   | \t\t^^^^^\n' +
        '\n',
      message: 'Assertion checker does not yet implement this type of function call.',
      severity: 'warning',
      sourceLocation: [Object],
      type: 'Warning'
    },
    {
      component: 'general',
      errorCode: '6328',
      formattedMessage: 'Warning: CHC: Assertion violation happens here.\n' +
        '  --> test:13:3:\n' +
        '   |\n' +
        '13 | \t\tassert(b1 == b2); // should fail because the called library can transfer with `this`s balance\n' +
        '   | \t\t^^^^^^^^^^^^^^^^\n' +
        '\n',
      message: 'CHC: Assertion violation happens here.',
      severity: 'warning',
      sourceLocation: [Object],
      type: 'Warning'
    },
    {
      component: 'general',
      errorCode: '6328',
      formattedMessage: 'Warning: CHC: Assertion violation happens here.\n' +
        '  --> test:14:3:\n' +
        '   |\n' +
        '14 | \t\tassert(x == 0); // should fail because of `delegatecall`\n' +
        '   | \t\t^^^^^^^^^^^^^^\n' +
        '\n',
      message: 'CHC: Assertion violation happens here.',
      severity: 'warning',
      sourceLocation: [Object],
      type: 'Warning'
    }
  ],
  sources: { test: { id: 0 } }
}
### End output
### Running /home/solc-js/regression/blockchain_state/library_public_2.sol ...
### ... with solver Eldarica Vanilla
### Entire output:
{
  errors: [
    {
      component: 'general',
      errorCode: '3805',
      formattedMessage: 'Warning: This is a pre-release compiler version, please do not use it in production.\n' +
        '\n',
      message: 'This is a pre-release compiler version, please do not use it in production.',
      severity: 'warning',
      type: 'Warning'
    },
    {
      component: 'general',
      errorCode: '1878',
      formattedMessage: 'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n' +
        '--> test\n' +
        '\n',
      message: 'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.',
      severity: 'warning',
      sourceLocation: [Object],
      type: 'Warning'
    },
    {
      component: 'general',
      errorCode: '3420',
      formattedMessage: 'Warning: Source file does not specify required compiler version!\n' +
        '--> test\n' +
        '\n',
      message: 'Source file does not specify required compiler version!',
      severity: 'warning',
      sourceLocation: [Object],
      type: 'Warning'
    },
    {
      component: 'general',
      errorCode: '4588',
      formattedMessage: 'Warning: Assertion checker does not yet implement this type of function call.\n' +
        '  --> test:13:3:\n' +
        '   |\n' +
        '13 | \t\ta.l();\n' +
        '   | \t\t^^^^^\n' +
        '\n',
      message: 'Assertion checker does not yet implement this type of function call.',
      severity: 'warning',
      sourceLocation: [Object],
      type: 'Warning'
    },
    {
      component: 'general',
      errorCode: '6328',
      formattedMessage: 'Warning: CHC: Assertion violation happens here.\n' +
        '  --> test:15:3:\n' +
        '   |\n' +
        '15 | \t\tassert(b1 == b2); // should fail\n' +
        '   | \t\t^^^^^^^^^^^^^^^^\n' +
        '\n',
      message: 'CHC: Assertion violation happens here.',
      severity: 'warning',
      sourceLocation: [Object],
      type: 'Warning'
    },
    {
      component: 'general',
      errorCode: '6328',
      formattedMessage: 'Warning: CHC: Assertion violation happens here.\n' +
        '  --> test:16:3:\n' +
        '   |\n' +
        '16 | \t\tassert(x == 0); // should fail because of `delegatecall`\n' +
        '   | \t\t^^^^^^^^^^^^^^\n' +
        '\n',
      message: 'CHC: Assertion violation happens here.',
      severity: 'warning',
      sourceLocation: [Object],
      type: 'Warning'
    }
  ],
  sources: { test: { id: 0 } }
}
### End output
### ... with solver Spacer Quant
### Entire output:
{
  errors: [
    {
      component: 'general',
      errorCode: '3805',
      formattedMessage: 'Warning: This is a pre-release compiler version, please do not use it in production.\n' +
        '\n',
      message: 'This is a pre-release compiler version, please do not use it in production.',
      severity: 'warning',
      type: 'Warning'
    },
    {
      component: 'general',
      errorCode: '1878',
      formattedMessage: 'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n' +
        '--> test\n' +
        '\n',
      message: 'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.',
      severity: 'warning',
      sourceLocation: [Object],
      type: 'Warning'
    },
    {
      component: 'general',
      errorCode: '3420',
      formattedMessage: 'Warning: Source file does not specify required compiler version!\n' +
        '--> test\n' +
        '\n',
      message: 'Source file does not specify required compiler version!',
      severity: 'warning',
      sourceLocation: [Object],
      type: 'Warning'
    },
    {
      component: 'general',
      errorCode: '4588',
      formattedMessage: 'Warning: Assertion checker does not yet implement this type of function call.\n' +
        '  --> test:13:3:\n' +
        '   |\n' +
        '13 | \t\ta.l();\n' +
        '   | \t\t^^^^^\n' +
        '\n',
      message: 'Assertion checker does not yet implement this type of function call.',
      severity: 'warning',
      sourceLocation: [Object],
      type: 'Warning'
    },
    {
      component: 'general',
      errorCode: '6328',
      formattedMessage: 'Warning: CHC: Assertion violation happens here.\n' +
        '  --> test:15:3:\n' +
        '   |\n' +
        '15 | \t\tassert(b1 == b2); // should fail\n' +
        '   | \t\t^^^^^^^^^^^^^^^^\n' +
        '\n',
      message: 'CHC: Assertion violation happens here.',
      severity: 'warning',
      sourceLocation: [Object],
      type: 'Warning'
    },
    {
      component: 'general',
      errorCode: '6328',
      formattedMessage: 'Warning: CHC: Assertion violation happens here.\n' +
        '  --> test:16:3:\n' +
        '   |\n' +
        '16 | \t\tassert(x == 0); // should fail because of `delegatecall`\n' +
        '   | \t\t^^^^^^^^^^^^^^\n' +
        '\n',
      message: 'CHC: Assertion violation happens here.',
      severity: 'warning',
      sourceLocation: [Object],
      type: 'Warning'
    }
  ],
  sources: { test: { id: 0 } }
}
### End output
### Running /home/solc-js/regression/blockchain_state/library_public_3.sol ...
### ... with solver Eldarica Vanilla
### Entire output:
{
  errors: [
    {
      component: 'general',
      errorCode: '3805',
      formattedMessage: 'Warning: This is a pre-release compiler version, please do not use it in production.\n' +
        '\n',
      message: 'This is a pre-release compiler version, please do not use it in production.',
      severity: 'warning',
      type: 'Warning'
    },
    {
      component: 'general',
      errorCode: '1878',
      formattedMessage: 'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n' +
        '--> test\n' +
        '\n',
      message: 'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.',
      severity: 'warning',
      sourceLocation: [Object],
      type: 'Warning'
    },
    {
      component: 'general',
      errorCode: '3420',
      formattedMessage: 'Warning: Source file does not specify required compiler version!\n' +
        '--> test\n' +
        '\n',
      message: 'Source file does not specify required compiler version!',
      severity: 'warning',
      sourceLocation: [Object],
      type: 'Warning'
    },
    {
      component: 'general',
      errorCode: '5667',
      formattedMessage: 'Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n' +
        ' --> test:2:13:\n' +
        '  |\n' +
        '2 | \tfunction l(address payable a) public returns (uint) {\n' +
        '  | \t           ^^^^^^^^^^^^^^^^^\n' +
        '\n',
      message: 'Unused function parameter. Remove or comment out the variable name to silence this warning.',
      severity: 'warning',
      sourceLocation: [Object],
      type: 'Warning'
    },
    {
      component: 'general',
      errorCode: '4588',
      formattedMessage: 'Warning: Assertion checker does not yet implement this type of function call.\n' +
        '  --> test:13:12:\n' +
        '   |\n' +
        '13 | \t\tuint v = a.l();\n' +
        '   | \t\t         ^^^^^\n' +
        '\n',
      message: 'Assertion checker does not yet implement this type of function call.',
      severity: 'warning',
      sourceLocation: [Object],
      type: 'Warning'
    },
    {
      component: 'general',
      errorCode: '6328',
      formattedMessage: 'Warning: CHC: Assertion violation happens here.\n' +
        '  --> test:15:3:\n' +
        '   |\n' +
        '15 | \t\tassert(b1 == b2); // should fail because the called library can transfer with `this`s balance\n' +
        '   | \t\t^^^^^^^^^^^^^^^^\n' +
        '\n',
      message: 'CHC: Assertion violation happens here.',
      severity: 'warning',
      sourceLocation: [Object],
      type: 'Warning'
    },
    {
      component: 'general',
      errorCode: '6328',
      formattedMessage: 'Warning: CHC: Assertion violation happens here.\n' +
        '  --> test:16:3:\n' +
        '   |\n' +
        '16 | \t\tassert(x == 0); // should fail because of `delegatecall`\n' +
        '   | \t\t^^^^^^^^^^^^^^\n' +
        '\n',
      message: 'CHC: Assertion violation happens here.',
      severity: 'warning',
      sourceLocation: [Object],
      type: 'Warning'
    },
    {
      component: 'general',
      errorCode: '6328',
      formattedMessage: 'Warning: CHC: Assertion violation happens here.\n' +
        '  --> test:17:3:\n' +
        '   |\n' +
        "17 | \t\tassert(v == msg.value); // should hold but we don't support `delegatecall` properly yet.\n" +
        '   | \t\t^^^^^^^^^^^^^^^^^^^^^^\n' +
        '\n',
      message: 'CHC: Assertion violation happens here.',
      severity: 'warning',
      sourceLocation: [Object],
      type: 'Warning'
    }
  ],
  sources: { test: { id: 0 } }
}
### End output
### ... with solver Spacer Quant
### Entire output:
{
  errors: [
    {
      component: 'general',
      errorCode: '3805',
      formattedMessage: 'Warning: This is a pre-release compiler version, please do not use it in production.\n' +
        '\n',
      message: 'This is a pre-release compiler version, please do not use it in production.',
      severity: 'warning',
      type: 'Warning'
    },
    {
      component: 'general',
      errorCode: '1878',
      formattedMessage: 'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n' +
        '--> test\n' +
        '\n',
      message: 'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.',
      severity: 'warning',
      sourceLocation: [Object],
      type: 'Warning'
    },
    {
      component: 'general',
      errorCode: '3420',
      formattedMessage: 'Warning: Source file does not specify required compiler version!\n' +
        '--> test\n' +
        '\n',
      message: 'Source file does not specify required compiler version!',
      severity: 'warning',
      sourceLocation: [Object],
      type: 'Warning'
    },
    {
      component: 'general',
      errorCode: '5667',
      formattedMessage: 'Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n' +
        ' --> test:2:13:\n' +
        '  |\n' +
        '2 | \tfunction l(address payable a) public returns (uint) {\n' +
        '  | \t           ^^^^^^^^^^^^^^^^^\n' +
        '\n',
      message: 'Unused function parameter. Remove or comment out the variable name to silence this warning.',
      severity: 'warning',
      sourceLocation: [Object],
      type: 'Warning'
    },
    {
      component: 'general',
      errorCode: '4588',
      formattedMessage: 'Warning: Assertion checker does not yet implement this type of function call.\n' +
        '  --> test:13:12:\n' +
        '   |\n' +
        '13 | \t\tuint v = a.l();\n' +
        '   | \t\t         ^^^^^\n' +
        '\n',
      message: 'Assertion checker does not yet implement this type of function call.',
      severity: 'warning',
      sourceLocation: [Object],
      type: 'Warning'
    },
    {
      component: 'general',
      errorCode: '6328',
      formattedMessage: 'Warning: CHC: Assertion violation happens here.\n' +
        '  --> test:15:3:\n' +
        '   |\n' +
        '15 | \t\tassert(b1 == b2); // should fail because the called library can transfer with `this`s balance\n' +
        '   | \t\t^^^^^^^^^^^^^^^^\n' +
        '\n',
      message: 'CHC: Assertion violation happens here.',
      severity: 'warning',
      sourceLocation: [Object],
      type: 'Warning'
    },
    {
      component: 'general',
      errorCode: '6328',
      formattedMessage: 'Warning: CHC: Assertion violation happens here.\n' +
        '  --> test:16:3:\n' +
        '   |\n' +
        '16 | \t\tassert(x == 0); // should fail because of `delegatecall`\n' +
        '   | \t\t^^^^^^^^^^^^^^\n' +
        '\n',
      message: 'CHC: Assertion violation happens here.',
      severity: 'warning',
      sourceLocation: [Object],
      type: 'Warning'
    },
    {
      component: 'general',
      errorCode: '6328',
      formattedMessage: 'Warning: CHC: Assertion violation happens here.\n' +
        '  --> test:17:3:\n' +
        '   |\n' +
        "17 | \t\tassert(v == msg.value); // should hold but we don't support `delegatecall` properly yet.\n" +
        '   | \t\t^^^^^^^^^^^^^^^^^^^^^^\n' +
        '\n',
      message: 'CHC: Assertion violation happens here.',
      severity: 'warning',
      sourceLocation: [Object],
      type: 'Warning'
    }
  ],
  sources: { test: { id: 0 } }
}
### End output
### Running /home/solc-js/regression/blockchain_state/library_public_4.sol ...
### ... with solver Eldarica Vanilla
### Entire output:
{
  errors: [
    {
      component: 'general',
      errorCode: '3805',
      formattedMessage: 'Warning: This is a pre-release compiler version, please do not use it in production.\n' +
        '\n',
      message: 'This is a pre-release compiler version, please do not use it in production.',
      severity: 'warning',
      type: 'Warning'
    },
    {
      component: 'general',
      errorCode: '1878',
      formattedMessage: 'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n' +
        '--> test\n' +
        '\n',
      message: 'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.',
      severity: 'warning',
      sourceLocation: [Object],
      type: 'Warning'
    },
    {
      component: 'general',
      errorCode: '3420',
      formattedMessage: 'Warning: Source file does not specify required compiler version!\n' +
        '--> test\n' +
        '\n',
      message: 'Source file does not specify required compiler version!',
      severity: 'warning',
      sourceLocation: [Object],
      type: 'Warning'
    },
    {
      component: 'general',
      errorCode: '5667',
      formattedMessage: 'Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n' +
        ' --> test:2:13:\n' +
        '  |\n' +
        '2 | \tfunction l(address payable a) public returns (address) {\n' +
        '  | \t           ^^^^^^^^^^^^^^^^^\n' +
        '\n',
      message: 'Unused function parameter. Remove or comment out the variable name to silence this warning.',
      severity: 'warning',
      sourceLocation: [Object],
      type: 'Warning'
    },
    {
      component: 'general',
      errorCode: '2018',
      formattedMessage: 'Warning: Function state mutability can be restricted to view\n' +
        ' --> test:2:2:\n' +
        '  |\n' +
        '2 | \tfunction l(address payable a) public returns (address) {\n' +
        '  | \t^ (Relevant source part starts here and spans across multiple lines).\n' +
        '\n',
      message: 'Function state mutability can be restricted to view',
      severity: 'warning',
      sourceLocation: [Object],
      type: 'Warning'
    },
    {
      component: 'general',
      errorCode: '4588',
      formattedMessage: 'Warning: Assertion checker does not yet implement this type of function call.\n' +
        '  --> test:13:15:\n' +
        '   |\n' +
        '13 | \t\taddress v = a.l();\n' +
        '   | \t\t            ^^^^^\n' +
        '\n',
      message: 'Assertion checker does not yet implement this type of function call.',
      severity: 'warning',
      sourceLocation: [Object],
      type: 'Warning'
    },
    {
      component: 'general',
      errorCode: '6328',
      formattedMessage: 'Warning: CHC: Assertion violation happens here.\n' +
        '  --> test:15:3:\n' +
        '   |\n' +
        '15 | \t\tassert(b1 == b2); // should fail because the called library can transfer with `this`s balance\n' +
        '   | \t\t^^^^^^^^^^^^^^^^\n' +
        '\n',
      message: 'CHC: Assertion violation happens here.',
      severity: 'warning',
      sourceLocation: [Object],
      type: 'Warning'
    },
    {
      component: 'general',
      errorCode: '6328',
      formattedMessage: 'Warning: CHC: Assertion violation happens here.\n' +
        '  --> test:16:3:\n' +
        '   |\n' +
        '16 | \t\tassert(x == 0); // should fail because of `delegatecall`\n' +
        '   | \t\t^^^^^^^^^^^^^^\n' +
        '\n',
      message: 'CHC: Assertion violation happens here.',
      severity: 'warning',
      sourceLocation: [Object],
      type: 'Warning'
    },
    {
      component: 'general',
      errorCode: '6328',
      formattedMessage: 'Warning: CHC: Assertion violation happens here.\n' +
        '  --> test:17:3:\n' +
        '   |\n' +
        "17 | \t\tassert(v == msg.sender); // should hold but we don't support `delegatecall` properly yet.\n" +
        '   | \t\t^^^^^^^^^^^^^^^^^^^^^^^\n' +
        '\n',
      message: 'CHC: Assertion violation happens here.',
      severity: 'warning',
      sourceLocation: [Object],
      type: 'Warning'
    }
  ],
  sources: { test: { id: 0 } }
}
### End output
### ... with solver Spacer Quant
### Entire output:
{
  errors: [
    {
      component: 'general',
      errorCode: '3805',
      formattedMessage: 'Warning: This is a pre-release compiler version, please do not use it in production.\n' +
        '\n',
      message: 'This is a pre-release compiler version, please do not use it in production.',
      severity: 'warning',
      type: 'Warning'
    },
    {
      component: 'general',
      errorCode: '1878',
      formattedMessage: 'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n' +
        '--> test\n' +
        '\n',
      message: 'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.',
      severity: 'warning',
      sourceLocation: [Object],
      type: 'Warning'
    },
    {
      component: 'general',
      errorCode: '3420',
      formattedMessage: 'Warning: Source file does not specify required compiler version!\n' +
        '--> test\n' +
        '\n',
      message: 'Source file does not specify required compiler version!',
      severity: 'warning',
      sourceLocation: [Object],
      type: 'Warning'
    },
    {
      component: 'general',
      errorCode: '5667',
      formattedMessage: 'Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n' +
        ' --> test:2:13:\n' +
        '  |\n' +
        '2 | \tfunction l(address payable a) public returns (address) {\n' +
        '  | \t           ^^^^^^^^^^^^^^^^^\n' +
        '\n',
      message: 'Unused function parameter. Remove or comment out the variable name to silence this warning.',
      severity: 'warning',
      sourceLocation: [Object],
      type: 'Warning'
    },
    {
      component: 'general',
      errorCode: '2018',
      formattedMessage: 'Warning: Function state mutability can be restricted to view\n' +
        ' --> test:2:2:\n' +
        '  |\n' +
        '2 | \tfunction l(address payable a) public returns (address) {\n' +
        '  | \t^ (Relevant source part starts here and spans across multiple lines).\n' +
        '\n',
      message: 'Function state mutability can be restricted to view',
      severity: 'warning',
      sourceLocation: [Object],
      type: 'Warning'
    },
    {
      component: 'general',
      errorCode: '4588',
      formattedMessage: 'Warning: Assertion checker does not yet implement this type of function call.\n' +
        '  --> test:13:15:\n' +
        '   |\n' +
        '13 | \t\taddress v = a.l();\n' +
        '   | \t\t            ^^^^^\n' +
        '\n',
      message: 'Assertion checker does not yet implement this type of function call.',
      severity: 'warning',
      sourceLocation: [Object],
      type: 'Warning'
    },
    {
      component: 'general',
      errorCode: '6328',
      formattedMessage: 'Warning: CHC: Assertion violation happens here.\n' +
        '  --> test:15:3:\n' +
        '   |\n' +
        '15 | \t\tassert(b1 == b2); // should fail because the called library can transfer with `this`s balance\n' +
        '   | \t\t^^^^^^^^^^^^^^^^\n' +
        '\n',
      message: 'CHC: Assertion violation happens here.',
      severity: 'warning',
      sourceLocation: [Object],
      type: 'Warning'
    },
    {
      component: 'general',
      errorCode: '6328',
      formattedMessage: 'Warning: CHC: Assertion violation happens here.\n' +
        '  --> test:16:3:\n' +
        '   |\n' +
        '16 | \t\tassert(x == 0); // should fail because of `delegatecall`\n' +
        '   | \t\t^^^^^^^^^^^^^^\n' +
        '\n',
      message: 'CHC: Assertion violation happens here.',
      severity: 'warning',
      sourceLocation: [Object],
      type: 'Warning'
    },
    {
      component: 'general',
      errorCode: '6328',
      formattedMessage: 'Warning: CHC: Assertion violation happens here.\n' +
        '  --> test:17:3:\n' +
        '   |\n' +
        "17 | \t\tassert(v == msg.sender); // should hold but we don't support `delegatecall` properly yet.\n" +
        '   | \t\t^^^^^^^^^^^^^^^^^^^^^^^\n' +
        '\n',
      message: 'CHC: Assertion violation happens here.',
      severity: 'warning',
      sourceLocation: [Object],
      type: 'Warning'
    }
  ],
  sources: { test: { id: 0 } }
}
### End output
### Running /home/solc-js/regression/blockchain_state/this_does_not_change.sol ...
### ... with solver Eldarica Vanilla
### Entire output:
{
  errors: [
    {
      component: 'general',
      errorCode: '3805',
      formattedMessage: 'Warning: This is a pre-release compiler version, please do not use it in production.\n' +
        '\n',
      message: 'This is a pre-release compiler version, please do not use it in production.',
      severity: 'warning',
      type: 'Warning'
    },
    {
      component: 'general',
      errorCode: '1878',
      formattedMessage: 'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n' +
        '--> test\n' +
        '\n',
      message: 'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.',
      severity: 'warning',
      sourceLocation: [Object],
      type: 'Warning'
    },
    {
      component: 'general',
      errorCode: '3420',
      formattedMessage: 'Warning: Source file does not specify required compiler version!\n' +
        '--> test\n' +
        '\n',
      message: 'Source file does not specify required compiler version!',
      severity: 'warning',
      sourceLocation: [Object],
      type: 'Warning'
    }
  ],
  sources: { test: { id: 0 } }
}
### End output
### ... with solver Spacer Quant
### Entire output:
{
  errors: [
    {
      component: 'general',
      errorCode: '3805',
      formattedMessage: 'Warning: This is a pre-release compiler version, please do not use it in production.\n' +
        '\n',
      message: 'This is a pre-release compiler version, please do not use it in production.',
      severity: 'warning',
      type: 'Warning'
    },
    {
      component: 'general',
      errorCode: '1878',
      formattedMessage: 'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n' +
        '--> test\n' +
        '\n',
      message: 'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.',
      severity: 'warning',
      sourceLocation: [Object],
      type: 'Warning'
    },
    {
      component: 'general',
      errorCode: '3420',
      formattedMessage: 'Warning: Source file does not specify required compiler version!\n' +
        '--> test\n' +
        '\n',
      message: 'Source file does not specify required compiler version!',
      severity: 'warning',
      sourceLocation: [Object],
      type: 'Warning'
    }
  ],
  sources: { test: { id: 0 } }
}
### End output
### Running /home/solc-js/regression/blockchain_state/this_does_not_change_external_call.sol ...
### ... with solver Eldarica Vanilla
### Entire output:
{
  errors: [
    {
      component: 'general',
      errorCode: '3805',
      formattedMessage: 'Warning: This is a pre-release compiler version, please do not use it in production.\n' +
        '\n',
      message: 'This is a pre-release compiler version, please do not use it in production.',
      severity: 'warning',
      type: 'Warning'
    },
    {
      component: 'general',
      errorCode: '1878',
      formattedMessage: 'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n' +
        '--> test\n' +
        '\n',
      message: 'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.',
      severity: 'warning',
      sourceLocation: [Object],
      type: 'Warning'
    },
    {
      component: 'general',
      errorCode: '3420',
      formattedMessage: 'Warning: Source file does not specify required compiler version!\n' +
        '--> test\n' +
        '\n',
      message: 'Source file does not specify required compiler version!',
      severity: 'warning',
      sourceLocation: [Object],
      type: 'Warning'
    }
  ],
  sources: { test: { id: 0 } }
}
### End output
### ... with solver Spacer Quant
### Entire output:
{
  errors: [
    {
      component: 'general',
      errorCode: '3805',
      formattedMessage: 'Warning: This is a pre-release compiler version, please do not use it in production.\n' +
        '\n',
      message: 'This is a pre-release compiler version, please do not use it in production.',
      severity: 'warning',
      type: 'Warning'
    },
    {
      component: 'general',
      errorCode: '1878',
      formattedMessage: 'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n' +
        '--> test\n' +
        '\n',
      message: 'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.',
      severity: 'warning',
      sourceLocation: [Object],
      type: 'Warning'
    },
    {
      component: 'general',
      errorCode: '3420',
      formattedMessage: 'Warning: Source file does not specify required compiler version!\n' +
        '--> test\n' +
        '\n',
      message: 'Source file does not specify required compiler version!',
      severity: 'warning',
      sourceLocation: [Object],
      type: 'Warning'
    }
  ],
  sources: { test: { id: 0 } }
}
### End output
### Running /home/solc-js/regression/blockchain_state/this_does_not_change_internal_call.sol ...
### ... with solver Eldarica Vanilla
### Entire output:
{
  errors: [
    {
      component: 'general',
      errorCode: '3805',
      formattedMessage: 'Warning: This is a pre-release compiler version, please do not use it in production.\n' +
        '\n',
      message: 'This is a pre-release compiler version, please do not use it in production.',
      severity: 'warning',
      type: 'Warning'
    },
    {
      component: 'general',
      errorCode: '1878',
      formattedMessage: 'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n' +
        '--> test\n' +
        '\n',
      message: 'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.',
      severity: 'warning',
      sourceLocation: [Object],
      type: 'Warning'
    },
    {
      component: 'general',
      errorCode: '3420',
      formattedMessage: 'Warning: Source file does not specify required compiler version!\n' +
        '--> test\n' +
        '\n',
      message: 'Source file does not specify required compiler version!',
      severity: 'warning',
      sourceLocation: [Object],
      type: 'Warning'
    }
  ],
  sources: { test: { id: 0 } }
}
### End output
### ... with solver Spacer Quant
### Entire output:
{
  errors: [
    {
      component: 'general',
      errorCode: '3805',
      formattedMessage: 'Warning: This is a pre-release compiler version, please do not use it in production.\n' +
        '\n',
      message: 'This is a pre-release compiler version, please do not use it in production.',
      severity: 'warning',
      type: 'Warning'
    },
    {
      component: 'general',
      errorCode: '1878',
      formattedMessage: 'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n' +
        '--> test\n' +
        '\n',
      message: 'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.',
      severity: 'warning',
      sourceLocation: [Object],
      type: 'Warning'
    },
    {
      component: 'general',
      errorCode: '3420',
      formattedMessage: 'Warning: Source file does not specify required compiler version!\n' +
        '--> test\n' +
        '\n',
      message: 'Source file does not specify required compiler version!',
      severity: 'warning',
      sourceLocation: [Object],
      type: 'Warning'
    }
  ],
  sources: { test: { id: 0 } }
}
### End output
### Running /home/solc-js/regression/blockchain_state/transfer.sol ...
### ... with solver Eldarica Vanilla
### Entire output:
{
  errors: [
    {
      component: 'general',
      errorCode: '3805',
      formattedMessage: 'Warning: This is a pre-release compiler version, please do not use it in production.\n' +
        '\n',
      message: 'This is a pre-release compiler version, please do not use it in production.',
      severity: 'warning',
      type: 'Warning'
    },
    {
      component: 'general',
      errorCode: '1878',
      formattedMessage: 'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n' +
        '--> test\n' +
        '\n',
      message: 'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.',
      severity: 'warning',
      sourceLocation: [Object],
      type: 'Warning'
    },
    {
      component: 'general',
      errorCode: '3420',
      formattedMessage: 'Warning: Source file does not specify required compiler version!\n' +
        '--> test\n' +
        '\n',
      message: 'Source file does not specify required compiler version!',
      severity: 'warning',
      sourceLocation: [Object],
      type: 'Warning'
    },
    {
      component: 'general',
      errorCode: '6328',
      formattedMessage: 'Warning: CHC: Assertion violation happens here.\n' +
        ' --> test:7:3:\n' +
        '  |\n' +
        '7 | \t\tassert(address(this).balance > 500);\n' +
        '  | \t\t^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n' +
        '\n',
      message: 'CHC: Assertion violation happens here.',
      severity: 'warning',
      sourceLocation: [Object],
      type: 'Warning'
    }
  ],
  sources: { test: { id: 0 } }
}
### End output
### ... with solver Spacer Quant
### Entire output:
{
  errors: [
    {
      component: 'general',
      errorCode: '3805',
      formattedMessage: 'Warning: This is a pre-release compiler version, please do not use it in production.\n' +
        '\n',
      message: 'This is a pre-release compiler version, please do not use it in production.',
      severity: 'warning',
      type: 'Warning'
    },
    {
      component: 'general',
      errorCode: '1878',
      formattedMessage: 'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n' +
        '--> test\n' +
        '\n',
      message: 'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.',
      severity: 'warning',
      sourceLocation: [Object],
      type: 'Warning'
    },
    {
      component: 'general',
      errorCode: '3420',
      formattedMessage: 'Warning: Source file does not specify required compiler version!\n' +
        '--> test\n' +
        '\n',
      message: 'Source file does not specify required compiler version!',
      severity: 'warning',
      sourceLocation: [Object],
      type: 'Warning'
    },
    {
      component: 'general',
      errorCode: '6328',
      formattedMessage: 'Warning: CHC: Assertion violation happens here.\n' +
        ' --> test:7:3:\n' +
        '  |\n' +
        '7 | \t\tassert(address(this).balance > 500);\n' +
        '  | \t\t^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n' +
        '\n',
      message: 'CHC: Assertion violation happens here.',
      severity: 'warning',
      sourceLocation: [Object],
      type: 'Warning'
    }
  ],
  sources: { test: { id: 0 } }
}
### End output
{"/home/solc-js/regression/blockchain_state/balance_non_zero.sol":[{"notProved":0,"unsafe":2,"safe":0,"winner":true},{"notProved":0,"unsafe":2,"safe":0,"winner":true}],"/home/solc-js/regression/blockchain_state/balance_non_zero_2.sol":[{"notProved":0,"unsafe":1,"safe":0,"winner":true},{"notProved":0,"unsafe":1,"safe":0,"winner":true}],"/home/solc-js/regression/blockchain_state/balance_receive.sol":[{"notProved":0,"unsafe":2,"safe":0,"winner":true},{"notProved":0,"unsafe":2,"safe":0,"winner":true}],"/home/solc-js/regression/blockchain_state/balance_receive_2.sol":[{"notProved":0,"unsafe":1,"safe":0,"winner":true},{"notProved":0,"unsafe":1,"safe":0,"winner":true}],"/home/solc-js/regression/blockchain_state/balance_receive_3.sol":[{"notProved":0,"unsafe":1,"safe":0,"winner":true},{"notProved":0,"unsafe":1,"safe":0,"winner":true}],"/home/solc-js/regression/blockchain_state/balance_receive_4.sol":[{"notProved":0,"unsafe":1,"safe":0,"winner":true},{"notProved":0,"unsafe":1,"safe":0,"winner":true}],"/home/solc-js/regression/blockchain_state/balance_receive_5.sol":[{"notProved":0,"unsafe":1,"safe":0,"winner":true},{"notProved":0,"unsafe":1,"safe":0,"winner":true}],"/home/solc-js/regression/blockchain_state/balance_receive_calls.sol":[{"notProved":0,"unsafe":3,"safe":0,"winner":true},{"notProved":0,"unsafe":3,"safe":0,"winner":true}],"/home/solc-js/regression/blockchain_state/balance_receive_ext_calls.sol":[{"notProved":1,"unsafe":1,"safe":0,"winner":false},{"notProved":0,"unsafe":1,"safe":1,"winner":true}],"/home/solc-js/regression/blockchain_state/balance_receive_ext_calls_2.sol":[{"notProved":1,"unsafe":1,"safe":0,"winner":false},{"notProved":0,"unsafe":1,"safe":1,"winner":true}],"/home/solc-js/regression/blockchain_state/balance_receive_ext_calls_mutex.sol":[{"notProved":0,"unsafe":1,"safe":0,"winner":true},{"notProved":0,"unsafe":1,"safe":0,"winner":true}],"/home/solc-js/regression/blockchain_state/balance_spend.sol":[{"notProved":0,"unsafe":1,"safe":0,"winner":true},{"notProved":0,"unsafe":1,"safe":0,"winner":true}],"/home/solc-js/regression/blockchain_state/balance_spend_2.sol":[{"notProved":1,"unsafe":2,"safe":0,"winner":false},{"notProved":0,"unsafe":3,"safe":0,"winner":true}],"/home/solc-js/regression/blockchain_state/balance_zero.sol":[{"notProved":0,"unsafe":2,"safe":0,"winner":true},{"notProved":0,"unsafe":2,"safe":0,"winner":true}],"/home/solc-js/regression/blockchain_state/balance_zero_2.sol":[{"notProved":0,"unsafe":2,"safe":0,"winner":true},{"notProved":0,"unsafe":2,"safe":0,"winner":true}],"/home/solc-js/regression/blockchain_state/balance_zero_3.sol":[{"notProved":0,"unsafe":4,"safe":0,"winner":true},{"notProved":0,"unsafe":4,"safe":0,"winner":true}],"/home/solc-js/regression/blockchain_state/balance_zero_4.sol":[{"notProved":0,"unsafe":4,"safe":0,"winner":true},{"notProved":0,"unsafe":4,"safe":0,"winner":true}],"/home/solc-js/regression/blockchain_state/decreasing_balance.sol":[{"notProved":0,"unsafe":1,"safe":0,"winner":true},{"notProved":0,"unsafe":1,"safe":0,"winner":true}],"/home/solc-js/regression/blockchain_state/free_function_1.sol":[{"notProved":0,"unsafe":0,"safe":0,"winner":true},{"notProved":0,"unsafe":0,"safe":0,"winner":true}],"/home/solc-js/regression/blockchain_state/free_function_2.sol":[{"notProved":0,"unsafe":1,"safe":0,"winner":true},{"notProved":0,"unsafe":1,"safe":0,"winner":true}],"/home/solc-js/regression/blockchain_state/library_internal_1.sol":[{"notProved":0,"unsafe":0,"safe":0,"winner":true},{"notProved":0,"unsafe":0,"safe":0,"winner":true}],"/home/solc-js/regression/blockchain_state/library_internal_2.sol":[{"notProved":0,"unsafe":1,"safe":0,"winner":true},{"notProved":0,"unsafe":1,"safe":0,"winner":true}],"/home/solc-js/regression/blockchain_state/library_public_1.sol":[{"notProved":0,"unsafe":2,"safe":0,"winner":true},{"notProved":0,"unsafe":2,"safe":0,"winner":true}],"/home/solc-js/regression/blockchain_state/library_public_2.sol":[{"notProved":0,"unsafe":2,"safe":0,"winner":true},{"notProved":0,"unsafe":2,"safe":0,"winner":true}],"/home/solc-js/regression/blockchain_state/library_public_3.sol":[{"notProved":0,"unsafe":3,"safe":0,"winner":true},{"notProved":0,"unsafe":3,"safe":0,"winner":true}],"/home/solc-js/regression/blockchain_state/library_public_4.sol":[{"notProved":0,"unsafe":3,"safe":0,"winner":true},{"notProved":0,"unsafe":3,"safe":0,"winner":true}],"/home/solc-js/regression/blockchain_state/this_does_not_change.sol":[{"notProved":0,"unsafe":0,"safe":0,"winner":true},{"notProved":0,"unsafe":0,"safe":0,"winner":true}],"/home/solc-js/regression/blockchain_state/this_does_not_change_external_call.sol":[{"notProved":0,"unsafe":0,"safe":0,"winner":true},{"notProved":0,"unsafe":0,"safe":0,"winner":true}],"/home/solc-js/regression/blockchain_state/this_does_not_change_internal_call.sol":[{"notProved":0,"unsafe":0,"safe":0,"winner":true},{"notProved":0,"unsafe":0,"safe":0,"winner":true}],"/home/solc-js/regression/blockchain_state/transfer.sol":[{"notProved":0,"unsafe":1,"safe":0,"winner":true},{"notProved":0,"unsafe":1,"safe":0,"winner":true}]}
Category		Total		Eldarica		Spacer Quant
blockchain_state		30		27		30
