[ '/home/solc-js', 'math', '10' ]
/home/solc-js/regression/math
### Running /home/solc-js/regression/math/addmod_1.sol ...
### ... with solver Eldarica Vanilla
### Entire output:
{
  errors: [
    {
      component: 'general',
      errorCode: '3805',
      formattedMessage: 'Warning: This is a pre-release compiler version, please do not use it in production.\n' +
        '\n',
      message: 'This is a pre-release compiler version, please do not use it in production.',
      severity: 'warning',
      type: 'Warning'
    },
    {
      component: 'general',
      errorCode: '1878',
      formattedMessage: 'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n' +
        '--> test\n' +
        '\n',
      message: 'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.',
      severity: 'warning',
      sourceLocation: [Object],
      type: 'Warning'
    },
    {
      component: 'general',
      errorCode: '3420',
      formattedMessage: 'Warning: Source file does not specify required compiler version!\n' +
        '--> test\n' +
        '\n',
      message: 'Source file does not specify required compiler version!',
      severity: 'warning',
      sourceLocation: [Object],
      type: 'Warning'
    }
  ],
  sources: { test: { id: 0 } }
}
### End output
### ... with solver Spacer Quant
### Entire output:
{
  errors: [
    {
      component: 'general',
      errorCode: '3805',
      formattedMessage: 'Warning: This is a pre-release compiler version, please do not use it in production.\n' +
        '\n',
      message: 'This is a pre-release compiler version, please do not use it in production.',
      severity: 'warning',
      type: 'Warning'
    },
    {
      component: 'general',
      errorCode: '1878',
      formattedMessage: 'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n' +
        '--> test\n' +
        '\n',
      message: 'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.',
      severity: 'warning',
      sourceLocation: [Object],
      type: 'Warning'
    },
    {
      component: 'general',
      errorCode: '3420',
      formattedMessage: 'Warning: Source file does not specify required compiler version!\n' +
        '--> test\n' +
        '\n',
      message: 'Source file does not specify required compiler version!',
      severity: 'warning',
      sourceLocation: [Object],
      type: 'Warning'
    },
    {
      component: 'general',
      errorCode: '6328',
      formattedMessage: 'Warning: CHC: Assertion violation happens here.\n' +
        ' --> test:6:3:\n' +
        '  |\n' +
        '6 | \t\tassert(x == 1);\n' +
        '  | \t\t^^^^^^^^^^^^^^\n' +
        '\n',
      message: 'CHC: Assertion violation happens here.',
      severity: 'warning',
      sourceLocation: [Object],
      type: 'Warning'
    }
  ],
  sources: { test: { id: 0 } }
}
### End output
### Running /home/solc-js/regression/math/addmod_mulmod.sol ...
### ... with solver Eldarica Vanilla
### Entire output:
{
  errors: [
    {
      component: 'general',
      errorCode: '3805',
      formattedMessage: 'Warning: This is a pre-release compiler version, please do not use it in production.\n' +
        '\n',
      message: 'This is a pre-release compiler version, please do not use it in production.',
      severity: 'warning',
      type: 'Warning'
    },
    {
      component: 'general',
      errorCode: '1878',
      formattedMessage: 'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n' +
        '--> test\n' +
        '\n',
      message: 'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.',
      severity: 'warning',
      sourceLocation: [Object],
      type: 'Warning'
    },
    {
      component: 'general',
      errorCode: '3420',
      formattedMessage: 'Warning: Source file does not specify required compiler version!\n' +
        '--> test\n' +
        '\n',
      message: 'Source file does not specify required compiler version!',
      severity: 'warning',
      sourceLocation: [Object],
      type: 'Warning'
    }
  ],
  sources: { test: { id: 0 } }
}
### End output
### ... with solver Spacer Quant
### Entire output:
{
  errors: [
    {
      component: 'general',
      errorCode: '3805',
      formattedMessage: 'Warning: This is a pre-release compiler version, please do not use it in production.\n' +
        '\n',
      message: 'This is a pre-release compiler version, please do not use it in production.',
      severity: 'warning',
      type: 'Warning'
    },
    {
      component: 'general',
      errorCode: '1878',
      formattedMessage: 'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n' +
        '--> test\n' +
        '\n',
      message: 'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.',
      severity: 'warning',
      sourceLocation: [Object],
      type: 'Warning'
    },
    {
      component: 'general',
      errorCode: '3420',
      formattedMessage: 'Warning: Source file does not specify required compiler version!\n' +
        '--> test\n' +
        '\n',
      message: 'Source file does not specify required compiler version!',
      severity: 'warning',
      sourceLocation: [Object],
      type: 'Warning'
    }
  ],
  sources: { test: { id: 0 } }
}
### End output
### Running /home/solc-js/regression/math/addmod_mulmod_zero.sol ...
### ... with solver Eldarica Vanilla
### Entire output:
{
  errors: [
    {
      component: 'general',
      errorCode: '3805',
      formattedMessage: 'Warning: This is a pre-release compiler version, please do not use it in production.\n' +
        '\n',
      message: 'This is a pre-release compiler version, please do not use it in production.',
      severity: 'warning',
      type: 'Warning'
    },
    {
      component: 'general',
      errorCode: '1878',
      formattedMessage: 'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n' +
        '--> test\n' +
        '\n',
      message: 'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.',
      severity: 'warning',
      sourceLocation: [Object],
      type: 'Warning'
    },
    {
      component: 'general',
      errorCode: '3420',
      formattedMessage: 'Warning: Source file does not specify required compiler version!\n' +
        '--> test\n' +
        '\n',
      message: 'Source file does not specify required compiler version!',
      severity: 'warning',
      sourceLocation: [Object],
      type: 'Warning'
    },
    {
      component: 'general',
      errorCode: '6321',
      formattedMessage: 'Warning: Unnamed return variable can remain unassigned. Add an explicit return with value to all non-reverting code paths or name the variable.\n' +
        '  --> test:12:36:\n' +
        '   |\n' +
        '12 | \tfunction h() public pure returns (uint256) {\n' +
        '   | \t                                  ^^^^^^^\n' +
        '\n',
      message: 'Unnamed return variable can remain unassigned. Add an explicit return with value to all non-reverting code paths or name the variable.',
      severity: 'warning',
      sourceLocation: [Object],
      type: 'Warning'
    }
  ],
  sources: { test: { id: 0 } }
}
### End output
### ... with solver Spacer Quant
### Entire output:
{
  errors: [
    {
      component: 'general',
      errorCode: '3805',
      formattedMessage: 'Warning: This is a pre-release compiler version, please do not use it in production.\n' +
        '\n',
      message: 'This is a pre-release compiler version, please do not use it in production.',
      severity: 'warning',
      type: 'Warning'
    },
    {
      component: 'general',
      errorCode: '1878',
      formattedMessage: 'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n' +
        '--> test\n' +
        '\n',
      message: 'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.',
      severity: 'warning',
      sourceLocation: [Object],
      type: 'Warning'
    },
    {
      component: 'general',
      errorCode: '3420',
      formattedMessage: 'Warning: Source file does not specify required compiler version!\n' +
        '--> test\n' +
        '\n',
      message: 'Source file does not specify required compiler version!',
      severity: 'warning',
      sourceLocation: [Object],
      type: 'Warning'
    },
    {
      component: 'general',
      errorCode: '6321',
      formattedMessage: 'Warning: Unnamed return variable can remain unassigned. Add an explicit return with value to all non-reverting code paths or name the variable.\n' +
        '  --> test:12:36:\n' +
        '   |\n' +
        '12 | \tfunction h() public pure returns (uint256) {\n' +
        '   | \t                                  ^^^^^^^\n' +
        '\n',
      message: 'Unnamed return variable can remain unassigned. Add an explicit return with value to all non-reverting code paths or name the variable.',
      severity: 'warning',
      sourceLocation: [Object],
      type: 'Warning'
    },
    {
      component: 'general',
      errorCode: '6328',
      formattedMessage: 'Warning: CHC: Assertion violation happens here.\n' +
        ' --> test:4:3:\n' +
        '  |\n' +
        '4 | \t\tassert(x < d);\n' +
        '  | \t\t^^^^^^^^^^^^^\n' +
        '\n',
      message: 'CHC: Assertion violation happens here.',
      severity: 'warning',
      sourceLocation: [Object],
      type: 'Warning'
    },
    {
      component: 'general',
      errorCode: '6328',
      formattedMessage: 'Warning: CHC: Assertion violation happens here.\n' +
        ' --> test:9:3:\n' +
        '  |\n' +
        '9 | \t\tassert(x < d);\n' +
        '  | \t\t^^^^^^^^^^^^^\n' +
        '\n',
      message: 'CHC: Assertion violation happens here.',
      severity: 'warning',
      sourceLocation: [Object],
      type: 'Warning'
    }
  ],
  sources: { test: { id: 0 } }
}
### End output
### Running /home/solc-js/regression/math/addmulmod.sol ...
### ... with solver Eldarica Vanilla
### Entire output:
{
  errors: [
    {
      component: 'general',
      errorCode: '3805',
      formattedMessage: 'Warning: This is a pre-release compiler version, please do not use it in production.\n' +
        '\n',
      message: 'This is a pre-release compiler version, please do not use it in production.',
      severity: 'warning',
      type: 'Warning'
    },
    {
      component: 'general',
      errorCode: '1878',
      formattedMessage: 'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n' +
        '--> test\n' +
        '\n',
      message: 'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.',
      severity: 'warning',
      sourceLocation: [Object],
      type: 'Warning'
    },
    {
      component: 'general',
      errorCode: '3420',
      formattedMessage: 'Warning: Source file does not specify required compiler version!\n' +
        '--> test\n' +
        '\n',
      message: 'Source file does not specify required compiler version!',
      severity: 'warning',
      sourceLocation: [Object],
      type: 'Warning'
    },
    {
      component: 'general',
      errorCode: '5840',
      formattedMessage: 'Warning: CHC: 1 verification condition(s) could not be proved. Enable the model checker option "show unproved" to see all of them. Consider choosing a specific contract to be verified in order to reduce the solving problems. Consider increasing the timeout per query.\n' +
        '\n',
      message: 'CHC: 1 verification condition(s) could not be proved. Enable the model checker option "show unproved" to see all of them. Consider choosing a specific contract to be verified in order to reduce the solving problems. Consider increasing the timeout per query.',
      severity: 'warning',
      type: 'Warning'
    }
  ],
  sources: { test: { id: 0 } }
}
### End output
### ... with solver Spacer Quant
### Entire output:
{
  errors: [
    {
      component: 'general',
      errorCode: '3805',
      formattedMessage: 'Warning: This is a pre-release compiler version, please do not use it in production.\n' +
        '\n',
      message: 'This is a pre-release compiler version, please do not use it in production.',
      severity: 'warning',
      type: 'Warning'
    },
    {
      component: 'general',
      errorCode: '1878',
      formattedMessage: 'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n' +
        '--> test\n' +
        '\n',
      message: 'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.',
      severity: 'warning',
      sourceLocation: [Object],
      type: 'Warning'
    },
    {
      component: 'general',
      errorCode: '3420',
      formattedMessage: 'Warning: Source file does not specify required compiler version!\n' +
        '--> test\n' +
        '\n',
      message: 'Source file does not specify required compiler version!',
      severity: 'warning',
      sourceLocation: [Object],
      type: 'Warning'
    }
  ],
  sources: { test: { id: 0 } }
}
### End output
### Running /home/solc-js/regression/math/mulmod_1.sol ...
### ... with solver Eldarica Vanilla
### Entire output:
{
  errors: [
    {
      component: 'general',
      errorCode: '3805',
      formattedMessage: 'Warning: This is a pre-release compiler version, please do not use it in production.\n' +
        '\n',
      message: 'This is a pre-release compiler version, please do not use it in production.',
      severity: 'warning',
      type: 'Warning'
    },
    {
      component: 'general',
      errorCode: '1878',
      formattedMessage: 'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n' +
        '--> test\n' +
        '\n',
      message: 'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.',
      severity: 'warning',
      sourceLocation: [Object],
      type: 'Warning'
    },
    {
      component: 'general',
      errorCode: '3420',
      formattedMessage: 'Warning: Source file does not specify required compiler version!\n' +
        '--> test\n' +
        '\n',
      message: 'Source file does not specify required compiler version!',
      severity: 'warning',
      sourceLocation: [Object],
      type: 'Warning'
    }
  ],
  sources: { test: { id: 0 } }
}
### End output
### ... with solver Spacer Quant
### Entire output:
{
  errors: [
    {
      component: 'general',
      errorCode: '3805',
      formattedMessage: 'Warning: This is a pre-release compiler version, please do not use it in production.\n' +
        '\n',
      message: 'This is a pre-release compiler version, please do not use it in production.',
      severity: 'warning',
      type: 'Warning'
    },
    {
      component: 'general',
      errorCode: '1878',
      formattedMessage: 'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n' +
        '--> test\n' +
        '\n',
      message: 'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.',
      severity: 'warning',
      sourceLocation: [Object],
      type: 'Warning'
    },
    {
      component: 'general',
      errorCode: '3420',
      formattedMessage: 'Warning: Source file does not specify required compiler version!\n' +
        '--> test\n' +
        '\n',
      message: 'Source file does not specify required compiler version!',
      severity: 'warning',
      sourceLocation: [Object],
      type: 'Warning'
    },
    {
      component: 'general',
      errorCode: '6328',
      formattedMessage: 'Warning: CHC: Assertion violation happens here.\n' +
        ' --> test:6:3:\n' +
        '  |\n' +
        '6 | \t\tassert(x == 1);\n' +
        '  | \t\t^^^^^^^^^^^^^^\n' +
        '\n',
      message: 'CHC: Assertion violation happens here.',
      severity: 'warning',
      sourceLocation: [Object],
      type: 'Warning'
    }
  ],
  sources: { test: { id: 0 } }
}
### End output
{"/home/solc-js/regression/math/addmod_1.sol":[{"notProved":0,"unsafe":0,"safe":1,"winner":true},{"notProved":0,"unsafe":1,"safe":0,"winner":true}],"/home/solc-js/regression/math/addmod_mulmod.sol":[{"notProved":0,"unsafe":0,"safe":0,"winner":true},{"notProved":0,"unsafe":0,"safe":0,"winner":true}],"/home/solc-js/regression/math/addmod_mulmod_zero.sol":[{"notProved":0,"unsafe":0,"safe":2,"winner":true},{"notProved":0,"unsafe":2,"safe":0,"winner":true}],"/home/solc-js/regression/math/addmulmod.sol":[{"notProved":1,"unsafe":0,"safe":0,"winner":false},{"notProved":0,"unsafe":0,"safe":1,"winner":true}],"/home/solc-js/regression/math/mulmod_1.sol":[{"notProved":0,"unsafe":0,"safe":1,"winner":true},{"notProved":0,"unsafe":1,"safe":0,"winner":true}]}
Category		Total		Eldarica		Spacer Quant
math		5		4		5
