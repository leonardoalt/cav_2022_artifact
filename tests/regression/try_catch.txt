[ [32m'/home/solc-js'[39m, [32m'try_catch'[39m, [32m'10'[39m ]
/home/solc-js/regression/try_catch
### Running /home/solc-js/regression/try_catch/try_1.sol ...
### ... with solver Eldarica Vanilla
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'5667'[39m,
      formattedMessage: [32m'Warning: Unused try/catch parameter. Remove or comment out the variable name to silence this warning.\n'[39m +
        [32m'  --> test:13:12:\n'[39m +
        [32m'   |\n'[39m +
        [32m'13 | \t\t} catch (bytes memory s) {\n'[39m +
        [32m'   | \t\t         ^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Unused try/catch parameter. Remove or comment out the variable name to silence this warning.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m'  --> test:16:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'16 | \t\tassert(success); // fails for now, since external  ...\n'[39m +
        [32m'   | \t\t^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### ... with solver Spacer Quant
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'5667'[39m,
      formattedMessage: [32m'Warning: Unused try/catch parameter. Remove or comment out the variable name to silence this warning.\n'[39m +
        [32m'  --> test:13:12:\n'[39m +
        [32m'   |\n'[39m +
        [32m'13 | \t\t} catch (bytes memory s) {\n'[39m +
        [32m'   | \t\t         ^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Unused try/catch parameter. Remove or comment out the variable name to silence this warning.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m'  --> test:16:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'16 | \t\tassert(success); // fails for now, since external  ...\n'[39m +
        [32m'   | \t\t^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### Running /home/solc-js/regression/try_catch/try_2.sol ...
### ... with solver Eldarica Vanilla
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'5667'[39m,
      formattedMessage: [32m'Warning: Unused try/catch parameter. Remove or comment out the variable name to silence this warning.\n'[39m +
        [32m'  --> test:12:12:\n'[39m +
        [32m'   |\n'[39m +
        [32m'12 | \t\t} catch (bytes memory s) {\n'[39m +
        [32m'   | \t\t         ^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Unused try/catch parameter. Remove or comment out the variable name to silence this warning.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### ... with solver Spacer Quant
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'5667'[39m,
      formattedMessage: [32m'Warning: Unused try/catch parameter. Remove or comment out the variable name to silence this warning.\n'[39m +
        [32m'  --> test:12:12:\n'[39m +
        [32m'   |\n'[39m +
        [32m'12 | \t\t} catch (bytes memory s) {\n'[39m +
        [32m'   | \t\t         ^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Unused try/catch parameter. Remove or comment out the variable name to silence this warning.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### Running /home/solc-js/regression/try_catch/try_3.sol ...
### ... with solver Eldarica Vanilla
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'5667'[39m,
      formattedMessage: [32m'Warning: Unused try/catch parameter. Remove or comment out the variable name to silence this warning.\n'[39m +
        [32m'  --> test:17:12:\n'[39m +
        [32m'   |\n'[39m +
        [32m'17 | \t\t} catch (bytes memory s) {\n'[39m +
        [32m'   | \t\t         ^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Unused try/catch parameter. Remove or comment out the variable name to silence this warning.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m'  --> test:18:4:\n'[39m +
        [32m'   |\n'[39m +
        [32m'18 | \t\t\tassert(x == 0); // should fail - state is reverted to the state after postinc(), but before the call to this.g()\n'[39m +
        [32m'   | \t\t\t^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### ... with solver Spacer Quant
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'5667'[39m,
      formattedMessage: [32m'Warning: Unused try/catch parameter. Remove or comment out the variable name to silence this warning.\n'[39m +
        [32m'  --> test:17:12:\n'[39m +
        [32m'   |\n'[39m +
        [32m'17 | \t\t} catch (bytes memory s) {\n'[39m +
        [32m'   | \t\t         ^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Unused try/catch parameter. Remove or comment out the variable name to silence this warning.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m'  --> test:18:4:\n'[39m +
        [32m'   |\n'[39m +
        [32m'18 | \t\t\tassert(x == 0); // should fail - state is reverted to the state after postinc(), but before the call to this.g()\n'[39m +
        [32m'   | \t\t\t^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### Running /home/solc-js/regression/try_catch/try_4.sol ...
### ... with solver Eldarica Vanilla
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m'  --> test:17:4:\n'[39m +
        [32m'   |\n'[39m +
        [32m'17 | \t\t\tassert(x == 0); // should fail, x can be anything here\n'[39m +
        [32m'   | \t\t\t^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m'  --> test:20:4:\n'[39m +
        [32m'   |\n'[39m +
        [32m'20 | \t\t\tassert(x == 1); // should fail\n'[39m +
        [32m'   | \t\t\t^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### ... with solver Spacer Quant
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m'  --> test:17:4:\n'[39m +
        [32m'   |\n'[39m +
        [32m'17 | \t\t\tassert(x == 0); // should fail, x can be anything here\n'[39m +
        [32m'   | \t\t\t^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m'  --> test:20:4:\n'[39m +
        [32m'   |\n'[39m +
        [32m'20 | \t\t\tassert(x == 1); // should fail\n'[39m +
        [32m'   | \t\t\t^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### Running /home/solc-js/regression/try_catch/try_5.sol ...
### ... with solver Eldarica Vanilla
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m'  --> test:21:4:\n'[39m +
        [32m'   |\n'[39m +
        [32m'21 | \t\t\tassert(x == 1); // should fail\n'[39m +
        [32m'   | \t\t\t^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### ... with solver Spacer Quant
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m'  --> test:21:4:\n'[39m +
        [32m'   |\n'[39m +
        [32m'21 | \t\t\tassert(x == 1); // should fail\n'[39m +
        [32m'   | \t\t\t^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### Running /home/solc-js/regression/try_catch/try_call_in_catch_1.sol ...
### ... with solver Eldarica Vanilla
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6321'[39m,
      formattedMessage: [32m'Warning: Unnamed return variable can remain unassigned. Add an explicit return with value to all non-reverting code paths or name the variable.\n'[39m +
        [32m' --> test:2:34:\n'[39m +
        [32m'  |\n'[39m +
        [32m'2 |     function f() public returns (uint) {\n'[39m +
        [32m'  |                                  ^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Unnamed return variable can remain unassigned. Add an explicit return with value to all non-reverting code paths or name the variable.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### ... with solver Spacer Quant
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6321'[39m,
      formattedMessage: [32m'Warning: Unnamed return variable can remain unassigned. Add an explicit return with value to all non-reverting code paths or name the variable.\n'[39m +
        [32m' --> test:2:34:\n'[39m +
        [32m'  |\n'[39m +
        [32m'2 |     function f() public returns (uint) {\n'[39m +
        [32m'  |                                  ^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Unnamed return variable can remain unassigned. Add an explicit return with value to all non-reverting code paths or name the variable.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### Running /home/solc-js/regression/try_catch/try_call_in_catch_2.sol ...
### ... with solver Eldarica Vanilla
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6321'[39m,
      formattedMessage: [32m'Warning: Unnamed return variable can remain unassigned. Add an explicit return with value to all non-reverting code paths or name the variable.\n'[39m +
        [32m' --> test:2:34:\n'[39m +
        [32m'  |\n'[39m +
        [32m'2 |     function f() public returns (uint, uint) {\n'[39m +
        [32m'  |                                  ^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Unnamed return variable can remain unassigned. Add an explicit return with value to all non-reverting code paths or name the variable.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6321'[39m,
      formattedMessage: [32m'Warning: Unnamed return variable can remain unassigned. Add an explicit return with value to all non-reverting code paths or name the variable.\n'[39m +
        [32m' --> test:2:40:\n'[39m +
        [32m'  |\n'[39m +
        [32m'2 |     function f() public returns (uint, uint) {\n'[39m +
        [32m'  |                                        ^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Unnamed return variable can remain unassigned. Add an explicit return with value to all non-reverting code paths or name the variable.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'2072'[39m,
      formattedMessage: [32m'Warning: Unused local variable.\n'[39m +
        [32m' --> test:9:3:\n'[39m +
        [32m'  |\n'[39m +
        [32m'9 | \t\tint test = 1;\n'[39m +
        [32m'  | \t\t^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Unused local variable.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### ... with solver Spacer Quant
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6321'[39m,
      formattedMessage: [32m'Warning: Unnamed return variable can remain unassigned. Add an explicit return with value to all non-reverting code paths or name the variable.\n'[39m +
        [32m' --> test:2:34:\n'[39m +
        [32m'  |\n'[39m +
        [32m'2 |     function f() public returns (uint, uint) {\n'[39m +
        [32m'  |                                  ^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Unnamed return variable can remain unassigned. Add an explicit return with value to all non-reverting code paths or name the variable.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6321'[39m,
      formattedMessage: [32m'Warning: Unnamed return variable can remain unassigned. Add an explicit return with value to all non-reverting code paths or name the variable.\n'[39m +
        [32m' --> test:2:40:\n'[39m +
        [32m'  |\n'[39m +
        [32m'2 |     function f() public returns (uint, uint) {\n'[39m +
        [32m'  |                                        ^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Unnamed return variable can remain unassigned. Add an explicit return with value to all non-reverting code paths or name the variable.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'2072'[39m,
      formattedMessage: [32m'Warning: Unused local variable.\n'[39m +
        [32m' --> test:9:3:\n'[39m +
        [32m'  |\n'[39m +
        [32m'9 | \t\tint test = 1;\n'[39m +
        [32m'  | \t\t^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Unused local variable.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### Running /home/solc-js/regression/try_catch/try_inside_if.sol ...
### ... with solver Eldarica Vanilla
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### ... with solver Spacer Quant
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### Running /home/solc-js/regression/try_catch/try_inside_while.sol ...
### ... with solver Eldarica Vanilla
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6321'[39m,
      formattedMessage: [32m'Warning: Unnamed return variable can remain unassigned. Add an explicit return with value to all non-reverting code paths or name the variable.\n'[39m +
        [32m' --> test:2:31:\n'[39m +
        [32m'  |\n'[39m +
        [32m'2 | \tfunction f() public returns (uint) {\n'[39m +
        [32m'  | \t                             ^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Unnamed return variable can remain unassigned. Add an explicit return with value to all non-reverting code paths or name the variable.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### ... with solver Spacer Quant
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6321'[39m,
      formattedMessage: [32m'Warning: Unnamed return variable can remain unassigned. Add an explicit return with value to all non-reverting code paths or name the variable.\n'[39m +
        [32m' --> test:2:31:\n'[39m +
        [32m'  |\n'[39m +
        [32m'2 | \tfunction f() public returns (uint) {\n'[39m +
        [32m'  | \t                             ^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Unnamed return variable can remain unassigned. Add an explicit return with value to all non-reverting code paths or name the variable.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### Running /home/solc-js/regression/try_catch/try_multiple_catch_clauses.sol ...
### ... with solver Eldarica Vanilla
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m'  --> test:20:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'20 | \t\tassert(success); // can fail\n'[39m +
        [32m'   | \t\t^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### ... with solver Spacer Quant
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m'  --> test:20:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'20 | \t\tassert(success); // can fail\n'[39m +
        [32m'   | \t\t^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### Running /home/solc-js/regression/try_catch/try_multiple_catch_clauses_2.sol ...
### ... with solver Eldarica Vanilla
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m'  --> test:17:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'17 | \t\tassert(x == 0); // should fail\n'[39m +
        [32m'   | \t\t^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### ... with solver Spacer Quant
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m'  --> test:17:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'17 | \t\tassert(x == 0); // should fail\n'[39m +
        [32m'   | \t\t^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### Running /home/solc-js/regression/try_catch/try_multiple_returned_values.sol ...
### ... with solver Eldarica Vanilla
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'2519'[39m,
      formattedMessage: [32m'Warning: This declaration shadows an existing declaration.\n'[39m +
        [32m'  --> test:12:22:\n'[39m +
        [32m'   |\n'[39m +
        [32m'12 | \t\ttry d.d() returns (uint x, bool c) {\n'[39m +
        [32m'   | \t\t                   ^^^^^^\n'[39m +
        [32m'Note: The shadowed declaration is here:\n'[39m +
        [32m' --> test:7:2:\n'[39m +
        [32m'  |\n'[39m +
        [32m'7 | \tint x;\n'[39m +
        [32m'  | \t^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'This declaration shadows an existing declaration.'[39m,
      secondarySourceLocations: [36m[Array][39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m'  --> test:13:4:\n'[39m +
        [32m'   |\n'[39m +
        [32m'13 | \t\t\tassert(x == 0); // should fail, x is the local variable shadowing the state variable\n'[39m +
        [32m'   | \t\t\t^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m'  --> test:14:4:\n'[39m +
        [32m'   |\n'[39m +
        [32m'14 | \t\t\tassert(!c); // should fail, c can be anything\n'[39m +
        [32m'   | \t\t\t^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m'  --> test:17:4:\n'[39m +
        [32m'   |\n'[39m +
        [32m'17 | \t\t\tassert(x == 1); // should fail\n'[39m +
        [32m'   | \t\t\t^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### ... with solver Spacer Quant
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'2519'[39m,
      formattedMessage: [32m'Warning: This declaration shadows an existing declaration.\n'[39m +
        [32m'  --> test:12:22:\n'[39m +
        [32m'   |\n'[39m +
        [32m'12 | \t\ttry d.d() returns (uint x, bool c) {\n'[39m +
        [32m'   | \t\t                   ^^^^^^\n'[39m +
        [32m'Note: The shadowed declaration is here:\n'[39m +
        [32m' --> test:7:2:\n'[39m +
        [32m'  |\n'[39m +
        [32m'7 | \tint x;\n'[39m +
        [32m'  | \t^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'This declaration shadows an existing declaration.'[39m,
      secondarySourceLocations: [36m[Array][39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m'  --> test:13:4:\n'[39m +
        [32m'   |\n'[39m +
        [32m'13 | \t\t\tassert(x == 0); // should fail, x is the local variable shadowing the state variable\n'[39m +
        [32m'   | \t\t\t^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m'  --> test:14:4:\n'[39m +
        [32m'   |\n'[39m +
        [32m'14 | \t\t\tassert(!c); // should fail, c can be anything\n'[39m +
        [32m'   | \t\t\t^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m'  --> test:17:4:\n'[39m +
        [32m'   |\n'[39m +
        [32m'17 | \t\t\tassert(x == 1); // should fail\n'[39m +
        [32m'   | \t\t\t^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### Running /home/solc-js/regression/try_catch/try_multiple_returned_values_with_tuple.sol ...
### ... with solver Eldarica Vanilla
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m'  --> test:21:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'21 | \t\tassert(success); // fails, not guaranteed that there will be no error\n'[39m +
        [32m'   | \t\t^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### ... with solver Spacer Quant
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m'  --> test:21:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'21 | \t\tassert(success); // fails, not guaranteed that there will be no error\n'[39m +
        [32m'   | \t\t^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### Running /home/solc-js/regression/try_catch/try_nested_1.sol ...
### ... with solver Eldarica Vanilla
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m'  --> test:16:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'16 | \t\tassert(y == 42); // should fail\n'[39m +
        [32m'   | \t\t^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### ... with solver Spacer Quant
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m'  --> test:16:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'16 | \t\tassert(y == 42); // should fail\n'[39m +
        [32m'   | \t\t^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### Running /home/solc-js/regression/try_catch/try_nested_2.sol ...
### ... with solver Eldarica Vanilla
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m'  --> test:17:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'17 | \t\tassert(choice == 42); // should fail\n'[39m +
        [32m'   | \t\t^^^^^^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### ... with solver Spacer Quant
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m'  --> test:17:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'17 | \t\tassert(choice == 42); // should fail\n'[39m +
        [32m'   | \t\t^^^^^^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### Running /home/solc-js/regression/try_catch/try_nested_3.sol ...
### ... with solver Eldarica Vanilla
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m'  --> test:17:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'17 | \t\tassert(choice == 42); // should fail\n'[39m +
        [32m'   | \t\t^^^^^^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### ... with solver Spacer Quant
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m'  --> test:17:3:\n'[39m +
        [32m'   |\n'[39m +
        [32m'17 | \t\tassert(choice == 42); // should fail\n'[39m +
        [32m'   | \t\t^^^^^^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### Running /home/solc-js/regression/try_catch/try_new.sol ...
### ... with solver Eldarica Vanilla
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'4588'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet implement this type of function call.\n'[39m +
        [32m'  --> test:11:13:\n'[39m +
        [32m'   |\n'[39m +
        [32m'11 |         try new Reverts(i) returns (Reverts r) {\n'[39m +
        [32m'   |             ^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet implement this type of function call.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'4588'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet implement this type of function call.\n'[39m +
        [32m'  --> test:20:13:\n'[39m +
        [32m'   |\n'[39m +
        [32m'20 |         try new Succeeds(i) returns (Succeeds r) {\n'[39m +
        [32m'   |             ^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet implement this type of function call.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### ... with solver Spacer Quant
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'4588'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet implement this type of function call.\n'[39m +
        [32m'  --> test:11:13:\n'[39m +
        [32m'   |\n'[39m +
        [32m'11 |         try new Reverts(i) returns (Reverts r) {\n'[39m +
        [32m'   |             ^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet implement this type of function call.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'4588'[39m,
      formattedMessage: [32m'Warning: Assertion checker does not yet implement this type of function call.\n'[39m +
        [32m'  --> test:20:13:\n'[39m +
        [32m'   |\n'[39m +
        [32m'20 |         try new Succeeds(i) returns (Succeeds r) {\n'[39m +
        [32m'   |             ^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'Assertion checker does not yet implement this type of function call.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### Running /home/solc-js/regression/try_catch/try_public_var.sol ...
### ... with solver Eldarica Vanilla
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m' --> test:8:4:\n'[39m +
        [32m'  |\n'[39m +
        [32m'8 | \t\t\tassert(false); // this fails, because we over-approximate every external call in the way that it can both succeed and fail\n'[39m +
        [32m'  | \t\t\t^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### ... with solver Spacer Quant
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m' --> test:8:4:\n'[39m +
        [32m'  |\n'[39m +
        [32m'8 | \t\t\tassert(false); // this fails, because we over-approximate every external call in the way that it can both succeed and fail\n'[39m +
        [32m'  | \t\t\t^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### Running /home/solc-js/regression/try_catch/try_public_var_mapping.sol ...
### ... with solver Eldarica Vanilla
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m'  --> test:16:4:\n'[39m +
        [32m'   |\n'[39m +
        [32m'16 | \t\t\tassert(m[0][1] == 1); // should fail\n'[39m +
        [32m'   | \t\t\t^^^^^^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### ... with solver Spacer Quant
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m'  --> test:16:4:\n'[39m +
        [32m'   |\n'[39m +
        [32m'16 | \t\t\tassert(m[0][1] == 1); // should fail\n'[39m +
        [32m'   | \t\t\t^^^^^^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### Running /home/solc-js/regression/try_catch/try_string_literal_to_bytes_array.sol ...
### ... with solver Eldarica Vanilla
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m'  --> test:11:4:\n'[39m +
        [32m'   |\n'[39m +
        [32m'11 | \t\t\tassert(b[0] == bytes1(uint8(0)) || b[1] == bytes1(uint8(0))); // should fail\n'[39m +
        [32m'   | \t\t\t^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### ... with solver Spacer Quant
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m'  --> test:11:4:\n'[39m +
        [32m'   |\n'[39m +
        [32m'11 | \t\t\tassert(b[0] == bytes1(uint8(0)) || b[1] == bytes1(uint8(0))); // should fail\n'[39m +
        [32m'   | \t\t\t^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### Running /home/solc-js/regression/try_catch/try_string_literal_to_fixed_bytes.sol ...
### ... with solver Eldarica Vanilla
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m'  --> test:10:4:\n'[39m +
        [32m'   |\n'[39m +
        [32m'10 | \t\t\tassert(uint8(b[0]) == 0 || uint8(b[1]) == 0); // should fail\n'[39m +
        [32m'   | \t\t\t^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
### ... with solver Spacer Quant
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'3805'[39m,
      formattedMessage: [32m'Warning: This is a pre-release compiler version, please do not use it in production.\n'[39m +
        [32m'\n'[39m,
      message: [32m'This is a pre-release compiler version, please do not use it in production.'[39m,
      severity: [32m'warning'[39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'1878'[39m,
      formattedMessage: [32m'Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'3420'[39m,
      formattedMessage: [32m'Warning: Source file does not specify required compiler version!\n'[39m +
        [32m'--> test\n'[39m +
        [32m'\n'[39m,
      message: [32m'Source file does not specify required compiler version!'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    },
    {
      component: [32m'general'[39m,
      errorCode: [32m'6328'[39m,
      formattedMessage: [32m'Warning: CHC: Assertion violation happens here.\n'[39m +
        [32m'  --> test:10:4:\n'[39m +
        [32m'   |\n'[39m +
        [32m'10 | \t\t\tassert(uint8(b[0]) == 0 || uint8(b[1]) == 0); // should fail\n'[39m +
        [32m'   | \t\t\t^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n'[39m +
        [32m'\n'[39m,
      message: [32m'CHC: Assertion violation happens here.'[39m,
      severity: [32m'warning'[39m,
      sourceLocation: [36m[Object][39m,
      type: [32m'Warning'[39m
    }
  ],
  sources: { test: { id: [33m0[39m } }
}
### End output
{"/home/solc-js/regression/try_catch/try_1.sol":[{"notProved":0,"unsafe":1,"safe":0,"winner":true},{"notProved":0,"unsafe":1,"safe":0,"winner":true}],"/home/solc-js/regression/try_catch/try_2.sol":[{"notProved":0,"unsafe":0,"safe":0,"winner":true},{"notProved":0,"unsafe":0,"safe":0,"winner":true}],"/home/solc-js/regression/try_catch/try_3.sol":[{"notProved":0,"unsafe":1,"safe":0,"winner":true},{"notProved":0,"unsafe":1,"safe":0,"winner":true}],"/home/solc-js/regression/try_catch/try_4.sol":[{"notProved":0,"unsafe":2,"safe":0,"winner":true},{"notProved":0,"unsafe":2,"safe":0,"winner":true}],"/home/solc-js/regression/try_catch/try_5.sol":[{"notProved":0,"unsafe":1,"safe":0,"winner":true},{"notProved":0,"unsafe":1,"safe":0,"winner":true}],"/home/solc-js/regression/try_catch/try_call_in_catch_1.sol":[{"notProved":0,"unsafe":0,"safe":0,"winner":true},{"notProved":0,"unsafe":0,"safe":0,"winner":true}],"/home/solc-js/regression/try_catch/try_call_in_catch_2.sol":[{"notProved":0,"unsafe":0,"safe":0,"winner":true},{"notProved":0,"unsafe":0,"safe":0,"winner":true}],"/home/solc-js/regression/try_catch/try_inside_if.sol":[{"notProved":0,"unsafe":0,"safe":0,"winner":true},{"notProved":0,"unsafe":0,"safe":0,"winner":true}],"/home/solc-js/regression/try_catch/try_inside_while.sol":[{"notProved":0,"unsafe":0,"safe":0,"winner":true},{"notProved":0,"unsafe":0,"safe":0,"winner":true}],"/home/solc-js/regression/try_catch/try_multiple_catch_clauses.sol":[{"notProved":0,"unsafe":1,"safe":0,"winner":true},{"notProved":0,"unsafe":1,"safe":0,"winner":true}],"/home/solc-js/regression/try_catch/try_multiple_catch_clauses_2.sol":[{"notProved":0,"unsafe":1,"safe":0,"winner":true},{"notProved":0,"unsafe":1,"safe":0,"winner":true}],"/home/solc-js/regression/try_catch/try_multiple_returned_values.sol":[{"notProved":0,"unsafe":3,"safe":0,"winner":true},{"notProved":0,"unsafe":3,"safe":0,"winner":true}],"/home/solc-js/regression/try_catch/try_multiple_returned_values_with_tuple.sol":[{"notProved":0,"unsafe":1,"safe":0,"winner":true},{"notProved":0,"unsafe":1,"safe":0,"winner":true}],"/home/solc-js/regression/try_catch/try_nested_1.sol":[{"notProved":0,"unsafe":1,"safe":0,"winner":true},{"notProved":0,"unsafe":1,"safe":0,"winner":true}],"/home/solc-js/regression/try_catch/try_nested_2.sol":[{"notProved":0,"unsafe":1,"safe":0,"winner":true},{"notProved":0,"unsafe":1,"safe":0,"winner":true}],"/home/solc-js/regression/try_catch/try_nested_3.sol":[{"notProved":0,"unsafe":1,"safe":0,"winner":true},{"notProved":0,"unsafe":1,"safe":0,"winner":true}],"/home/solc-js/regression/try_catch/try_new.sol":[{"notProved":0,"unsafe":0,"safe":0,"winner":true},{"notProved":0,"unsafe":0,"safe":0,"winner":true}],"/home/solc-js/regression/try_catch/try_public_var.sol":[{"notProved":0,"unsafe":1,"safe":0,"winner":true},{"notProved":0,"unsafe":1,"safe":0,"winner":true}],"/home/solc-js/regression/try_catch/try_public_var_mapping.sol":[{"notProved":0,"unsafe":1,"safe":0,"winner":true},{"notProved":0,"unsafe":1,"safe":0,"winner":true}],"/home/solc-js/regression/try_catch/try_string_literal_to_bytes_array.sol":[{"notProved":0,"unsafe":1,"safe":0,"winner":true},{"notProved":0,"unsafe":1,"safe":0,"winner":true}],"/home/solc-js/regression/try_catch/try_string_literal_to_fixed_bytes.sol":[{"notProved":0,"unsafe":1,"safe":0,"winner":true},{"notProved":0,"unsafe":1,"safe":0,"winner":true}]}
