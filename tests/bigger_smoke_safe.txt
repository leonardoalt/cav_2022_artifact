### Running with solver Eldarica Vanilla
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'1180'[39m,
      formattedMessage: [32m'Info: Contract invariant(s) for fileName:BinaryMachine:\n'[39m +
        [32m'((x <= 1) && (x >= 0))\n'[39m +
        [32m'\n'[39m +
        [32m'\n'[39m,
      message: [32m'Contract invariant(s) for fileName:BinaryMachine:\n'[39m +
        [32m'((x <= 1) && (x >= 0))\n'[39m,
      severity: [32m'info'[39m,
      type: [32m'Info'[39m
    }
  ],
  sources: { fileName: { id: [33m0[39m } }
}
### End output
### Running with solver Eldarica No Abstraction
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'1180'[39m,
      formattedMessage: [32m'Info: Contract invariant(s) for fileName:BinaryMachine:\n'[39m +
        [32m'((x <= 1) && (x >= 0))\n'[39m +
        [32m'\n'[39m +
        [32m'\n'[39m,
      message: [32m'Contract invariant(s) for fileName:BinaryMachine:\n'[39m +
        [32m'((x <= 1) && (x >= 0))\n'[39m,
      severity: [32m'info'[39m,
      type: [32m'Info'[39m
    }
  ],
  sources: { fileName: { id: [33m0[39m } }
}
### End output
### Running with solver Eldarica Term Abstraction
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'1180'[39m,
      formattedMessage: [32m'Info: Contract invariant(s) for fileName:BinaryMachine:\n'[39m +
        [32m'((x <= 1) && (x >= 0))\n'[39m +
        [32m'\n'[39m +
        [32m'\n'[39m,
      message: [32m'Contract invariant(s) for fileName:BinaryMachine:\n'[39m +
        [32m'((x <= 1) && (x >= 0))\n'[39m,
      severity: [32m'info'[39m,
      type: [32m'Info'[39m
    }
  ],
  sources: { fileName: { id: [33m0[39m } }
}
### End output
### Running with solver Eldarica Oct Abstraction
### Entire output:
{
  errors: [
    {
      component: [32m'general'[39m,
      errorCode: [32m'1180'[39m,
      formattedMessage: [32m'Info: Contract invariant(s) for fileName:BinaryMachine:\n'[39m +
        [32m'((x <= 1) && (x >= 0))\n'[39m +
        [32m'\n'[39m +
        [32m'\n'[39m,
      message: [32m'Contract invariant(s) for fileName:BinaryMachine:\n'[39m +
        [32m'((x <= 1) && (x >= 0))\n'[39m,
      severity: [32m'info'[39m,
      type: [32m'Info'[39m
    }
  ],
  sources: { fileName: { id: [33m0[39m } }
}
### End output
### Running with solver Spacer Vanilla
### Entire output:
{ errors: [], sources: { fileName: { id: [33m0[39m } } }
### End output
### Running with solver Spacer Quant
### Entire output:
{ errors: [], sources: { fileName: { id: [33m0[39m } } }
### End output
##### Solver Eldarica Vanilla invariants:
Info: Contract invariant(s) for fileName:BinaryMachine:
((x <= 1) && (x >= 0))



##### End invariants
##### Solver Eldarica No Abstraction invariants:
Info: Contract invariant(s) for fileName:BinaryMachine:
((x <= 1) && (x >= 0))



##### End invariants
##### Solver Eldarica Term Abstraction invariants:
Info: Contract invariant(s) for fileName:BinaryMachine:
((x <= 1) && (x >= 0))



##### End invariants
##### Solver Eldarica Oct Abstraction invariants:
Info: Contract invariant(s) for fileName:BinaryMachine:
((x <= 1) && (x >= 0))



##### End invariants


####### Final solving and time report:
Solver Eldarica Vanilla solved in 10948.59669995308ms
Solver Eldarica No Abstraction solved in 4982.762200117111ms
Solver Eldarica Term Abstraction solved in 5232.899399995804ms
Solver Eldarica Oct Abstraction solved in 4018.1858999729156ms
Solver Spacer Vanilla solved in 123.71280002593994ms
Solver Spacer Quant solved in 125.34999990463257ms
